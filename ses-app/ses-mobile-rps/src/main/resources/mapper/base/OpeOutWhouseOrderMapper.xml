<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.redescooter.ses.mobile.rps.dao.base.OpeOutWhouseOrderMapper">
  <resultMap id="BaseResultMap" type="com.redescooter.ses.mobile.rps.dm.OpeOutWhouseOrder">
    <!--@mbg.generated-->
    <!--@Table ope_out_whouse_order-->
    <id column="id" property="id" />
    <result column="dr" property="dr" />
    <result column="tenant_id" property="tenantId" />
    <result column="dept_id" property="deptId" />
    <result column="invoice_id" property="invoiceId" />
    <result column="invoice_no" property="invoiceNo" />
    <result column="out_wh_no" property="outWhNo" />
    <result column="out_wh_status" property="outWhStatus" />
    <result column="out_wh_type" property="outWhType" />
    <result column="out_type" property="outType" />
    <result column="out_wh_qty" property="outWhQty" />
    <result column="country_code" property="countryCode" />
    <result column="telephone" property="telephone" />
    <result column="mail" property="mail" />
    <result column="remark" property="remark" />
    <result column="created_by" property="createdBy" />
    <result column="created_time" property="createdTime" />
    <result column="updated_by" property="updatedBy" />
    <result column="updated_time" property="updatedTime" />
    <result column="def1" property="def1" />
    <result column="def2" property="def2" />
    <result column="def3" property="def3" />
    <result column="def4" property="def4" />
    <result column="def5" property="def5" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, dr, tenant_id, dept_id, invoice_id, invoice_no, out_wh_no, out_wh_status, out_wh_type, 
    out_type, out_wh_qty, country_code, telephone, mail, remark, created_by, created_time, 
    updated_by, updated_time, def1, def2, def3, def4, def5
  </sql>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update ope_out_whouse_order
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="dr = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.dr}
        </foreach>
      </trim>
      <trim prefix="tenant_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.tenantId}
        </foreach>
      </trim>
      <trim prefix="dept_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.deptId}
        </foreach>
      </trim>
      <trim prefix="invoice_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.invoiceId}
        </foreach>
      </trim>
      <trim prefix="invoice_no = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.invoiceNo}
        </foreach>
      </trim>
      <trim prefix="out_wh_no = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.outWhNo}
        </foreach>
      </trim>
      <trim prefix="out_wh_status = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.outWhStatus}
        </foreach>
      </trim>
      <trim prefix="out_wh_type = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.outWhType}
        </foreach>
      </trim>
      <trim prefix="out_type = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.outType}
        </foreach>
      </trim>
      <trim prefix="out_wh_qty = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.outWhQty}
        </foreach>
      </trim>
      <trim prefix="country_code = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.countryCode}
        </foreach>
      </trim>
      <trim prefix="telephone = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.telephone}
        </foreach>
      </trim>
      <trim prefix="mail = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.mail}
        </foreach>
      </trim>
      <trim prefix="remark = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.remark}
        </foreach>
      </trim>
      <trim prefix="created_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.createdBy}
        </foreach>
      </trim>
      <trim prefix="created_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.createdTime}
        </foreach>
      </trim>
      <trim prefix="updated_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.updatedBy}
        </foreach>
      </trim>
      <trim prefix="updated_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.updatedTime}
        </foreach>
      </trim>
      <trim prefix="def1 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.def1}
        </foreach>
      </trim>
      <trim prefix="def2 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.def2}
        </foreach>
      </trim>
      <trim prefix="def3 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.def3}
        </foreach>
      </trim>
      <trim prefix="def4 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.def4}
        </foreach>
      </trim>
      <trim prefix="def5 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.def5}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id}
    </foreach>
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--@mbg.generated-->
    insert into ope_out_whouse_order
    (id, dr, tenant_id, dept_id, invoice_id, invoice_no, out_wh_no, out_wh_status, out_wh_type, 
      out_type, out_wh_qty, country_code, telephone, mail, remark, created_by, created_time, 
      updated_by, updated_time, def1, def2, def3, def4, def5)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id}, #{item.dr}, #{item.tenantId}, #{item.deptId}, #{item.invoiceId}, #{item.invoiceNo}, 
        #{item.outWhNo}, #{item.outWhStatus}, #{item.outWhType}, #{item.outType}, #{item.outWhQty}, 
        #{item.countryCode}, #{item.telephone}, #{item.mail}, #{item.remark}, #{item.createdBy}, 
        #{item.createdTime}, #{item.updatedBy}, #{item.updatedTime}, #{item.def1}, #{item.def2}, 
        #{item.def3}, #{item.def4}, #{item.def5})
    </foreach>
  </insert>
  <insert id="insertOrUpdate" parameterType="com.redescooter.ses.mobile.rps.dm.OpeOutWhouseOrder">
    <!--@mbg.generated-->
    insert into ope_out_whouse_order
    (id, dr, tenant_id, dept_id, invoice_id, invoice_no, out_wh_no, out_wh_status, out_wh_type, 
      out_type, out_wh_qty, country_code, telephone, mail, remark, created_by, created_time, 
      updated_by, updated_time, def1, def2, def3, def4, def5)
    values
    (#{id}, #{dr}, #{tenantId}, #{deptId}, #{invoiceId}, #{invoiceNo}, #{outWhNo}, #{outWhStatus}, 
      #{outWhType}, #{outType}, #{outWhQty}, #{countryCode}, #{telephone}, #{mail}, #{remark}, 
      #{createdBy}, #{createdTime}, #{updatedBy}, #{updatedTime}, #{def1}, #{def2}, #{def3}, 
      #{def4}, #{def5})
    on duplicate key update 
    id = #{id}, 
    dr = #{dr}, 
    tenant_id = #{tenantId}, 
    dept_id = #{deptId}, 
    invoice_id = #{invoiceId}, 
    invoice_no = #{invoiceNo}, 
    out_wh_no = #{outWhNo}, 
    out_wh_status = #{outWhStatus}, 
    out_wh_type = #{outWhType}, 
    out_type = #{outType}, 
    out_wh_qty = #{outWhQty}, 
    country_code = #{countryCode}, 
    telephone = #{telephone}, 
    mail = #{mail}, 
    remark = #{remark}, 
    created_by = #{createdBy}, 
    created_time = #{createdTime}, 
    updated_by = #{updatedBy}, 
    updated_time = #{updatedTime}, 
    def1 = #{def1}, 
    def2 = #{def2}, 
    def3 = #{def3}, 
    def4 = #{def4}, 
    def5 = #{def5}
  </insert>
  <insert id="insertOrUpdateSelective" parameterType="com.redescooter.ses.mobile.rps.dm.OpeOutWhouseOrder">
    <!--@mbg.generated-->
    insert into ope_out_whouse_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="dr != null">
        dr,
      </if>
      <if test="tenantId != null">
        tenant_id,
      </if>
      <if test="deptId != null">
        dept_id,
      </if>
      <if test="invoiceId != null">
        invoice_id,
      </if>
      <if test="invoiceNo != null">
        invoice_no,
      </if>
      <if test="outWhNo != null">
        out_wh_no,
      </if>
      <if test="outWhStatus != null">
        out_wh_status,
      </if>
      <if test="outWhType != null">
        out_wh_type,
      </if>
      <if test="outType != null">
        out_type,
      </if>
      <if test="outWhQty != null">
        out_wh_qty,
      </if>
      <if test="countryCode != null">
        country_code,
      </if>
      <if test="telephone != null">
        telephone,
      </if>
      <if test="mail != null">
        mail,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="updatedBy != null">
        updated_by,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
      <if test="def1 != null">
        def1,
      </if>
      <if test="def2 != null">
        def2,
      </if>
      <if test="def3 != null">
        def3,
      </if>
      <if test="def4 != null">
        def4,
      </if>
      <if test="def5 != null">
        def5,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id},
      </if>
      <if test="dr != null">
        #{dr},
      </if>
      <if test="tenantId != null">
        #{tenantId},
      </if>
      <if test="deptId != null">
        #{deptId},
      </if>
      <if test="invoiceId != null">
        #{invoiceId},
      </if>
      <if test="invoiceNo != null">
        #{invoiceNo},
      </if>
      <if test="outWhNo != null">
        #{outWhNo},
      </if>
      <if test="outWhStatus != null">
        #{outWhStatus},
      </if>
      <if test="outWhType != null">
        #{outWhType},
      </if>
      <if test="outType != null">
        #{outType},
      </if>
      <if test="outWhQty != null">
        #{outWhQty},
      </if>
      <if test="countryCode != null">
        #{countryCode},
      </if>
      <if test="telephone != null">
        #{telephone},
      </if>
      <if test="mail != null">
        #{mail},
      </if>
      <if test="remark != null">
        #{remark},
      </if>
      <if test="createdBy != null">
        #{createdBy},
      </if>
      <if test="createdTime != null">
        #{createdTime},
      </if>
      <if test="updatedBy != null">
        #{updatedBy},
      </if>
      <if test="updatedTime != null">
        #{updatedTime},
      </if>
      <if test="def1 != null">
        #{def1},
      </if>
      <if test="def2 != null">
        #{def2},
      </if>
      <if test="def3 != null">
        #{def3},
      </if>
      <if test="def4 != null">
        #{def4},
      </if>
      <if test="def5 != null">
        #{def5},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id},
      </if>
      <if test="dr != null">
        dr = #{dr},
      </if>
      <if test="tenantId != null">
        tenant_id = #{tenantId},
      </if>
      <if test="deptId != null">
        dept_id = #{deptId},
      </if>
      <if test="invoiceId != null">
        invoice_id = #{invoiceId},
      </if>
      <if test="invoiceNo != null">
        invoice_no = #{invoiceNo},
      </if>
      <if test="outWhNo != null">
        out_wh_no = #{outWhNo},
      </if>
      <if test="outWhStatus != null">
        out_wh_status = #{outWhStatus},
      </if>
      <if test="outWhType != null">
        out_wh_type = #{outWhType},
      </if>
      <if test="outType != null">
        out_type = #{outType},
      </if>
      <if test="outWhQty != null">
        out_wh_qty = #{outWhQty},
      </if>
      <if test="countryCode != null">
        country_code = #{countryCode},
      </if>
      <if test="telephone != null">
        telephone = #{telephone},
      </if>
      <if test="mail != null">
        mail = #{mail},
      </if>
      <if test="remark != null">
        remark = #{remark},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime},
      </if>
      <if test="updatedBy != null">
        updated_by = #{updatedBy},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime},
      </if>
      <if test="def1 != null">
        def1 = #{def1},
      </if>
      <if test="def2 != null">
        def2 = #{def2},
      </if>
      <if test="def3 != null">
        def3 = #{def3},
      </if>
      <if test="def4 != null">
        def4 = #{def4},
      </if>
      <if test="def5 != null">
        def5 = #{def5},
      </if>
    </trim>
  </insert>
</mapper>