<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.redescooter.ses.mobile.rps.dao.base.OpeAssemblyLotTraceMapper">
  <resultMap id="BaseResultMap" type="com.redescooter.ses.mobile.rps.dm.OpeAssemblyLotTrace">
    <!--@mbg.generated-->
    <!--@Table ope_assembly_lot_trace-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="dr" jdbcType="INTEGER" property="dr" />
    <result column="tenant_id" jdbcType="BIGINT" property="tenantId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="assembly_id" jdbcType="BIGINT" property="assemblyId" />
    <result column="quality_inspector_id" jdbcType="BIGINT" property="qualityInspectorId" />
    <result column="batch_no" jdbcType="VARCHAR" property="batchNo" />
    <result column="total_quality_inspected" jdbcType="INTEGER" property="totalQualityInspected" />
    <result column="pass_count" jdbcType="INTEGER" property="passCount" />
    <result column="fail_count" jdbcType="INTEGER" property="failCount" />
    <result column="revision" jdbcType="INTEGER" property="revision" />
    <result column="created_by" jdbcType="BIGINT" property="createdBy" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="updated_by" jdbcType="BIGINT" property="updatedBy" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
    <result column="def1" jdbcType="VARCHAR" property="def1" />
    <result column="def2" jdbcType="VARCHAR" property="def2" />
    <result column="def3" jdbcType="VARCHAR" property="def3" />
    <result column="def5" jdbcType="VARCHAR" property="def5" />
    <result column="def6" jdbcType="DOUBLE" property="def6" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, dr, tenant_id, user_id, assembly_id, quality_inspector_id, batch_no, total_quality_inspected, 
    pass_count, fail_count, revision, created_by, created_time, updated_by, updated_time, 
    def1, def2, def3, def5, def6
  </sql>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update ope_assembly_lot_trace
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="dr = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.dr,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="tenant_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.tenantId,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="user_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.userId,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="assembly_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.assemblyId,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="quality_inspector_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.qualityInspectorId,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="batch_no = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.batchNo,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="total_quality_inspected = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.totalQualityInspected,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="pass_count = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.passCount,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="fail_count = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.failCount,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="revision = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.revision,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="created_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.createdBy,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="created_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.createdTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="updated_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.updatedBy,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="updated_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.updatedTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="def1 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.def1,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="def2 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.def2,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="def3 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.def3,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="def5 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.def5,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="def6 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.def6,jdbcType=DOUBLE}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=BIGINT}
    </foreach>
  </update>
  <update id="updateBatchSelective" parameterType="java.util.List">
    <!--@mbg.generated-->
    update ope_assembly_lot_trace
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="dr = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.dr != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.dr,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="tenant_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.tenantId != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.tenantId,jdbcType=BIGINT}
          </if>
        </foreach>
      </trim>
      <trim prefix="user_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.userId != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.userId,jdbcType=BIGINT}
          </if>
        </foreach>
      </trim>
      <trim prefix="assembly_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.assemblyId != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.assemblyId,jdbcType=BIGINT}
          </if>
        </foreach>
      </trim>
      <trim prefix="quality_inspector_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.qualityInspectorId != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.qualityInspectorId,jdbcType=BIGINT}
          </if>
        </foreach>
      </trim>
      <trim prefix="batch_no = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.batchNo != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.batchNo,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="total_quality_inspected = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.totalQualityInspected != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.totalQualityInspected,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="pass_count = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.passCount != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.passCount,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="fail_count = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.failCount != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.failCount,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="revision = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.revision != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.revision,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="created_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.createdBy != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.createdBy,jdbcType=BIGINT}
          </if>
        </foreach>
      </trim>
      <trim prefix="created_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.createdTime != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.createdTime,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
      <trim prefix="updated_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.updatedBy != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.updatedBy,jdbcType=BIGINT}
          </if>
        </foreach>
      </trim>
      <trim prefix="updated_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.updatedTime != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.updatedTime,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
      <trim prefix="def1 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.def1 != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.def1,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="def2 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.def2 != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.def2,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="def3 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.def3 != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.def3,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="def5 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.def5 != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.def5,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="def6 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.def6 != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.def6,jdbcType=DOUBLE}
          </if>
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=BIGINT}
    </foreach>
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--@mbg.generated-->
    insert into ope_assembly_lot_trace
    (id, dr, tenant_id, user_id, assembly_id, quality_inspector_id, batch_no, total_quality_inspected, 
      pass_count, fail_count, revision, created_by, created_time, updated_by, updated_time, 
      def1, def2, def3, def5, def6)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.dr,jdbcType=INTEGER}, #{item.tenantId,jdbcType=BIGINT}, 
        #{item.userId,jdbcType=BIGINT}, #{item.assemblyId,jdbcType=BIGINT}, #{item.qualityInspectorId,jdbcType=BIGINT}, 
        #{item.batchNo,jdbcType=VARCHAR}, #{item.totalQualityInspected,jdbcType=INTEGER}, 
        #{item.passCount,jdbcType=INTEGER}, #{item.failCount,jdbcType=INTEGER}, #{item.revision,jdbcType=INTEGER}, 
        #{item.createdBy,jdbcType=BIGINT}, #{item.createdTime,jdbcType=TIMESTAMP}, #{item.updatedBy,jdbcType=BIGINT}, 
        #{item.updatedTime,jdbcType=TIMESTAMP}, #{item.def1,jdbcType=VARCHAR}, #{item.def2,jdbcType=VARCHAR}, 
        #{item.def3,jdbcType=VARCHAR}, #{item.def5,jdbcType=VARCHAR}, #{item.def6,jdbcType=DOUBLE}
        )
    </foreach>
  </insert>
  <insert id="insertOrUpdate" parameterType="com.redescooter.ses.mobile.rps.dm.OpeAssemblyLotTrace">
    <!--@mbg.generated-->
    insert into ope_assembly_lot_trace
    (id, dr, tenant_id, user_id, assembly_id, quality_inspector_id, batch_no, total_quality_inspected, 
      pass_count, fail_count, revision, created_by, created_time, updated_by, updated_time, 
      def1, def2, def3, def5, def6)
    values
    (#{id,jdbcType=BIGINT}, #{dr,jdbcType=INTEGER}, #{tenantId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, 
      #{assemblyId,jdbcType=BIGINT}, #{qualityInspectorId,jdbcType=BIGINT}, #{batchNo,jdbcType=VARCHAR}, 
      #{totalQualityInspected,jdbcType=INTEGER}, #{passCount,jdbcType=INTEGER}, #{failCount,jdbcType=INTEGER}, 
      #{revision,jdbcType=INTEGER}, #{createdBy,jdbcType=BIGINT}, #{createdTime,jdbcType=TIMESTAMP}, 
      #{updatedBy,jdbcType=BIGINT}, #{updatedTime,jdbcType=TIMESTAMP}, #{def1,jdbcType=VARCHAR}, 
      #{def2,jdbcType=VARCHAR}, #{def3,jdbcType=VARCHAR}, #{def5,jdbcType=VARCHAR}, #{def6,jdbcType=DOUBLE}
      )
    on duplicate key update 
    id = #{id,jdbcType=BIGINT}, 
    dr = #{dr,jdbcType=INTEGER}, 
    tenant_id = #{tenantId,jdbcType=BIGINT}, 
    user_id = #{userId,jdbcType=BIGINT}, 
    assembly_id = #{assemblyId,jdbcType=BIGINT}, 
    quality_inspector_id = #{qualityInspectorId,jdbcType=BIGINT}, 
    batch_no = #{batchNo,jdbcType=VARCHAR}, 
    total_quality_inspected = #{totalQualityInspected,jdbcType=INTEGER}, 
    pass_count = #{passCount,jdbcType=INTEGER}, 
    fail_count = #{failCount,jdbcType=INTEGER}, 
    revision = #{revision,jdbcType=INTEGER}, 
    created_by = #{createdBy,jdbcType=BIGINT}, 
    created_time = #{createdTime,jdbcType=TIMESTAMP}, 
    updated_by = #{updatedBy,jdbcType=BIGINT}, 
    updated_time = #{updatedTime,jdbcType=TIMESTAMP}, 
    def1 = #{def1,jdbcType=VARCHAR}, 
    def2 = #{def2,jdbcType=VARCHAR}, 
    def3 = #{def3,jdbcType=VARCHAR}, 
    def5 = #{def5,jdbcType=VARCHAR}, 
    def6 = #{def6,jdbcType=DOUBLE}
  </insert>
  <insert id="insertOrUpdateSelective" parameterType="com.redescooter.ses.mobile.rps.dm.OpeAssemblyLotTrace">
    <!--@mbg.generated-->
    insert into ope_assembly_lot_trace
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="dr != null">
        dr,
      </if>
      <if test="tenantId != null">
        tenant_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="assemblyId != null">
        assembly_id,
      </if>
      <if test="qualityInspectorId != null">
        quality_inspector_id,
      </if>
      <if test="batchNo != null">
        batch_no,
      </if>
      <if test="totalQualityInspected != null">
        total_quality_inspected,
      </if>
      <if test="passCount != null">
        pass_count,
      </if>
      <if test="failCount != null">
        fail_count,
      </if>
      <if test="revision != null">
        revision,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="updatedBy != null">
        updated_by,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
      <if test="def1 != null">
        def1,
      </if>
      <if test="def2 != null">
        def2,
      </if>
      <if test="def3 != null">
        def3,
      </if>
      <if test="def5 != null">
        def5,
      </if>
      <if test="def6 != null">
        def6,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="dr != null">
        #{dr,jdbcType=INTEGER},
      </if>
      <if test="tenantId != null">
        #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="assemblyId != null">
        #{assemblyId,jdbcType=BIGINT},
      </if>
      <if test="qualityInspectorId != null">
        #{qualityInspectorId,jdbcType=BIGINT},
      </if>
      <if test="batchNo != null">
        #{batchNo,jdbcType=VARCHAR},
      </if>
      <if test="totalQualityInspected != null">
        #{totalQualityInspected,jdbcType=INTEGER},
      </if>
      <if test="passCount != null">
        #{passCount,jdbcType=INTEGER},
      </if>
      <if test="failCount != null">
        #{failCount,jdbcType=INTEGER},
      </if>
      <if test="revision != null">
        #{revision,jdbcType=INTEGER},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=BIGINT},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=BIGINT},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="def1 != null">
        #{def1,jdbcType=VARCHAR},
      </if>
      <if test="def2 != null">
        #{def2,jdbcType=VARCHAR},
      </if>
      <if test="def3 != null">
        #{def3,jdbcType=VARCHAR},
      </if>
      <if test="def5 != null">
        #{def5,jdbcType=VARCHAR},
      </if>
      <if test="def6 != null">
        #{def6,jdbcType=DOUBLE},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=BIGINT},
      </if>
      <if test="dr != null">
        dr = #{dr,jdbcType=INTEGER},
      </if>
      <if test="tenantId != null">
        tenant_id = #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="assemblyId != null">
        assembly_id = #{assemblyId,jdbcType=BIGINT},
      </if>
      <if test="qualityInspectorId != null">
        quality_inspector_id = #{qualityInspectorId,jdbcType=BIGINT},
      </if>
      <if test="batchNo != null">
        batch_no = #{batchNo,jdbcType=VARCHAR},
      </if>
      <if test="totalQualityInspected != null">
        total_quality_inspected = #{totalQualityInspected,jdbcType=INTEGER},
      </if>
      <if test="passCount != null">
        pass_count = #{passCount,jdbcType=INTEGER},
      </if>
      <if test="failCount != null">
        fail_count = #{failCount,jdbcType=INTEGER},
      </if>
      <if test="revision != null">
        revision = #{revision,jdbcType=INTEGER},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=BIGINT},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        updated_by = #{updatedBy,jdbcType=BIGINT},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="def1 != null">
        def1 = #{def1,jdbcType=VARCHAR},
      </if>
      <if test="def2 != null">
        def2 = #{def2,jdbcType=VARCHAR},
      </if>
      <if test="def3 != null">
        def3 = #{def3,jdbcType=VARCHAR},
      </if>
      <if test="def5 != null">
        def5 = #{def5,jdbcType=VARCHAR},
      </if>
      <if test="def6 != null">
        def6 = #{def6,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
</mapper>