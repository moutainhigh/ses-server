<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.redescooter.ses.mobile.rps.dao.material.MaterialServiceMapper">
    <select id="list" resultType="com.redescooter.ses.mobile.rps.vo.materialqc.MaterialQcListResult">
        select purchas.id                 as id,
               purchas.created_time       as createdTime,
               purchas.contract_no        as purchasN,
               purchas.lave_wait_qc_total as laveWaitQcTotal
        from ope_purchas purchas
        where purchas.dr = 0
          and purchas.status = 3
        order by created_time asc
        limit #{startRow},#{pageSize}
    </select>

    <select id="materialQcDetailListCount" resultType="java.lang.Integer">
         select count(*)
            from ope_purchas_b purchasb
                     inner join ope_parts parts on parts.id = purchasb.part_id and parts.dr = 0
                     inner join ope_purchas purchas on purchas.id = purchasb.purchas_id and purchas.status = 3
            where purchasb.dr = 0
              and purchasb.purchas_id=#{id}
    </select>

    <select id="detailList" resultType="com.redescooter.ses.mobile.rps.vo.materialqc.MaterialDetailResult">
        select purchasb.id               as id,
               purchasb.part_id          as partId,
               parts.cn_name             as partCnName,
               parts.parts_number        as partN,
               parts.id_class            as idClass,
               purchasb.lave_wait_qc_qty as laveWaitQcQty
        from ope_purchas_b purchasb
                 inner join ope_parts parts on parts.id = purchasb.part_id and parts.dr=0
                 inner join ope_purchas purchas on purchas.id = purchasb.purchas_id and purchas.status = 3
        where purchasb.dr=0
        and purchasb.purchas_id=#{id}
    </select>
    <select id="failListCount" resultType="int">
        select count(*)
            from ope_purchas purchas
             left join ope_purchas_b purchasb on purchasb.purchas_id = purchas.id and purchasb.dr=0
             left join ope_purchas_b_qc purchasbqc on purchasbqc.purchas_b_id = purchasb.id and purchasbqc.dr=0
            where purchas.dr = 0
            and purchasbqc.fail_count!=0
    </select>
    <select id="failList" resultType="com.redescooter.ses.mobile.rps.vo.materialqc.MaterialQcListResult">
        select purchas.id                 as id,
                   purchas.created_time       as createdTime,
                   purchas.contract_no        as purchasN,
                   ifnull(sum(purchasbqc.fail_count),0)  as laveWaitQcTotal
            from ope_purchas purchas
             left join ope_purchas_b purchasb on purchasb.purchas_id = purchas.id and purchasb.dr=0
             left join ope_purchas_b_qc purchasbqc on purchasbqc.purchas_b_id = purchasb.id and purchasbqc.dr=0
            where purchas.dr = 0
            and purchasbqc.fail_count!=0
            group by id,createdTime,purchasN
            limit #{startRow},#{pageSize}
    </select>
    <select id="qcFailDetailCount" resultType="int">
        select count(*)
                from ope_purchas_b_qc purchasbqc
                         inner join ope_purchas_b purchasb on purchasbqc.purchas_b_id = purchasb.id and purchasb.dr = 0
                         inner join ope_parts parts on parts.id = purchasb.part_id and parts.dr = 0
                where purchasbqc.dr = 0
                and purchasbqc.fail_count !=0
    </select>

    <select id="qcFailDetail" resultType="com.redescooter.ses.mobile.rps.vo.materialqc.MaterialDetailResult">
        select purchasb.id           as id,
               purchasb.purchas_id   as purchasId,
               purchasb.part_id      as partId,
               parts.cn_name         as partCnName,
               parts_number          as partN,
               parts.id_class        as idClass,
               purchasbqc.fail_count as laveWaitQcQty
        from ope_purchas_b_qc purchasbqc
                 inner join ope_purchas_b purchasb on purchasbqc.purchas_b_id = purchasb.id and purchasb.dr = 0
                 inner join ope_parts parts on parts.id = purchasb.part_id and parts.dr = 0
        where purchasbqc.dr = 0
        and purchasbqc.fail_count !=0
        order by purchasb.created_time asc
        limit #{startRow},#{pageSize}
    </select>
    <select id="qcFailType" resultType="java.lang.Integer">
        select count(purchas.id)
        from ope_purchas purchas
                 left join ope_purchas_b purchasb on purchas.id = purchasb.purchas_id
                 inner join ope_purchas_b_qc purchasbqc on purchasb.id = purchasbqc.purchas_b_id
        where purchasbqc.fail_count != 0
    </select>
    <select id="partDetailById" resultType="com.redescooter.ses.mobile.rps.vo.bo.RpsPartDetailDto">
        select parts.id as partId,
        ifnull(sheet.price,0) as price,
        sheet.currency_unit as unit,
        supplier_id as supplierId
        from ope_parts parts
        inner join ope_supplier supplier on parts.supplier_id = supplier.id and supplier.dr = 0
        left join ope_price_sheet sheet on parts.id = sheet.parts_id and sheet.currency_unit = 1 and sheet.dr = 0
        where parts.dr=0
        <if test="collection != null and collection.size() != 0">
            and parts.id in
            <foreach collection="list" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    </select>
</mapper>