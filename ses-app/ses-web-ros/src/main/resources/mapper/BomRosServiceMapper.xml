<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.redescooter.ses.web.ros.dao.bom.BomRosServiceMapper">

    <sql id="field_partList">
        opp.id as id,
        opp.product_number as productN,
        opp.en_name as productEnName,
        opp.fr_name as productFrName,
        opp.cn_name as productCnName,
        opp.sum_parts_qty as qty,
        opp.production_cycle as productionCycle
    </sql>

    <sql id="field_combinationList">
       opp.id                                 as id,
       opp.product_type                       as productN,
       opp.fr_name                            as productFrName,
       opp.en_name                            as productEnName,
       opp.cn_name                            as productCnName,
       ifnull(opp.sum_parts_qty, 0)           as qty,
       if(opp.sum_parts_qty = 0, false, true) as partList
    </sql>

    <sql id="where_combinationList">
        where opp.dr = 0
        and opp.product_type = 5
        and opp.user_id=#{userId}
        <if test="keyword != null and keyword != ''">
            and (opp.product_number like concat('%',#{keyword},'%')
            or opp.en_name like concat('%',#{keyword},'%')
            or opp.cn_name like concat('%',#{keyword},'%')
            or opp.fr_name like concat('%',#{keyword},'%')
            )
        </if>
    </sql>

    <sql id="where_ScooterList">
        where opp.dr = 0
        and opp.user_id=#{userId}
        and opp.product_type=4
        <if test="keyword != null and keyword != ''">
            and (opp.cn_name like concat('%',#{keyword},'%')
            or opp.fr_name like concat('%',#{keyword},'%')
            or opp.en_name like concat('%',#{keyword},'%')
            or opp.product_number like concat('%',#{keyword},'%')
            )
        </if>
    </sql>

    <select id="scooterListCount" resultType="java.lang.Integer">
        select count(*)
        from ope_parts_product opp
        <include refid="where_ScooterList"/>
    </select>
    <select id="scooterList" resultType="com.redescooter.ses.web.ros.vo.bom.scooter.ScooterListResult">
        select
        <include refid="field_partList"/>
        from ope_parts_product opp
        <include refid="where_ScooterList"/>
        order by opp.created_time desc
        limit #{startRow},#{pageSize}
    </select>
    <select id="UsingProductNumList" resultType="java.lang.String">
        select productN.*
        from (
                 select parts.parts_number as productN
                 from ope_parts parts
                 where parts.dr=0
                 and  parts.user_id=#{userId}
        union all
                 select opp.product_number as productN
                 from ope_parts_product opp
                 where opp.dr=0
                 and  opp.user_id=#{userId}
             ) productN
    </select>
    <select id="secList" resultType="com.redescooter.ses.web.ros.vo.bom.SecResult">
        select sec.id   as id,
               sec.name as name,
               sec.code as code,
               sec.note as description
        from ope_parts_sec sec
        where sec.dr = 0
    </select>


    <select id="combinationListCount" resultType="int">
        select count(*)
        from ope_parts_product opp
        <include refid="where_combinationList"></include>
    </select>

    <select id="combinationList"
            resultType="com.redescooter.ses.web.ros.vo.bom.combination.CombinationListResult">
        select
        <include refid="field_combinationList"/>
        from ope_parts_product opp
        <include refid="where_combinationList"/>
        order by opp.created_time desc
        limit #{startRow},#{pageSize}
    </select>

    <select id="productDeatilPartList" resultType="com.redescooter.ses.web.ros.vo.bom.QueryPartListResult">
        select
        oppb.id as id,
        parts.id as pratsId,
        parts.parts_number as partsNumber,
        parts.sec as sec,
        parts.en_name as enName,
        parts.cn_name as cnName,
        parts.fr_name as frName,
        ifnull(parts.production_cycle, 0) as productionCycle,
        oppb.parts_qty as qty
        from ope_parts_product_b oppb
        inner join ope_parts parts on oppb.parts_id = parts.id and parts.dr = 0
        where oppb.dr = 0
        and oppb.parts_product_id =#{id}
        and oppb.user_id=#{userId}
    </select>

</mapper>