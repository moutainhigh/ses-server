<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.redescooter.ses.web.ros.dao.SalseRosServiceMapper">

    <sql id="product_List">
        select part.id                as id,
        part.cn_name as productCnName,
        part.en_name as productEnName,
        part.fr_name as productFrName,
        part.parts_number as productN,
        part.parts_type as type,
        part.updated_time as refuseTime,
        if(1 = 0, true, false) as productListDetail
        from ope_parts part
        where part.parts_type in ('Battery', 'Accessory')
        and part.sn_class_flag = 1
        and part.user_id=#{userId}
        UNION ALL
        select ass.id,
        ass.cn_name as productCnName,
        ass.en_name as productEnName,
        ass.fr_name as productFrName,
        ass.ass_number as productN,
        if(ass.ass_type = 1, 'Scooter', 'Combination') as type,
        ass.updated_time as refuseTime,
        if(1 = 1, true, false) as productListDetail
        from ope_parts_assembly ass
        where ass.ass_type = 1
        and ass.sn_class_flag = 1
        and ass.user_id=#{userId}
    </sql>

    <sql id="where_AfterSaleList">
        select part.id                as id,
        part.cn_name as productCnName,
        part.en_name as productEnName,
        part.fr_name as productFrName,
        part.parts_number as productN,
        part.parts_type as type,
        part.updated_time as refuseTime,
        if(1 = 0, true, false) as productListDetail
        from ope_parts part
        where part.parts_type ='Parts'
        and part.sn_class_flag = 1
        and part.user_id=#{userId}
        UNION ALL
        select ass.id,
        ass.cn_name as productCnName,
        ass.en_name as productEnName,
        ass.fr_name as productFrName,
        ass.ass_number as productN,
        if(ass.ass_type = 1, 'Scooter', 'Combination') as type,
        ass.updated_time as refuseTime,
        if(1 = 1, true, false) as productListDetail
        from ope_parts_assembly ass
        where ass.ass_type = 2
        and ass.sn_class_flag = 1
        and ass.user_id=#{userId}

    </sql>

    <sql id="where_ProductList">
        where 1=1
        <if test="type != null and type != ''">
            and a.type=#{type}
        </if>
        <if test="refuseStartTime != null and refuseEndTime != null">
            and a.refuseTime between #{refuseStartTime} and #{refuseEndTime}
        </if>
        <if test="keyword != null and keyword != ''">
            and (
            a.productCnName like concat('%',#{keyword},'%')
            or a.productEnName like concat('%',#{keyword},'%')
            or a.productFrName like concat('%',#{keyword},'%')
            or a.productN like concat('%',#{keyword},'%')
            )
        </if>
    </sql>

    <sql id="where_SccPriceHistroyList">
        select priceResoult.id,

        nullif(sum(priceResoult.enPrice), 0) as productFrPrice,
        nullif(sum(priceResoult.frPrice), 0) as productEnPrice,
        priceResoult.createdTime as refuseTime
        from (select orpsh.assembly_id as id,

        format(orpsh.sales_price, 2) as enPrice,
        orpsh.currency_type as enCurrencyType,
        orpsh.created_time as createdTime,
        0 as frPrice,
        null as frCurrencyType
        from ope_regional_price_sheet_history orpsh
        where 1 = 1
        <if test="id!=null and id != 0">
            and (orpsh.assembly_id = #{id} or orpsh.part_id = #{id})
        </if>
        and orpsh.dr = 0
        group by enPrice, enCurrencyType, createdTime, id
        having enCurrencyType = 'EN'
        union all
        select orpsh.assembly_id as id,
        0 as enPrice,
        null as enCurrencyType,
        orpsh.created_time as createdTime,
        format(orpsh.sales_price, 2) as frPrice,
        orpsh.currency_type as frCurrencyType
        from ope_regional_price_sheet_history orpsh
        where 1 = 1
        <if test="id!=null and id != 0">
            and (orpsh.assembly_id = #{id} or orpsh.part_id = #{id})
        </if>
        and orpsh.dr = 0
        group by frPrice, frCurrencyType, createdTime, id
        having frCurrencyType = 'FR') priceResoult
        group by priceResoult.createdTime, id
    </sql>

    <select id="productListCount" resultType="java.lang.Integer">
        select count(*)
        from (<include refid="product_List"/>) a
        <include refid="where_ProductList"></include>
    </select>

    <select id="productList" resultType="com.redescooter.ses.web.ros.vo.bom.sales.ProductListResult">
        select a.*
        from (<include refid="product_List"/>) a
        <include refid="where_ProductList"></include>
        limit #{startRow},#{pageSize}
    </select>

    <select id="productCount" resultType="java.lang.Integer">
        select count(*)
        from (
        <include refid="product_List"/>
        ) a
    </select>

    <select id="afterSaleCount" resultType="java.lang.Integer">
        select count(*)
        from (<include refid="where_AfterSaleList"/>) a
    </select>

    <select id="afterSaleListCount" resultType="java.lang.Integer">
        select count(*)
        from (<include refid="where_AfterSaleList"/>) a
        <include refid="where_ProductList"/>
    </select>

    <select id="afterSaleList" resultType="com.redescooter.ses.web.ros.vo.bom.sales.ProductListResult">
        select a.*
        from (<include refid="where_AfterSaleList"/>) a
        <include refid="where_ProductList"/>
        limit #{startRow},#{pageSize}
    </select>

    <select id="productPriceList" resultType="com.redescooter.ses.web.ros.dm.OpeRegionalPriceSheet">
        select *
        from ope_regional_price_sheet sheet
        where sheet.dr = 0
        and sheet.user_id = #{userId}
        and (sheet.assembly_id = #{id} or sheet.part_id =#{id} )
    </select>
    <select id="sccPriceHistroyCount" resultType="java.lang.Integer">
        select count(*)
        from (
        <include refid="where_SccPriceHistroyList"/>
        ) result
    </select>
    <select id="sccPriceHistroyList" resultType="com.redescooter.ses.web.ros.vo.bom.sales.SccPriceResult">
        select *
        from (
        <include refid="where_SccPriceHistroyList"/>
        ) result
    </select>
</mapper>