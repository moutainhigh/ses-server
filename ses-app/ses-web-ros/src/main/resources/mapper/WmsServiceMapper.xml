<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.redescooter.ses.web.ros.dao.WmsServiceMapper">
  <sql id="where_wmsProductList">
    WHERE
    s.dr=0
    <if test="enter.type!=''and enter.type!=null">
      and s.materiel_product_type=#{enter.type}
    </if>
    <if test="enter.keyword!=''and enter.keyword!=null">
      and (
      b.cn_name like concat ("%",#{enter.keyword},"%") or
      b.en_name like concat ("%",#{enter.keyword},"%") or
      b.product_number like concat ("%",#{enter.keyword},"%")
      )
    </if>
  </sql>
  <sql id="where_wmsPartsList">
    WHERE
    s.dr=0
    <if test="enter.type!=''and enter.type!=null">
      and s.materiel_product_type=#{enter.type}
    </if>
    <if test="enter.keyword!=''and enter.keyword!=null">
      and (
      p.cn_name like concat ("%",#{enter.keyword},"%") or
      p.en_name like concat ("%",#{enter.keyword},"%") or
      p.parts_number like concat ("%",#{enter.keyword},"%")
      )
    </if>
  </sql>
  <select
    id="wmsUsableStockCount" resultType="int">
    SELECT
    count(*) from (
    select
    b.cn_name as cnName,
    b.en_name as enName,
    b.product_number as productNumber,
    s.int_total as intTotal,
    s.materiel_product_type as productType,
    e.sales_price as price
    FROM
    ope_stock s
    JOIN ope_parts_product b ON s.materiel_product_id = b.id and b.dr = 0
    JOIN ope_regional_price_sheet e ON b.id = e.parts_product_id and e.dr = 0
    <include refid="where_wmsProductList">
    </include>
    UNION
    SELECT
    p.cn_name as cnName,
    p.en_name as enName,
    p.parts_number as productNumber,
    s.int_total as intTotal,
    s.materiel_product_type as productType,
    e.price as price
    FROM
    ope_stock s
    JOIN ope_parts p ON s.materiel_product_id = p.id and p.dr = 0
    JOIN ope_price_sheet e ON s.id = e.parts_id and e.dr = 0
    <include refid="where_wmsPartsList">
    </include>
    ) aa
  </select>


  <select id="wmsUsableStockList" resultType="com.redescooter.ses.web.ros.vo.wms.WmsStockAvailableResult">
    SELECT
    * from ((SELECT
    b.cn_name as cnName,
    b.en_name as enName,
    b.product_number as productNumber,
    s.int_total as intTotal,
    s.materiel_product_type as productType,
    e.sales_price as price
    FROM
    ope_stock s
    JOIN ope_parts_product b ON s.materiel_product_id = b.id and b.dr = 0
    JOIN ope_regional_price_sheet e ON b.id = e.parts_product_id and e.dr = 0
    <include refid="where_wmsProductList">
    </include>
    order by s.updated_time desc)
    UNION
    (SELECT
    p.cn_name as cnName,
    p.en_name as enName,
    p.parts_number as productNumber,
    s.int_total as intTotal,
    s.materiel_product_type as productType,
    e.price as price
    FROM
    ope_stock s
    JOIN ope_parts p ON s.materiel_product_id = p.id and p.dr = 0
    JOIN ope_price_sheet e ON s.id = e.parts_id and e.dr = 0
    <include refid="where_wmsPartsList">
    </include>
    order by s.updated_time desc))
    bb limit #{enter.startRow},#{enter.pageSize}
  </select>

  <sql id="where_inHw_allocate">
    WHERE
    e.dr=0
    and e.`status` = 4
    <if test="enter.startTime != null and enter.endTime != null">
      and e.updated_time between #{enter.startTime} and #{enter.endTime}
    </if>
    <if test="enter.keyword!=''and enter.keyword!=null">
      and (
      e.allocate_num like concat ("%",#{enter.keyword},"%") or
      e.consignee_id like concat ("%",#{enter.keyword},"%")
      )
    </if>
  </sql>
  <sql id="where_inHw_assembly">
    WHERE
    r.dr=0
    and r.`status` = 3
    <if test="enter.startTime != null and enter.endTime != null">
      and e.updated_time between #{enter.startTime} and #{enter.endTime}
    </if>
    <if test="enter.keyword!=''and enter.keyword!=null">
      and (
      r.assembly_number like concat ("%",#{enter.keyword},"%") or
      r.consignee_id like concat ("%",#{enter.keyword},"%")
      )
    </if>
  </sql>
  <select id="wmsInWhCount" resultType="int">
    SELECT
    count(*) from (
    SELECT
    e.id as id,
    e.allocate_num as allocateNumber,
    e.count as qty,
    s.full_name as consignee,
    '2' as productType,
    e.updated_time as inWhTime
    FROM
    ope_allocate e
    JOIN ope_sys_user_profile s ON e.consignee_id = s.id and s.dr = 0
    <include refid="where_inHw_allocate"></include>
    UNION
    SELECT
    r.id as id,
    r.assembly_number as allocateNumber,
    r.in_wait_wh_total as qty,
    s.full_name as consignee,
    '3' as productType,
    r.updated_time as inWhTime
    FROM
    ope_assembly_order r
    JOIN ope_sys_user_profile s ON r.consignee_id = s.id and s.dr = 0
    <include refid="where_inHw_assembly"></include>)aa
  </select>
  <select id="wmsInWhList" resultType="com.redescooter.ses.web.ros.vo.wms.WmsInWhResult">
    SELECT
    * from ((SELECT
    e.id as id,
    e.allocate_num as allocateNumber,
    e.count as qty,
    s.full_name as consignee,
    '2' as productType,
    e.updated_time as inWhTime
    FROM
    ope_allocate e
    JOIN ope_sys_user_profile s ON e.consignee_id = s.id and s.dr = 0
    <include refid="where_inHw_allocate"></include>
    order by e.updated_time desc)
    UNION
    (SELECT
    r.id as id,
    r.assembly_number as allocateNumber,
    r.in_wait_wh_total as qty,
    s.full_name as consignee,
    '3' as productType,
    r.updated_time as inWhTime
    FROM
    ope_assembly_order r
    JOIN ope_sys_user_profile s ON r.consignee_id = s.id and s.dr = 0
    <include refid="where_inHw_assembly"></include>
    order by r.updated_time desc))
    bb limit #{enter.startRow},#{enter.pageSize}
  </select>
  <sql id="where_stockPending_allocate">
    WHERE
    e.dr=0
    and e.`status` = 3
    <if test="enter.startTime != null and enter.endTime != null">
      and e.created_time between #{enter.startTime} and #{enter.endTime}
    </if>
    <if test="enter.keyword!=''and enter.keyword!=null">
      and (
      e.allocate_num like concat ("%",#{enter.keyword},"%") or
      e.consignee_id like concat ("%",#{enter.keyword},"%")
      )
    </if>
  </sql>
  <sql id="where_stockPending_assembly">
    WHERE
    r.dr=0
    and r.`status` = 5
    <if test="enter.startTime != null and enter.endTime != null">
      and e.created_time between #{enter.startTime} and #{enter.endTime}
    </if>
    <if test="enter.keyword!=''and enter.keyword!=null">
      and (
      r.assembly_number like concat ("%",#{enter.keyword},"%") or
      r.consignee_id like concat ("%",#{enter.keyword},"%")
      )
    </if>
  </sql>
  <select id="stockPendingCount" resultType="int">
    SELECT
    count(*) from (
    SELECT
    e.id as id,
    e.allocate_num as allocateNumber,
    e.count-e.pending_storage_total as qty,
    e.count as sumTotal,
    s.full_name as consignee,
    '2' as productType,
    e.created_time as creationTime
    FROM
    ope_allocate e
    JOIN ope_sys_user_profile s ON e.consignee_id = s.id and s.dr = 0
    <include refid="where_stockPending_allocate"></include>
    UNION
    SELECT
    r.id as id,
    r.assembly_number as allocateNumber,
    r.total_qty-r.in_wait_wh_total as qty,
    r.total_qty as sumTotal,
    s.full_name as consignee,
    '3' as productType,
    r.created_time as creationTime
    FROM
    ope_assembly_order r
    JOIN ope_sys_user_profile s ON r.consignee_id = s.id and s.dr = 0
    <include refid="where_stockPending_assembly"></include>)aa
  </select>
  <select id="stockPendingList" resultType="com.redescooter.ses.web.ros.vo.wms.WmsWhInStockPendingResult">
    SELECT
    * from ((SELECT
    e.id as id,
    e.allocate_num as allocateNumber,
    e.count-e.pending_storage_total as qty,
    e.count as sumTotal,
    s.full_name as consignee,
    '2' as productType,
    e.created_time as creationTime
    FROM
    ope_allocate e
    JOIN ope_sys_user_profile s ON e.consignee_id = s.id and s.dr = 0
    <include refid="where_stockPending_allocate"></include>
    order by e.updated_time desc)
    UNION
    (SELECT
    r.id as id,
    r.assembly_number as allocateNumber,
    r.total_qty-r.in_wait_wh_total as qty,
    r.total_qty as sumTotal,
    s.full_name as consignee,
    '3' as productType,
    r.created_time as creationTime
    FROM
    ope_assembly_order r
    JOIN ope_sys_user_profile s ON r.consignee_id = s.id and s.dr = 0
    <include refid="where_stockPending_assembly"></include>
    order by r.updated_time desc))
    bb limit #{enter.startRow},#{enter.pageSize}
  </select>
  <select id="allocateDetails" resultType="com.redescooter.ses.web.ros.vo.wms.WmsInWhDetailsResult">
    SELECT
      e.allocate_num as allocateNumber,
      e.STATUS as status,
      s.full_name as consignee,
      s.email as email,
      s.tel_number as phone
  FROM
    ope_allocate e
    JOIN ope_sys_user_profile s ON e.consignee_id = s.id and s.dr = 0
  WHERE
    e.id =#{enter.id} and e.dr = 0
  </select>
  <select id="assemblyDetails" resultType="com.redescooter.ses.web.ros.vo.wms.WmsInWhDetailsResult">
    SELECT
      r.assembly_number as allocateNumber,
      r.status as status,
      s.full_name as consignee,
      s.email  as email,
      s.tel_number as phone
    FROM
      ope_assembly_order r
      JOIN ope_sys_user_profile s ON r.consignee_id = s.id and s.dr = 0
    WHERE
      r.id = #{enter.id} and r.dr = 0
  </select>
  <select id="partList" resultType="com.redescooter.ses.web.ros.vo.wms.WmsProductListResult">
    SELECT
      s.cn_name AS cnName,
      s.en_name AS enName,
      s.parts_number AS productNumber,
      s.parts_type AS productType,
      s.parts_qty AS qty,
      e.price AS price
    FROM
      ope_allocate_b b
      JOIN ope_parts s ON b.part_id = s.id and s.dr = 0
      JOIN ope_price_sheet e ON s.id = e.parts_id and e.dr = 0
    WHERE
      b.allocate_id = #{enter.id} and b.dr = 0
  </select>
  <select id="productList" resultType="com.redescooter.ses.web.ros.vo.wms.WmsProductListResult">
    SELECT
      s.cn_name AS cnName,
      s.en_name AS enName,
      s.product_number AS productNumber,
      s.product_type AS productType,
      s.sum_parts_qty AS qty,
      e.sales_price as price
  FROM
    ope_assembly_b_order b
    JOIN ope_parts_product s ON b.product_id = s.id and s.dr = 0
    JOIN ope_regional_price_sheet e ON s.id	= e.parts_product_id and e.dr = 0
  WHERE
    b.assembly_id = #{enter.id} and b.dr = 0
  </select>
</mapper>
