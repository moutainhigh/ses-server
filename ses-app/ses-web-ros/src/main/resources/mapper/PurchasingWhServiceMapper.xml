<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.redescooter.ses.web.ros.dao.production.PurchasingWhServiceMapper">

    <sql id="wher_availableList">
        where whse_id = #{whseId}
        and stock.dr=0
        and stock.available_total <![CDATA[ > ]]>  0
        <if test="enter.type != null and enter.type != ''">
            and part.parts_type =#{enter.type}
        </if>
        <if test="enter.keyword != null and enter.keyword != ''">
            and (
            part.parts_number like concat ("%",#{enter.keyword},"%") or
            part.en_name like concat ("%",#{enter.keyword},"%") or
            part.cn_name like concat ("%",#{enter.keyword},"%")
            )
        </if>
    </sql>


    <sql id="where_qcingList">
        where purchasb.dr = 0
        and purchas.status = 3
        <if test="type != null and type != ''">
            and part.parts_type =#{type}
        </if>
        <if test="keyword != null and keyword != ''">
            and (
            part.parts_number like concat ("%",#{keyword},"%") or
            part.en_name like concat ("%",#{keyword},"%") or
            part.cn_name like concat ("%",#{keyword},"%")
            )
        </if>
        group by id, partN, type, en_name, cn_name
    </sql>

    <sql id="where_tobeStoredList">
        where purchasb.dr = 0
         and purchas.status in (4, 5)
        <if test="type != null and type != ''">
            and part.parts_type =#{type}
        </if>
        <if test="keyword != null and keyword != ''">
            and (
            part.parts_number like concat ("%",#{keyword},"%") or
            part.en_name like concat ("%",#{keyword},"%") or
            part.cn_name like concat ("%",#{keyword},"%")
            )
        </if>
        group by id, partN, type, en_name, cn_name
    </sql>

    <sql id="where_outWhList">
        where stock.dr=0
        and stock.available_total > 0
        <if test="whseIds != null and whseIds.size() != 0">
            and stock.whse_id in
            <foreach collection="whseIds" separator="," open="(" close=")" item="item">
                #{item}
            </foreach>
        </if>
        <if test="enter.type != null and enter.type != ''">
            and product.product_type =#{enter.type}
        </if>
        <if test="enter.keyword != null and enter.keyword != ''">
            and (
            product.product_number like concat ("%",#{enter.keyword},"%") or
            product.en_name like concat ("%",#{enter.keyword},"%") or
            product.cn_name like concat ("%",#{enter.keyword},"%")
            )
        </if>
    </sql>

    <sql id="where_OutWh_Allocate">
        where stock.dr=0
        and stock.available_total > 0
        <if test="whseIds != null and whseIds.size() != 0">
            and stock.whse_id in
            <foreach collection="whseIds" separator="," open="(" close=")" item="item">
                #{item}
            </foreach>
        </if>
        <if test="enter.type != null and enter.type != ''">
            and parts.parts_type =#{enter.type}
        </if>
        <if test="enter.keyword != null and enter.keyword != ''">
            and (
            parts.parts_number like concat ("%",#{enter.keyword},"%") or
            parts.en_name like concat ("%",#{enter.keyword},"%") or
            parts.cn_name like concat ("%",#{enter.keyword},"%")
            )
        </if>
    </sql>

    <select id="availableListCount" resultType="int">
        select count(*)
        from ope_stock stock
        left join ope_parts part on part.id = stock.materiel_product_id and part.dr = 0
        <include refid="wher_availableList"/>
    </select>

    <select id="availableList" resultType="com.redescooter.ses.web.ros.vo.production.wh.AvailableListResult">
        select stock.materiel_product_id as id,
        parts_number as partN,
        part.parts_type as type,
        part.en_name as enName,
        part.cn_name as cnName,
        stock.available_total as stocks
        from ope_stock stock
        left join ope_parts part on part.id = stock.materiel_product_id and part.dr = 0
        <include refid="wher_availableList"/>
        order by part.updated_time desc
        limit #{enter.startRow},#{enter.pageSize}
    </select>

    <select id="qcingListCount" resultType="int">
        select count(*) from
        (
        select part.id as id,
        part.parts_number as partN,
        part.parts_type as type,
        part.en_name as enName,
        part.cn_name as cnName,
        count(*) as qty
        from ope_purchas_b purchasb
        left join ope_purchas purchas
        on purchas.id = purchasb.purchas_id and purchas.dr = 0
        left join ope_parts part on part.id = purchasb.part_id and part.dr = 0
        <include refid="where_qcingList"/>
        ) result
    </select>

    <select id="qcingList" resultType="com.redescooter.ses.web.ros.vo.production.wh.QcingListResult">
        select part.id as id,
        part.parts_number as partN,
        part.parts_type as type,
        part.en_name as enName,
        part.cn_name as cnName,
        count(*) as qty
        from ope_purchas_b purchasb
        left join ope_purchas purchas
        on purchas.id = purchasb.purchas_id and purchas.dr = 0
        left join ope_parts part on part.id = purchasb.part_id and part.dr = 0
        <include refid="where_qcingList"/>
        limit #{startRow},#{pageSize}
    </select>

    <select id="tobeStoredListCount" resultType="int">
        select count(*) from
        (
        select part.id as id,
        part.parts_number as partN,
        part.parts_type as type,
        part.en_name as enName,
        part.cn_name as cnName,
        count(*) as qty
        from ope_purchas_b purchasb
        left join ope_purchas purchas
        on purchas.id = purchasb.purchas_id and purchas.dr = 0
        left join ope_parts part on part.id = purchasb.part_id and part.dr = 0
        <include refid="where_tobeStoredList"/>
        ) result
    </select>

    <select id="tobeStoredList" resultType="com.redescooter.ses.web.ros.vo.production.wh.TobeStoredResult">
        select part.id as id,
        part.parts_number as partN,
        part.parts_type as type,
        part.en_name as enName,
        part.cn_name as cnName,
        count(*) as qty
        from ope_purchas_b purchasb
        left join ope_purchas purchas
        on purchas.id = purchasb.purchas_id and purchas.dr = 0
        left join ope_parts part on part.id = purchasb.part_id and part.dr = 0
        <include refid="where_tobeStoredList"/>
        limit #{startRow},#{pageSize}
    </select>

    <select id="outWhListAssemblyCount" resultType="int">
        select count(*)
        from ope_stock stock
        inner join ope_parts_product product
        on stock.materiel_product_id = product.id and product.dr=0
        <include refid="where_outWhList"/>
    </select>


    <select id="outWhListAssembly" resultType="com.redescooter.ses.web.ros.vo.production.wh.OutWhResult">
        select stock.id as id,
        product.product_number as partN,
        stock.materiel_product_type as type,
        product.en_name as enName,
        product.cn_name as cnName,
        stock.available_total as qty
        from ope_stock stock
        inner join ope_parts_product product
        on stock.materiel_product_id = product.id and product.dr=0
        <include refid="where_outWhList"/>
        limit #{enter.startRow},#{enter.pageSize}
    </select>

    <select id="wasteListCount" resultType="int">
    </select>

    <select id="wasteList" resultType="com.redescooter.ses.web.ros.vo.production.wh.WasteResult">

    </select>

    <select id="PurchasBQc" resultType="com.redescooter.ses.web.ros.dm.OpePurchasBQc">
        select qc.*
        from ope_purchas_b_qc qc
        inner join ope_purchas_b purhcasb on qc.purchas_b_id = purhcasb.id and purhcasb.dr = 0
        left join ope_purchas purchas on purchas.id = purhcasb.purchas_id and purchas.dr = 0 and
        purchas.status = #{status}
        where qc.dr = 0
        <if test="partIds != null and partIds.size() != 0">
            and qc.parts_id in
            <foreach collection="partIds" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
    </select>

    <select id="outWhListAllocateCount" resultType="java.lang.Integer">
        select count(*)
        from ope_stock stock
        inner join ope_parts parts on stock.materiel_product_id = parts.id and parts.dr = 0
        <include refid="where_OutWh_Allocate"/>
    </select>

    <select id="outWhListAllocate" resultType="com.redescooter.ses.web.ros.vo.production.wh.OutWhResult">
        select stock.id as id,
        parts.parts_number as partN,
        parts.parts_type as type,
        parts.en_name as enName,
        parts.cn_name as cnName,
        stock.available_total as qty
        from ope_stock stock
        inner join ope_parts parts on stock.materiel_product_id = parts.id and parts.dr = 0
        <include refid="where_OutWh_Allocate"/>
        order by stock.updated_time desc
        limit #{enter.startRow},#{enter.pageSize}
    </select>
    <select id="countByTypeQcCount" resultType="int">
        select count(*) from
        (
        select part.id as id,
        part.parts_number as partN,
        part.parts_type as type,
        part.en_name as enName,
        part.cn_name as cnName,
        count(*) as qty
        from ope_purchas_b purchasb
        left join ope_purchas purchas
        on purchas.id = purchasb.purchas_id and purchas.dr = 0
        left join ope_parts part on part.id = purchasb.part_id and part.dr = 0
        where purchasb.dr=0
        and purchas.status=3
        group by id, partN, type, enName, cnName
        ) result
    </select>
    <select id="countByTypetobeStoredCount" resultType="int">
        select count(*) from
        (
        select part.id as id,
        part.parts_number as partN,
        part.parts_type as type,
        part.en_name as enName,
        part.cn_name as cnName,
        count(*) as qty
        from ope_purchas_b purchasb
        left join ope_purchas purchas
        on purchas.id = purchasb.purchas_id and purchas.dr = 0
        left join ope_parts part on part.id = purchasb.part_id and part.dr = 0
        where purchasb.dr=0
        and purchas.status in (4, 5)
        group by id, partN, type, enName, cnName
        ) result
    </select>
    <select id="countByTypeOutWhCountAssembly" resultType="int">
        select count(*)
        from ope_stock stock
         left join ope_parts_product product on stock.materiel_product_id = product.id and product.dr = 0
        where stock.dr=0
        and stock.available_total > 0
        and  stock.whse_id=#{whseId}
    </select>
    <select id="countByTypeOutWhCountAllocate" resultType="java.lang.Integer">
        select count(*)
        from ope_stock stock
        left join ope_parts parts on stock.materiel_product_id = parts.id and parts.dr = 0
        where stock.dr = 0
        and stock.available_total > 0
        and  stock.whse_id=#{whseId}
    </select>

    <select id="outWhCount" resultType="java.lang.Integer">
        select  count(*) from
        (
            select stock.id as id,
            product.product_number as partN,
            stock.materiel_product_type as type,
            product.en_name as enName,
            product.cn_name as cnName,
            stock.available_total as qty
            from ope_stock stock
            inner join ope_parts_product product
            on stock.materiel_product_id = product.id and product.dr=0
            <include refid="where_assemblyIds"/>
            union
            (select stock.id as id,
            parts.parts_number as partN,
            parts.parts_type as type,
            parts.en_name as enName,
            parts.cn_name as cnName,
            stock.available_total as qty
            from ope_stock stock
            inner join ope_parts parts on stock.materiel_product_id = parts.id and parts.dr = 0
            <include refid="where_allocateIds"/>
            order by stock.updated_time desc)
        ) aa

    </select>

    <select id="outWhList" resultType="com.redescooter.ses.web.ros.vo.production.wh.OutWhResult">
       select stock.id as id,
        product.product_number as partN,
        stock.materiel_product_type as type,
        product.en_name as enName,
        product.cn_name as cnName,
        stock.available_total as qty
        from ope_stock stock
        inner join ope_parts_product product
        on stock.materiel_product_id = product.id and product.dr=0
        <include refid="where_assemblyIds"/>
        union
        (select stock.id              as id,
        parts.parts_number            as partN,
        (case parts.parts_type
        when 'Parts' then 1
        when 'Accessory' then 2
        when 'Battery' then 3
        end)                  as type,
        parts.en_name         as enName,
        parts.cn_name         as cnName,
        stock.available_total as qty
        from ope_stock stock
        inner join ope_parts parts on stock.materiel_product_id = parts.id and parts.dr = 0
        <include refid="where_allocateIds"/>
        order by stock.updated_time desc)
        limit #{param1.startRow},#{param1.pageSize}
    </select>


    <sql id="where_assemblyIds">
        where stock.dr=0
        and stock.available_total > 0
        <if test="assemblyIds != null and assemblyIds.size() != 0">
            and stock.whse_id in
            <foreach collection="assemblyIds" separator="," open="(" close=")" item="item">
                #{item}
            </foreach>
        </if>
        <if test="param1.type != null and param1.type != ''">
            and product.product_type =#{param1.type}
        </if>
        <if test="param1.keyword != null and param1.keyword != ''">
            and (
            product.product_number like concat ("%",#{param1.keyword},"%") or
            product.en_name like concat ("%",#{param1.keyword},"%") or
            product.cn_name like concat ("%",#{param1.keyword},"%")
            )
        </if>
    </sql>

    <sql id="where_allocateIds">
        where stock.dr=0
        and stock.available_total > 0
        <if test="allocateIds != null and allocateIds.size() != 0">
            and stock.whse_id in
            <foreach collection="allocateIds" separator="," open="(" close=")" item="item">
                #{item}
            </foreach>
        </if>
        <if test="param1.type != null and param1.type != ''">
            and parts.parts_type =#{param1.type}
        </if>
        <if test="param1.keyword != null and param1.keyword != ''">
            and (
            parts.parts_number like concat ("%",#{param1.keyword},"%") or
            parts.en_name like concat ("%",#{param1.keyword},"%") or
            parts.cn_name like concat ("%",#{param1.keyword},"%")
            )
        </if>
    </sql>
</mapper>
