<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.redescooter.ses.web.ros.dao.restproduction.RosProductionProductServiceMapper">

    <sql id="where_scooterDraftList">
        where draft.dr=0
        <if test="colorId != null">
            and draft.color_id=#{colorId}
        </if>
        <if test="groupId != null">
            and draft.group_id=#{groupId}
        </if>
        <if test="keyword != null and keyword != ''">
            and(
            draft.bom_no like concat ('%',#{keyword},'%') or
            draft.en_name like concat ('%',#{keyword},'%')
            )
        </if>
    </sql>

    <sql id="where_scooterBomList">
        where bom.dr=0
        and  bom.bom_status in (#{activeStatus},#{toBeActive})
        <if test="enter.status != null">
            and bom.bom_status=#{enter.status}
        </if>
        <if test="enter.groupId != null">
            and  bom.group_id=#{enter.groupId}
        </if>
        <if test="enter.colorId != null">
            and bom.color_id=#{enter.colorId}
        </if>
        <if test="enter.keyword != null and enter.keyword != ''">
            and (
            bom.bom_no like  concat ('%',#{enter.keyword},'%') or
            bom.en_name like  concat ('%',#{enter.keyword},'%')
            )
        </if>
    </sql>

    <sql id="where_combinationList">
        where bom.dr=0
        and  bom.bom_status in (#{active},#{toBeActiveValue})
        <if test="enter.status != null">
            and  bom.bom_status=#{enter.status}
        </if>
        <if test="enter.keyword != null and enter.keyword != ''">
            and (
            bom.bom_no like concat ('%',#{enter.keyword},'%') or
            bom.en_name like concat ('%',#{enter.keyword},'%') or
            bom.fr_name like concat ('%',#{enter.keyword},'%') or
            bom.cn_name like concat ('%',#{enter.keyword},'%')
            )
        </if>
    </sql>

    <sql id="where_productionProductPartList">
        where parts.dr = 0
        and parts.disable=0
        <if test="secId != null">
            and parts.parts_sec=#{secId}
        </if>
        <if test="keyword != null and keyword != ''">
            and (
            parts.parts_no like concat ('%',#{keyword},'%') or
            parts.en_name like concat ('%',#{keyword},'%') or
            parts.cn_name like concat ('%',#{keyword},'%')
            )
        </if>
    </sql>

    <select id="scooterDraftListCount" resultType="int">
        select count(1)
        from ope_production_scooter_bom_draft draft
        <include refid="where_scooterDraftList"/>
    </select>

    <select id="scooterDraftList" resultType="com.redescooter.ses.web.ros.vo.restproduct.production.RosProductionScooterListResult">
        select draft.id                as id,
        draft.bom_no            as productNum,
        draft.procurement_cycle as productionCycle,
        draft.group_id          as groupId,
        draft.color_id          as colorId,
        draft.cn_name           as cnName,
        draft.en_name           as enName,
        draft.fr_name           as frName,
        draft.parts_qty         as qty,
        sgroup.group_name     as groupName,
        color.color_name      as colorName
        from ope_production_scooter_bom_draft draft
        left join ope_specificat_group sgroup on draft.group_id = sgroup.id and sgroup.dr = 0
        left join ope_color color on color.id = draft.color_id and color.dr = 0
       <include refid="where_scooterDraftList"/>
        order by draft.created_time desc
        limit #{startRow},#{pageSize}
    </select>

    <select id="scooterBomListCount" resultType="int">
        select count(1)
        from ope_production_scooter_bom bom
        <include refid="where_scooterBomList"/>
        order by bom.created_time desc
    </select>

    <select id="scooterBomList" resultType="com.redescooter.ses.web.ros.vo.restproduct.production.RosProductionScooterListResult">
        select bom.id                as id,
        bom.bom_no            as productNum,
        bom.procurement_cycle as productionCycle,
        bom.group_id          as groupId,
        bom.color_id          as colorId,
        bom.bom_status        as status,
        bom.cn_name           as cnName,
        bom.en_name           as enName,
        bom.fr_name           as frName,
        bom.parts_qty         as qty,
        sgroup.group_name     as groupName,
        color.color_name      as colorName
        from ope_production_scooter_bom bom
        left join ope_specificat_group sgroup on bom.group_id = sgroup.id and sgroup.dr = 0
        left join ope_color color on color.id = bom.color_id and color.dr = 0
        <include refid="where_scooterBomList"/>
        order by status asc,bom.effective_date asc
        limit #{enter.startRow},#{enter.pageSize}
    </select>

    <select id="combinationDraftListCount" resultType="int">
        select count(1)
            from ope_production_combin_bom_draft draft
            where draft.dr=0
            <if test="keyword != null and keyword != ''">
                and (
                draft.bom_no like concat ('%',#{keyword},'%') or
                draft.cn_name like concat ('%',#{keyword},'%') or
                draft.en_name like concat ('%',#{keyword},'%') or
                draft.fr_name like concat ('%',#{keyword},'%')
                )
            </if>
    </select>

    <select id="combinationDraftList" resultType="com.redescooter.ses.web.ros.vo.restproduct.production.RosProductionCombinationListResult">
        select draft.id as id,
               draft.bom_no as  productNum,
               draft.procurement_cycle as productionCycle,
               draft.cn_name as cnName,
               draft.en_name as enName,
               draft.fr_name as frName,
               draft.parts_qty as qty
        from ope_production_combin_bom_draft draft
        where draft.dr=0
        <if test="keyword != null and keyword != ''">
            and (
            draft.bom_no like concat ('%',#{keyword},'%') or
            draft.cn_name like concat ('%',#{keyword},'%') or
            draft.en_name like concat ('%',#{keyword},'%') or
            draft.fr_name like concat ('%',#{keyword},'%')
            )
        </if>
        order by draft.created_time desc
        limit #{startRow},#{pageSize}
    </select>

    <select id="combinationListCount" resultType="int">
        select count(1)
        from ope_production_combin_bom bom
        <include refid="where_combinationList" />
    </select>

    <select id="combinationList" resultType="com.redescooter.ses.web.ros.vo.restproduct.production.RosProductionCombinationListResult">
        select bom.id as id,
               bom.bom_no as productNum,
               bom.procurement_cycle as productionCycle,
               bom.group_id as groupId,
               bom.color_id as colorId,
               bom.bom_status as status,
               bom.cn_name as cnName,
               bom.en_name as enName,
               bom.fr_name as frName,
               bom.parts_qty as qty
        from ope_production_combin_bom bom
       <include refid="where_combinationList" />
        order by status asc,bom.effective_date asc
        limit #{enter.startRow},#{enter.pageSize}
    </select>

    <select id="productionProductPartListCount" resultType="int">
        select count(1)
        from ope_production_parts parts
        inner join ope_product_price sheet on sheet.product_id = parts.id and sheet.product_price_type = 1
        inner join ope_parts_sec sec on parts.parts_sec = sec.id and sec.dr = 0
        <include refid="where_productionProductPartList" />
    </select>

    <select id="productionProductPartList" resultType="com.redescooter.ses.web.ros.vo.restproduct.RosProductionProductPartListResult">
        select parts.id                as id,
        parts.parts_no          as partsNum,
        parts.parts_sec         as secId,
        sec.name                as sec,
        parts.procurement_cycle as productionCycle,
        parts.dwg               as dwgUrl,
        parts.cn_name           as cnName,
        parts.en_name           as enName,
        parts.fr_name           as frName,
        1                       as qty
        from ope_production_parts parts
        inner join ope_product_price sheet on sheet.product_id = parts.id and sheet.product_price_type = 1
        inner join ope_parts_sec sec on parts.parts_sec = sec.id and sec.dr = 0
        <include refid="where_productionProductPartList" />
        order by parts.created_time desc
        limit #{startRow},#{pageSize}
    </select>

    <select id="productionScooterVersionList" resultType="com.redescooter.ses.web.ros.vo.restproduct.production.RosProductionProdductVersionResult">
        select bom.id                              as id,
                bom.versoin                         as name,
                bom.bom_status                      as status,
                if(bom.bom_status = 1, true, false) as activate
            from ope_production_scooter_bom bom
            where bom.dr=0
            and bom.bom_no=#{bomNo}
    </select>

    <select id="productionCombinBomVersionList" resultType="com.redescooter.ses.web.ros.vo.restproduct.production.RosProductionProdductVersionResult">
            select bom.id                              as id,
                   bom.versoin                         as name,
                   bom.bom_status                      as status,
                   if(bom.bom_status = 1, true, false) as activate
            from ope_production_combin_bom bom
            where bom.dr = 0
            and bom.bom_no=#{bomNo}
    </select>

    <select id="rosProductionProductPartsList" resultType="com.redescooter.ses.web.ros.vo.restproduct.RosProductionProductPartListResult">
        select parts_id          as id,
        parts_no          as partsNum,
        parts_sec         as secId,
        procurement_cycle as productionCycle,
        parts_qty         as qty,
        cn_name           as cnName,
        en_name           as enName,
        fr_name           as frName,
        sec.name          as sec
        from ope_production_parts_relation relation
        left join ope_parts_sec sec on relation.parts_sec = sec.id and sec.dr = 0
        where relation.dr = 0
        and  relation.production_id=#{id}
        and  relation.production_type=#{productTypeId}
    </select>

    <select id="rosImportProductionProductPartsList" resultType="com.redescooter.ses.web.ros.vo.restproduct.RosProductionProductPartListResult">
        select parts.id                as id,
        parts.parts_no          as partsNum,
        parts.parts_sec         as secId,
        parts.procurement_cycle as productionCycle,
        parts.parts_qty         as qty,
        parts.cn_name           as cnName,
        parts.en_name           as enName,
        parts.fr_name           as frName,
        sec.name                as sec,
        parts.procurement_cycle as productionCycle,
        price.price             as price,
        count(templete.id) as templeteCount
        from ope_production_parts parts
        left join ope_parts_sec sec on parts.parts_sec = sec.id and parts.dr = 0
        left join ope_product_price price on price.product_id = parts.id and product_price_type = 1
        left join  ope_production_quality_tempate templete on parts.id=templete.production_id and  parts.parts_type=templete.production_type and templete.dr=1
        where parts.dr=0
        <if test="collection != null and collection.size() != 0">
            and parts_no in
            <foreach collection="collection" open="(" item="item" close=")" separator=",">
                 #{item}
            </foreach>
        </if>
        group by id,partsNum,secId,productionCycle,qty,cnName,enName,frName,sec,productionCycle,price
    </select>

    <select id="groupList" resultType="com.redescooter.ses.api.common.vo.base.BaseNameResult">
        select sgroup.id         as id,
               sgroup.group_name as name
        from ope_specificat_group sgroup
        where dr = 0
    </select>

    <select id="colorList" resultType="com.redescooter.ses.api.common.vo.base.BaseNameResult">
        select color.id         as id,
               color.color_name as name
        from ope_color color
        where dr = 0
    </select>
</mapper>
