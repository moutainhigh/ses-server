<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.redescooter.ses.web.ros.dao.base.OpeSysUserMapper">
  <resultMap id="BaseResultMap" type="com.redescooter.ses.web.ros.dm.OpeSysUser">
    <!--@mbg.generated-->
    <!--@Table ope_sys_user-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="dr" jdbcType="INTEGER" property="dr" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="tenant_id" jdbcType="BIGINT" property="tenantId" />
    <result column="app_id" jdbcType="VARCHAR" property="appId" />
    <result column="system_id" jdbcType="VARCHAR" property="systemId" />
    <result column="dept_id" jdbcType="BIGINT" property="deptId" />
    <result column="login_name" jdbcType="VARCHAR" property="loginName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="last_login_token" jdbcType="VARCHAR" property="lastLoginToken" />
    <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime" />
    <result column="last_login_ip" jdbcType="VARCHAR" property="lastLoginIp" />
    <result column="activation_time" jdbcType="DATE" property="activationTime" />
    <result column="expire_date" jdbcType="DATE" property="expireDate" />
    <result column="created_by" jdbcType="BIGINT" property="createdBy" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="updated_by" jdbcType="BIGINT" property="updatedBy" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, dr, `status`, tenant_id, app_id, system_id, dept_id, login_name, `password`,
    salt, last_login_token, last_login_time, last_login_ip, activation_time, expire_date,
    created_by, created_time, updated_by, updated_time
  </sql>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update ope_sys_user
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="dr = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.dr,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="`status` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.status,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="tenant_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.tenantId,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="app_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.appId,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="system_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.systemId,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="dept_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.deptId,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="login_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.loginName,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="`password` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.password,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="salt = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.salt,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="last_login_token = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.lastLoginToken,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="last_login_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.lastLoginTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="last_login_ip = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.lastLoginIp,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="activation_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.activationTime,jdbcType=DATE}
        </foreach>
      </trim>
      <trim prefix="expire_date = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.expireDate,jdbcType=DATE}
        </foreach>
      </trim>
      <trim prefix="created_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.createdBy,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="created_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.createdTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="updated_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.updatedBy,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="updated_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.updatedTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=BIGINT}
    </foreach>
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--@mbg.generated-->
    insert into ope_sys_user
    (id, dr, `status`, tenant_id, app_id, system_id, dept_id, login_name, `password`,
    salt, last_login_token, last_login_time, last_login_ip, activation_time, expire_date,
    created_by, created_time, updated_by, updated_time)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.dr,jdbcType=INTEGER}, #{item.status,jdbcType=VARCHAR},
      #{item.tenantId,jdbcType=BIGINT}, #{item.appId,jdbcType=VARCHAR}, #{item.systemId,jdbcType=VARCHAR},
      #{item.deptId,jdbcType=BIGINT}, #{item.loginName,jdbcType=VARCHAR}, #{item.password,jdbcType=VARCHAR},
      #{item.salt,jdbcType=VARCHAR}, #{item.lastLoginToken,jdbcType=VARCHAR},
      #{item.lastLoginTime,jdbcType=TIMESTAMP},
      #{item.lastLoginIp,jdbcType=VARCHAR}, #{item.activationTime,jdbcType=DATE}, #{item.expireDate,jdbcType=DATE},
      #{item.createdBy,jdbcType=BIGINT}, #{item.createdTime,jdbcType=TIMESTAMP}, #{item.updatedBy,jdbcType=BIGINT},
      #{item.updatedTime,jdbcType=TIMESTAMP})
    </foreach>
  </insert>
  <insert id="insertOrUpdate" parameterType="com.redescooter.ses.web.ros.dm.OpeSysUser">
    <!--@mbg.generated-->
    insert into ope_sys_user
    (id, dr, `status`, tenant_id, app_id, system_id, dept_id, login_name, `password`,
    salt, last_login_token, last_login_time, last_login_ip, activation_time, expire_date,
    created_by, created_time, updated_by, updated_time)
    values
    (#{id,jdbcType=BIGINT}, #{dr,jdbcType=INTEGER}, #{status,jdbcType=VARCHAR}, #{tenantId,jdbcType=BIGINT},
    #{appId,jdbcType=VARCHAR}, #{systemId,jdbcType=VARCHAR}, #{deptId,jdbcType=BIGINT},
    #{loginName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR},
    #{lastLoginToken,jdbcType=VARCHAR}, #{lastLoginTime,jdbcType=TIMESTAMP}, #{lastLoginIp,jdbcType=VARCHAR},
    #{activationTime,jdbcType=DATE}, #{expireDate,jdbcType=DATE}, #{createdBy,jdbcType=BIGINT},
    #{createdTime,jdbcType=TIMESTAMP}, #{updatedBy,jdbcType=BIGINT}, #{updatedTime,jdbcType=TIMESTAMP}
    )
    on duplicate key update
    id = #{id,jdbcType=BIGINT},
    dr = #{dr,jdbcType=INTEGER},
    `status` = #{status,jdbcType=VARCHAR},
    tenant_id = #{tenantId,jdbcType=BIGINT},
    app_id = #{appId,jdbcType=VARCHAR},
    system_id = #{systemId,jdbcType=VARCHAR},
    dept_id = #{deptId,jdbcType=BIGINT},
    login_name = #{loginName,jdbcType=VARCHAR},
    `password` = #{password,jdbcType=VARCHAR},
    salt = #{salt,jdbcType=VARCHAR},
    last_login_token = #{lastLoginToken,jdbcType=VARCHAR},
    last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
    last_login_ip = #{lastLoginIp,jdbcType=VARCHAR},
    activation_time = #{activationTime,jdbcType=DATE},
    expire_date = #{expireDate,jdbcType=DATE},
    created_by = #{createdBy,jdbcType=BIGINT},
    created_time = #{createdTime,jdbcType=TIMESTAMP},
    updated_by = #{updatedBy,jdbcType=BIGINT},
    updated_time = #{updatedTime,jdbcType=TIMESTAMP}
  </insert>
  <insert id="insertOrUpdateSelective" parameterType="com.redescooter.ses.web.ros.dm.OpeSysUser">
    <!--@mbg.generated-->
    insert into ope_sys_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="dr != null">
        dr,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="tenantId != null">
        tenant_id,
      </if>
      <if test="appId != null">
        app_id,
      </if>
      <if test="systemId != null">
        system_id,
      </if>
      <if test="deptId != null">
        dept_id,
      </if>
      <if test="loginName != null">
        login_name,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="salt != null">
        salt,
      </if>
      <if test="lastLoginToken != null">
        last_login_token,
      </if>
      <if test="lastLoginTime != null">
        last_login_time,
      </if>
      <if test="lastLoginIp != null">
        last_login_ip,
      </if>
      <if test="activationTime != null">
        activation_time,
      </if>
      <if test="expireDate != null">
        expire_date,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="updatedBy != null">
        updated_by,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="dr != null">
        #{dr,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="tenantId != null">
        #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="appId != null">
        #{appId,jdbcType=VARCHAR},
      </if>
      <if test="systemId != null">
        #{systemId,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=BIGINT},
      </if>
      <if test="loginName != null">
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginToken != null">
        #{lastLoginToken,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTime != null">
        #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginIp != null">
        #{lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="activationTime != null">
        #{activationTime,jdbcType=DATE},
      </if>
      <if test="expireDate != null">
        #{expireDate,jdbcType=DATE},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=BIGINT},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=BIGINT},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
    on duplicate key update
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=BIGINT},
      </if>
      <if test="dr != null">
        dr = #{dr,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=VARCHAR},
      </if>
      <if test="tenantId != null">
        tenant_id = #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="appId != null">
        app_id = #{appId,jdbcType=VARCHAR},
      </if>
      <if test="systemId != null">
        system_id = #{systemId,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null">
        dept_id = #{deptId,jdbcType=BIGINT},
      </if>
      <if test="loginName != null">
        login_name = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginToken != null">
        last_login_token = #{lastLoginToken,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTime != null">
        last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginIp != null">
        last_login_ip = #{lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="activationTime != null">
        activation_time = #{activationTime,jdbcType=DATE},
      </if>
      <if test="expireDate != null">
        expire_date = #{expireDate,jdbcType=DATE},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=BIGINT},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        updated_by = #{updatedBy,jdbcType=BIGINT},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
</mapper>