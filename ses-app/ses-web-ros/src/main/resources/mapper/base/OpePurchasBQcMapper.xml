<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.redescooter.ses.web.ros.dao.base.OpePurchasBQcMapper">
    <resultMap id="BaseResultMap" type="com.redescooter.ses.web.ros.dm.OpePurchasBQc">
        <!--@mbg.generated-->
        <!--@Table ope_purchas_b_qc-->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="dr" jdbcType="INTEGER" property="dr"/>
        <result column="tenant_id" jdbcType="BIGINT" property="tenantId"/>
        <result column="user_id" jdbcType="BIGINT" property="userId"/>
        <result column="purchas_b_id" jdbcType="BIGINT" property="purchasBId"/>
        <result column="parts_id" jdbcType="BIGINT" property="partsId"/>
        <result column="quality_inspector_id" jdbcType="BIGINT" property="qualityInspectorId"/>
        <result column="batch_no" jdbcType="VARCHAR" property="batchNo"/>
        <result column="status" jdbcType="VARCHAR" property="status"/>
        <result column="total_quality_inspected" jdbcType="INTEGER" property="totalQualityInspected"/>
        <result column="pass_count" jdbcType="INTEGER" property="passCount"/>
        <result column="fail_count" jdbcType="INTEGER" property="failCount"/>
        <result column="quality_inspection_time" jdbcType="TIMESTAMP" property="qualityInspectionTime"/>
        <result column="revision" jdbcType="INTEGER" property="revision"/>
        <result column="created_by" jdbcType="BIGINT" property="createdBy"/>
        <result column="created_time" jdbcType="TIMESTAMP" property="createdTime"/>
        <result column="updated_by" jdbcType="BIGINT" property="updatedBy"/>
        <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime"/>
        <result column="def1" jdbcType="VARCHAR" property="def1"/>
        <result column="def2" jdbcType="VARCHAR" property="def2"/>
        <result column="def3" jdbcType="VARCHAR" property="def3"/>
        <result column="def5" jdbcType="VARCHAR" property="def5"/>
        <result column="def6" jdbcType="DOUBLE" property="def6"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, dr, tenant_id, user_id, purchas_b_id, parts_id, quality_inspector_id, batch_no,
        `status`, total_quality_inspected, pass_count, fail_count, quality_inspection_time,
        revision, created_by, created_time, updated_by, updated_time, def1, def2, def3, def5,
        def6
    </sql>
    <update id="updateBatch" parameterType="java.util.List">
        <!--@mbg.generated-->
        update ope_purchas_b_qc
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="dr = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.dr,jdbcType=INTEGER}
                </foreach>
            </trim>
            <trim prefix="tenant_id = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.tenantId,jdbcType=BIGINT}
                </foreach>
            </trim>
            <trim prefix="user_id = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.userId,jdbcType=BIGINT}
                </foreach>
            </trim>
            <trim prefix="purchas_b_id = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.purchasBId,jdbcType=BIGINT}
                </foreach>
            </trim>
            <trim prefix="parts_id = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.partsId,jdbcType=BIGINT}
                </foreach>
            </trim>
            <trim prefix="quality_inspector_id = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.qualityInspectorId,jdbcType=BIGINT}
                </foreach>
            </trim>
            <trim prefix="batch_no = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.batchNo,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="`status` = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.status,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="total_quality_inspected = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.totalQualityInspected,jdbcType=INTEGER}
                </foreach>
            </trim>
            <trim prefix="pass_count = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.passCount,jdbcType=INTEGER}
                </foreach>
            </trim>
            <trim prefix="fail_count = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.failCount,jdbcType=INTEGER}
                </foreach>
            </trim>
            <trim prefix="quality_inspection_time = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.qualityInspectionTime,jdbcType=TIMESTAMP}
                </foreach>
            </trim>
            <trim prefix="revision = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.revision,jdbcType=INTEGER}
                </foreach>
            </trim>
            <trim prefix="created_by = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.createdBy,jdbcType=BIGINT}
                </foreach>
            </trim>
            <trim prefix="created_time = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.createdTime,jdbcType=TIMESTAMP}
                </foreach>
            </trim>
            <trim prefix="updated_by = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.updatedBy,jdbcType=BIGINT}
                </foreach>
            </trim>
            <trim prefix="updated_time = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.updatedTime,jdbcType=TIMESTAMP}
                </foreach>
            </trim>
            <trim prefix="def1 = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.def1,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="def2 = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.def2,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="def3 = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.def3,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="def5 = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.def5,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="def6 = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.def6,jdbcType=DOUBLE}
                </foreach>
            </trim>
        </trim>
        where id in
        <foreach close=")" collection="list" item="item" open="(" separator=", ">
            #{item.id,jdbcType=BIGINT}
        </foreach>
    </update>
    <insert id="batchInsert" parameterType="map">
        <!--@mbg.generated-->
        insert into ope_purchas_b_qc
        (id, dr, tenant_id, user_id, purchas_b_id, parts_id, quality_inspector_id, batch_no,
        `status`, total_quality_inspected, pass_count, fail_count, quality_inspection_time,
        revision, created_by, created_time, updated_by, updated_time, def1, def2, def3,
        def5, def6)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.id,jdbcType=BIGINT}, #{item.dr,jdbcType=INTEGER}, #{item.tenantId,jdbcType=BIGINT},
            #{item.userId,jdbcType=BIGINT}, #{item.purchasBId,jdbcType=BIGINT}, #{item.partsId,jdbcType=BIGINT},
            #{item.qualityInspectorId,jdbcType=BIGINT}, #{item.batchNo,jdbcType=VARCHAR},
            #{item.status,jdbcType=VARCHAR},
            #{item.totalQualityInspected,jdbcType=INTEGER}, #{item.passCount,jdbcType=INTEGER},
            #{item.failCount,jdbcType=INTEGER}, #{item.qualityInspectionTime,jdbcType=TIMESTAMP},
            #{item.revision,jdbcType=INTEGER}, #{item.createdBy,jdbcType=BIGINT},
            #{item.createdTime,jdbcType=TIMESTAMP},
            #{item.updatedBy,jdbcType=BIGINT}, #{item.updatedTime,jdbcType=TIMESTAMP}, #{item.def1,jdbcType=VARCHAR},
            #{item.def2,jdbcType=VARCHAR}, #{item.def3,jdbcType=VARCHAR}, #{item.def5,jdbcType=VARCHAR},
            #{item.def6,jdbcType=DOUBLE})
        </foreach>
    </insert>
    <insert id="insertOrUpdate" parameterType="com.redescooter.ses.web.ros.dm.OpePurchasBQc">
        <!--@mbg.generated-->
        insert into ope_purchas_b_qc
        (id, dr, tenant_id, user_id, purchas_b_id, parts_id, quality_inspector_id, batch_no,
        `status`, total_quality_inspected, pass_count, fail_count, quality_inspection_time,
        revision, created_by, created_time, updated_by, updated_time, def1, def2, def3,
        def5, def6)
        values
        (#{id,jdbcType=BIGINT}, #{dr,jdbcType=INTEGER}, #{tenantId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT},
        #{purchasBId,jdbcType=BIGINT}, #{partsId,jdbcType=BIGINT}, #{qualityInspectorId,jdbcType=BIGINT},
        #{batchNo,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{totalQualityInspected,jdbcType=INTEGER},
        #{passCount,jdbcType=INTEGER}, #{failCount,jdbcType=INTEGER}, #{qualityInspectionTime,jdbcType=TIMESTAMP},
        #{revision,jdbcType=INTEGER}, #{createdBy,jdbcType=BIGINT}, #{createdTime,jdbcType=TIMESTAMP},
        #{updatedBy,jdbcType=BIGINT}, #{updatedTime,jdbcType=TIMESTAMP}, #{def1,jdbcType=VARCHAR},
        #{def2,jdbcType=VARCHAR}, #{def3,jdbcType=VARCHAR}, #{def5,jdbcType=VARCHAR}, #{def6,jdbcType=DOUBLE}
        )
        on duplicate key update
        id = #{id,jdbcType=BIGINT},
        dr = #{dr,jdbcType=INTEGER},
        tenant_id = #{tenantId,jdbcType=BIGINT},
        user_id = #{userId,jdbcType=BIGINT},
        purchas_b_id = #{purchasBId,jdbcType=BIGINT},
        parts_id = #{partsId,jdbcType=BIGINT},
        quality_inspector_id = #{qualityInspectorId,jdbcType=BIGINT},
        batch_no = #{batchNo,jdbcType=VARCHAR},
        `status` = #{status,jdbcType=VARCHAR},
        total_quality_inspected = #{totalQualityInspected,jdbcType=INTEGER},
        pass_count = #{passCount,jdbcType=INTEGER},
        fail_count = #{failCount,jdbcType=INTEGER},
        quality_inspection_time = #{qualityInspectionTime,jdbcType=TIMESTAMP},
        revision = #{revision,jdbcType=INTEGER},
        created_by = #{createdBy,jdbcType=BIGINT},
        created_time = #{createdTime,jdbcType=TIMESTAMP},
        updated_by = #{updatedBy,jdbcType=BIGINT},
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
        def1 = #{def1,jdbcType=VARCHAR},
        def2 = #{def2,jdbcType=VARCHAR},
        def3 = #{def3,jdbcType=VARCHAR},
        def5 = #{def5,jdbcType=VARCHAR},
        def6 = #{def6,jdbcType=DOUBLE}
    </insert>
    <insert id="insertOrUpdateSelective" parameterType="com.redescooter.ses.web.ros.dm.OpePurchasBQc">
        <!--@mbg.generated-->
        insert into ope_purchas_b_qc
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="dr != null">
                dr,
            </if>
            <if test="tenantId != null">
                tenant_id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="purchasBId != null">
                purchas_b_id,
            </if>
            <if test="partsId != null">
                parts_id,
            </if>
            <if test="qualityInspectorId != null">
                quality_inspector_id,
            </if>
            <if test="batchNo != null">
                batch_no,
            </if>
            <if test="status != null">
                `status`,
            </if>
            <if test="totalQualityInspected != null">
                total_quality_inspected,
            </if>
            <if test="passCount != null">
                pass_count,
            </if>
            <if test="failCount != null">
                fail_count,
            </if>
            <if test="qualityInspectionTime != null">
                quality_inspection_time,
            </if>
            <if test="revision != null">
                revision,
            </if>
            <if test="createdBy != null">
                created_by,
            </if>
            <if test="createdTime != null">
                created_time,
            </if>
            <if test="updatedBy != null">
                updated_by,
            </if>
            <if test="updatedTime != null">
                updated_time,
            </if>
            <if test="def1 != null">
                def1,
            </if>
            <if test="def2 != null">
                def2,
            </if>
            <if test="def3 != null">
                def3,
            </if>
            <if test="def5 != null">
                def5,
            </if>
            <if test="def6 != null">
                def6,
            </if>
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="dr != null">
                #{dr,jdbcType=INTEGER},
            </if>
            <if test="tenantId != null">
                #{tenantId,jdbcType=BIGINT},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="purchasBId != null">
                #{purchasBId,jdbcType=BIGINT},
            </if>
            <if test="partsId != null">
                #{partsId,jdbcType=BIGINT},
            </if>
            <if test="qualityInspectorId != null">
                #{qualityInspectorId,jdbcType=BIGINT},
            </if>
            <if test="batchNo != null">
                #{batchNo,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=VARCHAR},
            </if>
            <if test="totalQualityInspected != null">
                #{totalQualityInspected,jdbcType=INTEGER},
            </if>
            <if test="passCount != null">
                #{passCount,jdbcType=INTEGER},
            </if>
            <if test="failCount != null">
                #{failCount,jdbcType=INTEGER},
            </if>
            <if test="qualityInspectionTime != null">
                #{qualityInspectionTime,jdbcType=TIMESTAMP},
            </if>
            <if test="revision != null">
                #{revision,jdbcType=INTEGER},
            </if>
            <if test="createdBy != null">
                #{createdBy,jdbcType=BIGINT},
            </if>
            <if test="createdTime != null">
                #{createdTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedBy != null">
                #{updatedBy,jdbcType=BIGINT},
            </if>
            <if test="updatedTime != null">
                #{updatedTime,jdbcType=TIMESTAMP},
            </if>
            <if test="def1 != null">
                #{def1,jdbcType=VARCHAR},
            </if>
            <if test="def2 != null">
                #{def2,jdbcType=VARCHAR},
            </if>
            <if test="def3 != null">
                #{def3,jdbcType=VARCHAR},
            </if>
            <if test="def5 != null">
                #{def5,jdbcType=VARCHAR},
            </if>
            <if test="def6 != null">
                #{def6,jdbcType=DOUBLE},
            </if>
        </trim>
        on duplicate key update
        <trim suffixOverrides=",">
            <if test="id != null">
                id = #{id,jdbcType=BIGINT},
            </if>
            <if test="dr != null">
                dr = #{dr,jdbcType=INTEGER},
            </if>
            <if test="tenantId != null">
                tenant_id = #{tenantId,jdbcType=BIGINT},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=BIGINT},
            </if>
            <if test="purchasBId != null">
                purchas_b_id = #{purchasBId,jdbcType=BIGINT},
            </if>
            <if test="partsId != null">
                parts_id = #{partsId,jdbcType=BIGINT},
            </if>
            <if test="qualityInspectorId != null">
                quality_inspector_id = #{qualityInspectorId,jdbcType=BIGINT},
            </if>
            <if test="batchNo != null">
                batch_no = #{batchNo,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                `status` = #{status,jdbcType=VARCHAR},
            </if>
            <if test="totalQualityInspected != null">
                total_quality_inspected = #{totalQualityInspected,jdbcType=INTEGER},
            </if>
            <if test="passCount != null">
                pass_count = #{passCount,jdbcType=INTEGER},
            </if>
            <if test="failCount != null">
                fail_count = #{failCount,jdbcType=INTEGER},
            </if>
            <if test="qualityInspectionTime != null">
                quality_inspection_time = #{qualityInspectionTime,jdbcType=TIMESTAMP},
            </if>
            <if test="revision != null">
                revision = #{revision,jdbcType=INTEGER},
            </if>
            <if test="createdBy != null">
                created_by = #{createdBy,jdbcType=BIGINT},
            </if>
            <if test="createdTime != null">
                created_time = #{createdTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedBy != null">
                updated_by = #{updatedBy,jdbcType=BIGINT},
            </if>
            <if test="updatedTime != null">
                updated_time = #{updatedTime,jdbcType=TIMESTAMP},
            </if>
            <if test="def1 != null">
                def1 = #{def1,jdbcType=VARCHAR},
            </if>
            <if test="def2 != null">
                def2 = #{def2,jdbcType=VARCHAR},
            </if>
            <if test="def3 != null">
                def3 = #{def3,jdbcType=VARCHAR},
            </if>
            <if test="def5 != null">
                def5 = #{def5,jdbcType=VARCHAR},
            </if>
            <if test="def6 != null">
                def6 = #{def6,jdbcType=DOUBLE},
            </if>
        </trim>
    </insert>
</mapper>