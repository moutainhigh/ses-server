<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.redescooter.ses.web.ros.dao.base.OpeWarehouseAccountMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.redescooter.ses.web.ros.dm.OpeWarehouseAccount">
        <id column="id" property="id"/>
        <result column="dr" property="dr"/>
        <result column="type" property="type"/>
        <result column="name" property="name"/>
        <result column="email" property="email"/>
        <result column="position" property="position"/>
        <result column="system" property="system"/>
        <result column="password" property="password"/>
        <result column="salt" property="salt"/>
        <result column="status" property="status"/>
        <result column="created_by" property="createdBy"/>
        <result column="created_time" property="createdTime"/>
        <result column="updated_by" property="updatedBy"/>
        <result column="updated_time" property="updatedTime"/>
        <result column="def1" property="def1"/>
        <result column="def2" property="def2"/>
        <result column="def3" property="def3"/>
        <result column="def4" property="def4"/>
        <result column="def5" property="def5"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, dr, type, name, email, position, system, password, salt, status, created_by, created_time, updated_by, updated_time, def1, def2, def3, def4, def5
    </sql>

    <!-- 仓库账号列表count -->
    <select id="getListCount" resultType="java.lang.Integer">
        select count(*)
        from ope_warehouse_account
        where dr = 0 and type = #{enter.type}
        <include refid="condition"/>
    </select>

    <!-- 仓库账号列表 -->
    <select id="getList" resultMap="BaseResultMap">
        select <include refid="Base_Column_List" />
        from ope_warehouse_account
        where dr = 0 and type = #{enter.type}
        <include refid="condition"/>
        order by created_time desc
        limit #{enter.startRow}, #{enter.pageSize}
    </select>

    <!-- 条件 -->
    <sql id="condition">
        <if test="enter.status != null and enter.status == 0">
            and status in (1, 2)
        </if>
        <if test="enter.status != null and enter.status != 0">
            and status = #{enter.status}
        </if>
        <if test="enter.system != null and enter.system == 0">
            and system in (1, 2)
        </if>
        <if test="enter.system != null and enter.system != 0">
            and system = #{enter.system}
        </if>
        <if test="enter.keyword != null and enter.keyword != ''">
            and (
                name like concat('%', #{enter.keyword}, '%') or
                email like concat('%', #{enter.keyword}, '%') or
                position like concat('%', #{enter.keyword}, '%'))
        </if>
    </sql>

</mapper>