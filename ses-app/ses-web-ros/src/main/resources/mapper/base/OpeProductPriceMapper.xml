<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.redescooter.ses.web.ros.dao.base.OpeProductPriceMapper">
  <resultMap id="BaseResultMap" type="com.redescooter.ses.web.ros.dm.OpeProductPrice">
    <!--@mbg.generated-->
    <!--@Table ope_product_price-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="dr" jdbcType="INTEGER" property="dr" />
    <result column="tenant_id" jdbcType="BIGINT" property="tenantId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="price_type" jdbcType="INTEGER" property="priceType" />
    <result column="currency_type" jdbcType="INTEGER" property="currencyType" />
    <result column="standard_currency" jdbcType="INTEGER" property="standardCurrency" />
    <result column="exchange_rate" jdbcType="VARCHAR" property="exchangeRate" />
    <result column="product_id" jdbcType="BIGINT" property="productId" />
    <result column="product_price_type" jdbcType="INTEGER" property="productPriceType" />
    <result column="begin_date" jdbcType="DATE" property="beginDate" />
    <result column="end_date" jdbcType="DATE" property="endDate" />
    <result column="revision" jdbcType="INTEGER" property="revision" />
    <result column="created_by" jdbcType="BIGINT" property="createdBy" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="updated_by" jdbcType="BIGINT" property="updatedBy" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
    <result column="def1" jdbcType="VARCHAR" property="def1" />
    <result column="def2" jdbcType="VARCHAR" property="def2" />
    <result column="def3" jdbcType="VARCHAR" property="def3" />
    <result column="def4" jdbcType="VARCHAR" property="def4" />
    <result column="def5" jdbcType="DECIMAL" property="def5" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, dr, tenant_id, user_id, `status`, price, price_type, currency_type, standard_currency, 
    exchange_rate, product_id, product_price_type, begin_date, end_date, revision, created_by, 
    created_time, updated_by, updated_time, def1, def2, def3, def4, def5
  </sql>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update ope_product_price
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="dr = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.dr,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="tenant_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.tenantId,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="user_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.userId,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="`status` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.status,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="price = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.price,jdbcType=DECIMAL}
        </foreach>
      </trim>
      <trim prefix="price_type = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.priceType,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="currency_type = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.currencyType,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="standard_currency = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.standardCurrency,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="exchange_rate = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.exchangeRate,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="product_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.productId,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="product_price_type = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.productPriceType,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="begin_date = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.beginDate,jdbcType=DATE}
        </foreach>
      </trim>
      <trim prefix="end_date = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.endDate,jdbcType=DATE}
        </foreach>
      </trim>
      <trim prefix="revision = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.revision,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="created_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.createdBy,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="created_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.createdTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="updated_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.updatedBy,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="updated_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.updatedTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="def1 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.def1,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="def2 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.def2,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="def3 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.def3,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="def4 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.def4,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="def5 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.def5,jdbcType=DECIMAL}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=BIGINT}
    </foreach>
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--@mbg.generated-->
    insert into ope_product_price
    (id, dr, tenant_id, user_id, `status`, price, price_type, currency_type, standard_currency, 
      exchange_rate, product_id, product_price_type, begin_date, end_date, revision, 
      created_by, created_time, updated_by, updated_time, def1, def2, def3, def4, def5
      )
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.dr,jdbcType=INTEGER}, #{item.tenantId,jdbcType=BIGINT}, 
        #{item.userId,jdbcType=BIGINT}, #{item.status,jdbcType=INTEGER}, #{item.price,jdbcType=DECIMAL}, 
        #{item.priceType,jdbcType=INTEGER}, #{item.currencyType,jdbcType=INTEGER}, #{item.standardCurrency,jdbcType=INTEGER}, 
        #{item.exchangeRate,jdbcType=VARCHAR}, #{item.productId,jdbcType=BIGINT}, #{item.productPriceType,jdbcType=INTEGER}, 
        #{item.beginDate,jdbcType=DATE}, #{item.endDate,jdbcType=DATE}, #{item.revision,jdbcType=INTEGER}, 
        #{item.createdBy,jdbcType=BIGINT}, #{item.createdTime,jdbcType=TIMESTAMP}, #{item.updatedBy,jdbcType=BIGINT}, 
        #{item.updatedTime,jdbcType=TIMESTAMP}, #{item.def1,jdbcType=VARCHAR}, #{item.def2,jdbcType=VARCHAR}, 
        #{item.def3,jdbcType=VARCHAR}, #{item.def4,jdbcType=VARCHAR}, #{item.def5,jdbcType=DECIMAL}
        )
    </foreach>
  </insert>
  <insert id="insertOrUpdate" parameterType="com.redescooter.ses.web.ros.dm.OpeProductPrice">
    <!--@mbg.generated-->
    insert into ope_product_price
    (id, dr, tenant_id, user_id, `status`, price, price_type, currency_type, standard_currency, 
      exchange_rate, product_id, product_price_type, begin_date, end_date, revision, 
      created_by, created_time, updated_by, updated_time, def1, def2, def3, def4, def5
      )
    values
    (#{id,jdbcType=BIGINT}, #{dr,jdbcType=INTEGER}, #{tenantId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, 
      #{status,jdbcType=INTEGER}, #{price,jdbcType=DECIMAL}, #{priceType,jdbcType=INTEGER}, 
      #{currencyType,jdbcType=INTEGER}, #{standardCurrency,jdbcType=INTEGER}, #{exchangeRate,jdbcType=VARCHAR}, 
      #{productId,jdbcType=BIGINT}, #{productPriceType,jdbcType=INTEGER}, #{beginDate,jdbcType=DATE}, 
      #{endDate,jdbcType=DATE}, #{revision,jdbcType=INTEGER}, #{createdBy,jdbcType=BIGINT}, 
      #{createdTime,jdbcType=TIMESTAMP}, #{updatedBy,jdbcType=BIGINT}, #{updatedTime,jdbcType=TIMESTAMP}, 
      #{def1,jdbcType=VARCHAR}, #{def2,jdbcType=VARCHAR}, #{def3,jdbcType=VARCHAR}, #{def4,jdbcType=VARCHAR}, 
      #{def5,jdbcType=DECIMAL})
    on duplicate key update 
    id = #{id,jdbcType=BIGINT}, 
    dr = #{dr,jdbcType=INTEGER}, 
    tenant_id = #{tenantId,jdbcType=BIGINT}, 
    user_id = #{userId,jdbcType=BIGINT}, 
    `status` = #{status,jdbcType=INTEGER}, 
    price = #{price,jdbcType=DECIMAL}, 
    price_type = #{priceType,jdbcType=INTEGER}, 
    currency_type = #{currencyType,jdbcType=INTEGER}, 
    standard_currency = #{standardCurrency,jdbcType=INTEGER}, 
    exchange_rate = #{exchangeRate,jdbcType=VARCHAR}, 
    product_id = #{productId,jdbcType=BIGINT}, 
    product_price_type = #{productPriceType,jdbcType=INTEGER}, 
    begin_date = #{beginDate,jdbcType=DATE}, 
    end_date = #{endDate,jdbcType=DATE}, 
    revision = #{revision,jdbcType=INTEGER}, 
    created_by = #{createdBy,jdbcType=BIGINT}, 
    created_time = #{createdTime,jdbcType=TIMESTAMP}, 
    updated_by = #{updatedBy,jdbcType=BIGINT}, 
    updated_time = #{updatedTime,jdbcType=TIMESTAMP}, 
    def1 = #{def1,jdbcType=VARCHAR}, 
    def2 = #{def2,jdbcType=VARCHAR}, 
    def3 = #{def3,jdbcType=VARCHAR}, 
    def4 = #{def4,jdbcType=VARCHAR}, 
    def5 = #{def5,jdbcType=DECIMAL}
  </insert>
  <insert id="insertOrUpdateSelective" parameterType="com.redescooter.ses.web.ros.dm.OpeProductPrice">
    <!--@mbg.generated-->
    insert into ope_product_price
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="dr != null">
        dr,
      </if>
      <if test="tenantId != null">
        tenant_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="priceType != null">
        price_type,
      </if>
      <if test="currencyType != null">
        currency_type,
      </if>
      <if test="standardCurrency != null">
        standard_currency,
      </if>
      <if test="exchangeRate != null">
        exchange_rate,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="productPriceType != null">
        product_price_type,
      </if>
      <if test="beginDate != null">
        begin_date,
      </if>
      <if test="endDate != null">
        end_date,
      </if>
      <if test="revision != null">
        revision,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="updatedBy != null">
        updated_by,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
      <if test="def1 != null">
        def1,
      </if>
      <if test="def2 != null">
        def2,
      </if>
      <if test="def3 != null">
        def3,
      </if>
      <if test="def4 != null">
        def4,
      </if>
      <if test="def5 != null">
        def5,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="dr != null">
        #{dr,jdbcType=INTEGER},
      </if>
      <if test="tenantId != null">
        #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="priceType != null">
        #{priceType,jdbcType=INTEGER},
      </if>
      <if test="currencyType != null">
        #{currencyType,jdbcType=INTEGER},
      </if>
      <if test="standardCurrency != null">
        #{standardCurrency,jdbcType=INTEGER},
      </if>
      <if test="exchangeRate != null">
        #{exchangeRate,jdbcType=VARCHAR},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=BIGINT},
      </if>
      <if test="productPriceType != null">
        #{productPriceType,jdbcType=INTEGER},
      </if>
      <if test="beginDate != null">
        #{beginDate,jdbcType=DATE},
      </if>
      <if test="endDate != null">
        #{endDate,jdbcType=DATE},
      </if>
      <if test="revision != null">
        #{revision,jdbcType=INTEGER},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=BIGINT},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=BIGINT},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="def1 != null">
        #{def1,jdbcType=VARCHAR},
      </if>
      <if test="def2 != null">
        #{def2,jdbcType=VARCHAR},
      </if>
      <if test="def3 != null">
        #{def3,jdbcType=VARCHAR},
      </if>
      <if test="def4 != null">
        #{def4,jdbcType=VARCHAR},
      </if>
      <if test="def5 != null">
        #{def5,jdbcType=DECIMAL},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=BIGINT},
      </if>
      <if test="dr != null">
        dr = #{dr,jdbcType=INTEGER},
      </if>
      <if test="tenantId != null">
        tenant_id = #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="priceType != null">
        price_type = #{priceType,jdbcType=INTEGER},
      </if>
      <if test="currencyType != null">
        currency_type = #{currencyType,jdbcType=INTEGER},
      </if>
      <if test="standardCurrency != null">
        standard_currency = #{standardCurrency,jdbcType=INTEGER},
      </if>
      <if test="exchangeRate != null">
        exchange_rate = #{exchangeRate,jdbcType=VARCHAR},
      </if>
      <if test="productId != null">
        product_id = #{productId,jdbcType=BIGINT},
      </if>
      <if test="productPriceType != null">
        product_price_type = #{productPriceType,jdbcType=INTEGER},
      </if>
      <if test="beginDate != null">
        begin_date = #{beginDate,jdbcType=DATE},
      </if>
      <if test="endDate != null">
        end_date = #{endDate,jdbcType=DATE},
      </if>
      <if test="revision != null">
        revision = #{revision,jdbcType=INTEGER},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=BIGINT},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        updated_by = #{updatedBy,jdbcType=BIGINT},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="def1 != null">
        def1 = #{def1,jdbcType=VARCHAR},
      </if>
      <if test="def2 != null">
        def2 = #{def2,jdbcType=VARCHAR},
      </if>
      <if test="def3 != null">
        def3 = #{def3,jdbcType=VARCHAR},
      </if>
      <if test="def4 != null">
        def4 = #{def4,jdbcType=VARCHAR},
      </if>
      <if test="def5 != null">
        def5 = #{def5,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
</mapper>