<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.redescooter.ses.web.ros.dao.base.OpeCustomerContactMapper">
  <resultMap id="BaseResultMap" type="com.redescooter.ses.web.ros.dm.OpeCustomerContact">
    <!--@mbg.generated-->
    <!--@Table ope_customer_contact-->
    <id column="id" property="id" />
    <result column="dr" property="dr" />
    <result column="customer_id" property="customerId" />
    <result column="name" property="name" />
    <result column="first_name" property="firstName" />
    <result column="last_name" property="lastName" />
    <result column="telephone" property="telephone" />
    <result column="email" property="email" />
    <result column="position" property="position" />
    <result column="address" property="address" />
    <result column="created_by" property="createdBy" />
    <result column="created_time" property="createdTime" />
    <result column="updated_by" property="updatedBy" />
    <result column="updated_time" property="updatedTime" />
    <result column="def1" property="def1" />
    <result column="def2" property="def2" />
    <result column="def3" property="def3" />
    <result column="def5" property="def5" />
    <result column="def6" property="def6" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, dr, customer_id, `name`, first_name, last_name, telephone, email, `position`, 
    address, created_by, created_time, updated_by, updated_time, def1, def2, def3, def5, 
    def6
  </sql>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update ope_customer_contact
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="dr = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.dr}
        </foreach>
      </trim>
      <trim prefix="customer_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.customerId}
        </foreach>
      </trim>
      <trim prefix="`name` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.name}
        </foreach>
      </trim>
      <trim prefix="first_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.firstName}
        </foreach>
      </trim>
      <trim prefix="last_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.lastName}
        </foreach>
      </trim>
      <trim prefix="telephone = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.telephone}
        </foreach>
      </trim>
      <trim prefix="email = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.email}
        </foreach>
      </trim>
      <trim prefix="`position` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.position}
        </foreach>
      </trim>
      <trim prefix="address = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.address}
        </foreach>
      </trim>
      <trim prefix="created_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.createdBy}
        </foreach>
      </trim>
      <trim prefix="created_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.createdTime}
        </foreach>
      </trim>
      <trim prefix="updated_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.updatedBy}
        </foreach>
      </trim>
      <trim prefix="updated_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.updatedTime}
        </foreach>
      </trim>
      <trim prefix="def1 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.def1}
        </foreach>
      </trim>
      <trim prefix="def2 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.def2}
        </foreach>
      </trim>
      <trim prefix="def3 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.def3}
        </foreach>
      </trim>
      <trim prefix="def5 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.def5}
        </foreach>
      </trim>
      <trim prefix="def6 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.def6}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id}
    </foreach>
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--@mbg.generated-->
    insert into ope_customer_contact
    (id, dr, customer_id, `name`, first_name, last_name, telephone, email, `position`, 
      address, created_by, created_time, updated_by, updated_time, def1, def2, def3, 
      def5, def6)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id}, #{item.dr}, #{item.customerId}, #{item.name}, #{item.firstName}, #{item.lastName}, 
        #{item.telephone}, #{item.email}, #{item.position}, #{item.address}, #{item.createdBy}, 
        #{item.createdTime}, #{item.updatedBy}, #{item.updatedTime}, #{item.def1}, #{item.def2}, 
        #{item.def3}, #{item.def5}, #{item.def6})
    </foreach>
  </insert>
  <insert id="insertOrUpdate" parameterType="com.redescooter.ses.web.ros.dm.OpeCustomerContact">
    <!--@mbg.generated-->
    insert into ope_customer_contact
    (id, dr, customer_id, `name`, first_name, last_name, telephone, email, `position`, 
      address, created_by, created_time, updated_by, updated_time, def1, def2, def3, 
      def5, def6)
    values
    (#{id}, #{dr}, #{customerId}, #{name}, #{firstName}, #{lastName}, #{telephone}, #{email}, 
      #{position}, #{address}, #{createdBy}, #{createdTime}, #{updatedBy}, #{updatedTime}, 
      #{def1}, #{def2}, #{def3}, #{def5}, #{def6})
    on duplicate key update 
    id = #{id}, 
    dr = #{dr}, 
    customer_id = #{customerId}, 
    `name` = #{name}, 
    first_name = #{firstName}, 
    last_name = #{lastName}, 
    telephone = #{telephone}, 
    email = #{email}, 
    `position` = #{position}, 
    address = #{address}, 
    created_by = #{createdBy}, 
    created_time = #{createdTime}, 
    updated_by = #{updatedBy}, 
    updated_time = #{updatedTime}, 
    def1 = #{def1}, 
    def2 = #{def2}, 
    def3 = #{def3}, 
    def5 = #{def5}, 
    def6 = #{def6}
  </insert>
  <insert id="insertOrUpdateSelective" parameterType="com.redescooter.ses.web.ros.dm.OpeCustomerContact">
    <!--@mbg.generated-->
    insert into ope_customer_contact
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="dr != null">
        dr,
      </if>
      <if test="customerId != null">
        customer_id,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="firstName != null">
        first_name,
      </if>
      <if test="lastName != null">
        last_name,
      </if>
      <if test="telephone != null">
        telephone,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="position != null">
        `position`,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="updatedBy != null">
        updated_by,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
      <if test="def1 != null">
        def1,
      </if>
      <if test="def2 != null">
        def2,
      </if>
      <if test="def3 != null">
        def3,
      </if>
      <if test="def5 != null">
        def5,
      </if>
      <if test="def6 != null">
        def6,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id},
      </if>
      <if test="dr != null">
        #{dr},
      </if>
      <if test="customerId != null">
        #{customerId},
      </if>
      <if test="name != null">
        #{name},
      </if>
      <if test="firstName != null">
        #{firstName},
      </if>
      <if test="lastName != null">
        #{lastName},
      </if>
      <if test="telephone != null">
        #{telephone},
      </if>
      <if test="email != null">
        #{email},
      </if>
      <if test="position != null">
        #{position},
      </if>
      <if test="address != null">
        #{address},
      </if>
      <if test="createdBy != null">
        #{createdBy},
      </if>
      <if test="createdTime != null">
        #{createdTime},
      </if>
      <if test="updatedBy != null">
        #{updatedBy},
      </if>
      <if test="updatedTime != null">
        #{updatedTime},
      </if>
      <if test="def1 != null">
        #{def1},
      </if>
      <if test="def2 != null">
        #{def2},
      </if>
      <if test="def3 != null">
        #{def3},
      </if>
      <if test="def5 != null">
        #{def5},
      </if>
      <if test="def6 != null">
        #{def6},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id},
      </if>
      <if test="dr != null">
        dr = #{dr},
      </if>
      <if test="customerId != null">
        customer_id = #{customerId},
      </if>
      <if test="name != null">
        `name` = #{name},
      </if>
      <if test="firstName != null">
        first_name = #{firstName},
      </if>
      <if test="lastName != null">
        last_name = #{lastName},
      </if>
      <if test="telephone != null">
        telephone = #{telephone},
      </if>
      <if test="email != null">
        email = #{email},
      </if>
      <if test="position != null">
        `position` = #{position},
      </if>
      <if test="address != null">
        address = #{address},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime},
      </if>
      <if test="updatedBy != null">
        updated_by = #{updatedBy},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime},
      </if>
      <if test="def1 != null">
        def1 = #{def1},
      </if>
      <if test="def2 != null">
        def2 = #{def2},
      </if>
      <if test="def3 != null">
        def3 = #{def3},
      </if>
      <if test="def5 != null">
        def5 = #{def5},
      </if>
      <if test="def6 != null">
        def6 = #{def6},
      </if>
    </trim>
  </insert>
</mapper>