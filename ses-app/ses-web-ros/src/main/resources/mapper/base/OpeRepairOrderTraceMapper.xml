<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.redescooter.ses.web.ros.dao.base.OpeRepairOrderTraceMapper">
    <resultMap id="BaseResultMap" type="com.redescooter.ses.web.ros.dm.OpeRepairOrderTrace">
        <!--@mbg.generated-->
        <!--@Table ope_repair_order_trace-->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="dr" jdbcType="INTEGER" property="dr"/>
        <result column="repair_shop_id" jdbcType="BIGINT" property="repairShopId"/>
        <result column="user_id" jdbcType="BIGINT" property="userId"/>
        <result column="user_type" jdbcType="VARCHAR" property="userType"/>
        <result column="repair_order_id" jdbcType="BIGINT" property="repairOrderId"/>
        <result column="status" jdbcType="VARCHAR" property="status"/>
        <result column="event" jdbcType="VARCHAR" property="event"/>
        <result column="reason" jdbcType="VARCHAR" property="reason"/>
        <result column="longitude" jdbcType="DECIMAL" property="longitude"/>
        <result column="latitude" jdbcType="DECIMAL" property="latitude"/>
        <result column="geohash" jdbcType="VARCHAR" property="geohash"/>
        <result column="created_by" jdbcType="BIGINT" property="createdBy"/>
        <result column="created_time" jdbcType="TIMESTAMP" property="createdTime"/>
        <result column="updated_by" jdbcType="BIGINT" property="updatedBy"/>
        <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime"/>
        <result column="def1" jdbcType="VARCHAR" property="def1"/>
        <result column="def2" jdbcType="VARCHAR" property="def2"/>
        <result column="def3" jdbcType="VARCHAR" property="def3"/>
        <result column="def5" jdbcType="VARCHAR" property="def5"/>
        <result column="def6" jdbcType="DOUBLE" property="def6"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, dr, repair_shop_id, user_id, user_type, repair_order_id, `status`, event, reason,
        longitude, latitude, geohash, created_by, created_time, updated_by, updated_time,
        def1, def2, def3, def5, def6
    </sql>
    <update id="updateBatch" parameterType="java.util.List">
        <!--@mbg.generated-->
        update ope_repair_order_trace
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="dr = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.dr,jdbcType=INTEGER}
                </foreach>
            </trim>
            <trim prefix="repair_shop_id = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.repairShopId,jdbcType=BIGINT}
                </foreach>
            </trim>
            <trim prefix="user_id = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.userId,jdbcType=BIGINT}
                </foreach>
            </trim>
            <trim prefix="user_type = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.userType,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="repair_order_id = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.repairOrderId,jdbcType=BIGINT}
                </foreach>
            </trim>
            <trim prefix="`status` = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.status,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="event = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.event,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="reason = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.reason,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="longitude = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.longitude,jdbcType=DECIMAL}
                </foreach>
            </trim>
            <trim prefix="latitude = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.latitude,jdbcType=DECIMAL}
                </foreach>
            </trim>
            <trim prefix="geohash = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.geohash,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="created_by = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.createdBy,jdbcType=BIGINT}
                </foreach>
            </trim>
            <trim prefix="created_time = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.createdTime,jdbcType=TIMESTAMP}
                </foreach>
            </trim>
            <trim prefix="updated_by = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.updatedBy,jdbcType=BIGINT}
                </foreach>
            </trim>
            <trim prefix="updated_time = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.updatedTime,jdbcType=TIMESTAMP}
                </foreach>
            </trim>
            <trim prefix="def1 = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.def1,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="def2 = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.def2,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="def3 = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.def3,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="def5 = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.def5,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="def6 = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.def6,jdbcType=DOUBLE}
                </foreach>
            </trim>
        </trim>
        where id in
        <foreach close=")" collection="list" item="item" open="(" separator=", ">
            #{item.id,jdbcType=BIGINT}
        </foreach>
    </update>
    <insert id="batchInsert" parameterType="map">
        <!--@mbg.generated-->
        insert into ope_repair_order_trace
        (id, dr, repair_shop_id, user_id, user_type, repair_order_id, `status`, event, reason,
        longitude, latitude, geohash, created_by, created_time, updated_by, updated_time,
        def1, def2, def3, def5, def6)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.id,jdbcType=BIGINT}, #{item.dr,jdbcType=INTEGER}, #{item.repairShopId,jdbcType=BIGINT},
            #{item.userId,jdbcType=BIGINT}, #{item.userType,jdbcType=VARCHAR}, #{item.repairOrderId,jdbcType=BIGINT},
            #{item.status,jdbcType=VARCHAR}, #{item.event,jdbcType=VARCHAR}, #{item.reason,jdbcType=VARCHAR},
            #{item.longitude,jdbcType=DECIMAL}, #{item.latitude,jdbcType=DECIMAL}, #{item.geohash,jdbcType=VARCHAR},
            #{item.createdBy,jdbcType=BIGINT}, #{item.createdTime,jdbcType=TIMESTAMP},
            #{item.updatedBy,jdbcType=BIGINT},
            #{item.updatedTime,jdbcType=TIMESTAMP}, #{item.def1,jdbcType=VARCHAR}, #{item.def2,jdbcType=VARCHAR},
            #{item.def3,jdbcType=VARCHAR}, #{item.def5,jdbcType=VARCHAR}, #{item.def6,jdbcType=DOUBLE}
            )
        </foreach>
    </insert>
    <insert id="insertOrUpdate" parameterType="com.redescooter.ses.web.ros.dm.OpeRepairOrderTrace">
        <!--@mbg.generated-->
        insert into ope_repair_order_trace
        (id, dr, repair_shop_id, user_id, user_type, repair_order_id, `status`, event, reason,
        longitude, latitude, geohash, created_by, created_time, updated_by, updated_time,
        def1, def2, def3, def5, def6)
        values
        (#{id,jdbcType=BIGINT}, #{dr,jdbcType=INTEGER}, #{repairShopId,jdbcType=BIGINT},
        #{userId,jdbcType=BIGINT}, #{userType,jdbcType=VARCHAR}, #{repairOrderId,jdbcType=BIGINT},
        #{status,jdbcType=VARCHAR}, #{event,jdbcType=VARCHAR}, #{reason,jdbcType=VARCHAR},
        #{longitude,jdbcType=DECIMAL}, #{latitude,jdbcType=DECIMAL}, #{geohash,jdbcType=VARCHAR},
        #{createdBy,jdbcType=BIGINT}, #{createdTime,jdbcType=TIMESTAMP}, #{updatedBy,jdbcType=BIGINT},
        #{updatedTime,jdbcType=TIMESTAMP}, #{def1,jdbcType=VARCHAR}, #{def2,jdbcType=VARCHAR},
        #{def3,jdbcType=VARCHAR}, #{def5,jdbcType=VARCHAR}, #{def6,jdbcType=DOUBLE})
        on duplicate key update
        id = #{id,jdbcType=BIGINT},
        dr = #{dr,jdbcType=INTEGER},
        repair_shop_id = #{repairShopId,jdbcType=BIGINT},
        user_id = #{userId,jdbcType=BIGINT},
        user_type = #{userType,jdbcType=VARCHAR},
        repair_order_id = #{repairOrderId,jdbcType=BIGINT},
        `status` = #{status,jdbcType=VARCHAR},
        event = #{event,jdbcType=VARCHAR},
        reason = #{reason,jdbcType=VARCHAR},
        longitude = #{longitude,jdbcType=DECIMAL},
        latitude = #{latitude,jdbcType=DECIMAL},
        geohash = #{geohash,jdbcType=VARCHAR},
        created_by = #{createdBy,jdbcType=BIGINT},
        created_time = #{createdTime,jdbcType=TIMESTAMP},
        updated_by = #{updatedBy,jdbcType=BIGINT},
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
        def1 = #{def1,jdbcType=VARCHAR},
        def2 = #{def2,jdbcType=VARCHAR},
        def3 = #{def3,jdbcType=VARCHAR},
        def5 = #{def5,jdbcType=VARCHAR},
        def6 = #{def6,jdbcType=DOUBLE}
    </insert>
    <insert id="insertOrUpdateSelective" parameterType="com.redescooter.ses.web.ros.dm.OpeRepairOrderTrace">
        <!--@mbg.generated-->
        insert into ope_repair_order_trace
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="dr != null">
                dr,
            </if>
            <if test="repairShopId != null">
                repair_shop_id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="userType != null">
                user_type,
            </if>
            <if test="repairOrderId != null">
                repair_order_id,
            </if>
            <if test="status != null">
                `status`,
            </if>
            <if test="event != null">
                event,
            </if>
            <if test="reason != null">
                reason,
            </if>
            <if test="longitude != null">
                longitude,
            </if>
            <if test="latitude != null">
                latitude,
            </if>
            <if test="geohash != null">
                geohash,
            </if>
            <if test="createdBy != null">
                created_by,
            </if>
            <if test="createdTime != null">
                created_time,
            </if>
            <if test="updatedBy != null">
                updated_by,
            </if>
            <if test="updatedTime != null">
                updated_time,
            </if>
            <if test="def1 != null">
                def1,
            </if>
            <if test="def2 != null">
                def2,
            </if>
            <if test="def3 != null">
                def3,
            </if>
            <if test="def5 != null">
                def5,
            </if>
            <if test="def6 != null">
                def6,
            </if>
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="dr != null">
                #{dr,jdbcType=INTEGER},
            </if>
            <if test="repairShopId != null">
                #{repairShopId,jdbcType=BIGINT},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="userType != null">
                #{userType,jdbcType=VARCHAR},
            </if>
            <if test="repairOrderId != null">
                #{repairOrderId,jdbcType=BIGINT},
            </if>
            <if test="status != null">
                #{status,jdbcType=VARCHAR},
            </if>
            <if test="event != null">
                #{event,jdbcType=VARCHAR},
            </if>
            <if test="reason != null">
                #{reason,jdbcType=VARCHAR},
            </if>
            <if test="longitude != null">
                #{longitude,jdbcType=DECIMAL},
            </if>
            <if test="latitude != null">
                #{latitude,jdbcType=DECIMAL},
            </if>
            <if test="geohash != null">
                #{geohash,jdbcType=VARCHAR},
            </if>
            <if test="createdBy != null">
                #{createdBy,jdbcType=BIGINT},
            </if>
            <if test="createdTime != null">
                #{createdTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedBy != null">
                #{updatedBy,jdbcType=BIGINT},
            </if>
            <if test="updatedTime != null">
                #{updatedTime,jdbcType=TIMESTAMP},
            </if>
            <if test="def1 != null">
                #{def1,jdbcType=VARCHAR},
            </if>
            <if test="def2 != null">
                #{def2,jdbcType=VARCHAR},
            </if>
            <if test="def3 != null">
                #{def3,jdbcType=VARCHAR},
            </if>
            <if test="def5 != null">
                #{def5,jdbcType=VARCHAR},
            </if>
            <if test="def6 != null">
                #{def6,jdbcType=DOUBLE},
            </if>
        </trim>
        on duplicate key update
        <trim suffixOverrides=",">
            <if test="id != null">
                id = #{id,jdbcType=BIGINT},
            </if>
            <if test="dr != null">
                dr = #{dr,jdbcType=INTEGER},
            </if>
            <if test="repairShopId != null">
                repair_shop_id = #{repairShopId,jdbcType=BIGINT},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=BIGINT},
            </if>
            <if test="userType != null">
                user_type = #{userType,jdbcType=VARCHAR},
            </if>
            <if test="repairOrderId != null">
                repair_order_id = #{repairOrderId,jdbcType=BIGINT},
            </if>
            <if test="status != null">
                `status` = #{status,jdbcType=VARCHAR},
            </if>
            <if test="event != null">
                event = #{event,jdbcType=VARCHAR},
            </if>
            <if test="reason != null">
                reason = #{reason,jdbcType=VARCHAR},
            </if>
            <if test="longitude != null">
                longitude = #{longitude,jdbcType=DECIMAL},
            </if>
            <if test="latitude != null">
                latitude = #{latitude,jdbcType=DECIMAL},
            </if>
            <if test="geohash != null">
                geohash = #{geohash,jdbcType=VARCHAR},
            </if>
            <if test="createdBy != null">
                created_by = #{createdBy,jdbcType=BIGINT},
            </if>
            <if test="createdTime != null">
                created_time = #{createdTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedBy != null">
                updated_by = #{updatedBy,jdbcType=BIGINT},
            </if>
            <if test="updatedTime != null">
                updated_time = #{updatedTime,jdbcType=TIMESTAMP},
            </if>
            <if test="def1 != null">
                def1 = #{def1,jdbcType=VARCHAR},
            </if>
            <if test="def2 != null">
                def2 = #{def2,jdbcType=VARCHAR},
            </if>
            <if test="def3 != null">
                def3 = #{def3,jdbcType=VARCHAR},
            </if>
            <if test="def5 != null">
                def5 = #{def5,jdbcType=VARCHAR},
            </if>
            <if test="def6 != null">
                def6 = #{def6,jdbcType=DOUBLE},
            </if>
        </trim>
    </insert>
</mapper>