<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.redescooter.ses.web.ros.dao.base.OpeProductionQualityTempateMapper">
  <resultMap id="BaseResultMap" type="com.redescooter.ses.web.ros.dm.OpeProductionQualityTempate">
    <!--@mbg.generated-->
    <!--@Table ope_production_quality_tempate-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="dr" jdbcType="INTEGER" property="dr" />
    <result column="production_id" jdbcType="BIGINT" property="productionId" />
    <result column="import_excel_batch_no" jdbcType="VARCHAR" property="importExcelBatchNo" />
    <result column="source_type" jdbcType="INTEGER" property="sourceType" />
    <result column="production_type" jdbcType="INTEGER" property="productionType" />
    <result column="qc_item_name" jdbcType="VARCHAR" property="qcItemName" />
    <result column="revision" jdbcType="INTEGER" property="revision" />
    <result column="created_by" jdbcType="BIGINT" property="createdBy" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="updated_by" jdbcType="BIGINT" property="updatedBy" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
    <result column="def1" jdbcType="VARCHAR" property="def1" />
    <result column="def2" jdbcType="VARCHAR" property="def2" />
    <result column="def3" jdbcType="VARCHAR" property="def3" />
    <result column="def4" jdbcType="VARCHAR" property="def4" />
    <result column="def5" jdbcType="DECIMAL" property="def5" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, dr, production_id, import_excel_batch_no, source_type, production_type, qc_item_name, 
    revision, created_by, created_time, updated_by, updated_time, def1, def2, def3, def4, 
    def5
  </sql>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update ope_production_quality_tempate
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="dr = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.dr,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="production_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.productionId,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="import_excel_batch_no = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.importExcelBatchNo,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="source_type = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.sourceType,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="production_type = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.productionType,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="qc_item_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.qcItemName,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="revision = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.revision,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="created_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.createdBy,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="created_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.createdTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="updated_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.updatedBy,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="updated_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.updatedTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="def1 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.def1,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="def2 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.def2,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="def3 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.def3,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="def4 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.def4,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="def5 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.def5,jdbcType=DECIMAL}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=BIGINT}
    </foreach>
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--@mbg.generated-->
    insert into ope_production_quality_tempate
    (id, dr, production_id, import_excel_batch_no, source_type, production_type, qc_item_name, 
      revision, created_by, created_time, updated_by, updated_time, def1, def2, def3, 
      def4, def5)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.dr,jdbcType=INTEGER}, #{item.productionId,jdbcType=BIGINT}, 
        #{item.importExcelBatchNo,jdbcType=VARCHAR}, #{item.sourceType,jdbcType=INTEGER}, 
        #{item.productionType,jdbcType=INTEGER}, #{item.qcItemName,jdbcType=VARCHAR}, #{item.revision,jdbcType=INTEGER}, 
        #{item.createdBy,jdbcType=BIGINT}, #{item.createdTime,jdbcType=TIMESTAMP}, #{item.updatedBy,jdbcType=BIGINT}, 
        #{item.updatedTime,jdbcType=TIMESTAMP}, #{item.def1,jdbcType=VARCHAR}, #{item.def2,jdbcType=VARCHAR}, 
        #{item.def3,jdbcType=VARCHAR}, #{item.def4,jdbcType=VARCHAR}, #{item.def5,jdbcType=DECIMAL}
        )
    </foreach>
  </insert>
  <insert id="insertOrUpdate" parameterType="com.redescooter.ses.web.ros.dm.OpeProductionQualityTempate">
    <!--@mbg.generated-->
    insert into ope_production_quality_tempate
    (id, dr, production_id, import_excel_batch_no, source_type, production_type, qc_item_name, 
      revision, created_by, created_time, updated_by, updated_time, def1, def2, def3, 
      def4, def5)
    values
    (#{id,jdbcType=BIGINT}, #{dr,jdbcType=INTEGER}, #{productionId,jdbcType=BIGINT}, 
      #{importExcelBatchNo,jdbcType=VARCHAR}, #{sourceType,jdbcType=INTEGER}, #{productionType,jdbcType=INTEGER}, 
      #{qcItemName,jdbcType=VARCHAR}, #{revision,jdbcType=INTEGER}, #{createdBy,jdbcType=BIGINT}, 
      #{createdTime,jdbcType=TIMESTAMP}, #{updatedBy,jdbcType=BIGINT}, #{updatedTime,jdbcType=TIMESTAMP}, 
      #{def1,jdbcType=VARCHAR}, #{def2,jdbcType=VARCHAR}, #{def3,jdbcType=VARCHAR}, #{def4,jdbcType=VARCHAR}, 
      #{def5,jdbcType=DECIMAL})
    on duplicate key update 
    id = #{id,jdbcType=BIGINT}, 
    dr = #{dr,jdbcType=INTEGER}, 
    production_id = #{productionId,jdbcType=BIGINT}, 
    import_excel_batch_no = #{importExcelBatchNo,jdbcType=VARCHAR}, 
    source_type = #{sourceType,jdbcType=INTEGER}, 
    production_type = #{productionType,jdbcType=INTEGER}, 
    qc_item_name = #{qcItemName,jdbcType=VARCHAR}, 
    revision = #{revision,jdbcType=INTEGER}, 
    created_by = #{createdBy,jdbcType=BIGINT}, 
    created_time = #{createdTime,jdbcType=TIMESTAMP}, 
    updated_by = #{updatedBy,jdbcType=BIGINT}, 
    updated_time = #{updatedTime,jdbcType=TIMESTAMP}, 
    def1 = #{def1,jdbcType=VARCHAR}, 
    def2 = #{def2,jdbcType=VARCHAR}, 
    def3 = #{def3,jdbcType=VARCHAR}, 
    def4 = #{def4,jdbcType=VARCHAR}, 
    def5 = #{def5,jdbcType=DECIMAL}
  </insert>
  <insert id="insertOrUpdateSelective" parameterType="com.redescooter.ses.web.ros.dm.OpeProductionQualityTempate">
    <!--@mbg.generated-->
    insert into ope_production_quality_tempate
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="dr != null">
        dr,
      </if>
      <if test="productionId != null">
        production_id,
      </if>
      <if test="importExcelBatchNo != null">
        import_excel_batch_no,
      </if>
      <if test="sourceType != null">
        source_type,
      </if>
      <if test="productionType != null">
        production_type,
      </if>
      <if test="qcItemName != null">
        qc_item_name,
      </if>
      <if test="revision != null">
        revision,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="updatedBy != null">
        updated_by,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
      <if test="def1 != null">
        def1,
      </if>
      <if test="def2 != null">
        def2,
      </if>
      <if test="def3 != null">
        def3,
      </if>
      <if test="def4 != null">
        def4,
      </if>
      <if test="def5 != null">
        def5,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="dr != null">
        #{dr,jdbcType=INTEGER},
      </if>
      <if test="productionId != null">
        #{productionId,jdbcType=BIGINT},
      </if>
      <if test="importExcelBatchNo != null">
        #{importExcelBatchNo,jdbcType=VARCHAR},
      </if>
      <if test="sourceType != null">
        #{sourceType,jdbcType=INTEGER},
      </if>
      <if test="productionType != null">
        #{productionType,jdbcType=INTEGER},
      </if>
      <if test="qcItemName != null">
        #{qcItemName,jdbcType=VARCHAR},
      </if>
      <if test="revision != null">
        #{revision,jdbcType=INTEGER},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=BIGINT},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=BIGINT},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="def1 != null">
        #{def1,jdbcType=VARCHAR},
      </if>
      <if test="def2 != null">
        #{def2,jdbcType=VARCHAR},
      </if>
      <if test="def3 != null">
        #{def3,jdbcType=VARCHAR},
      </if>
      <if test="def4 != null">
        #{def4,jdbcType=VARCHAR},
      </if>
      <if test="def5 != null">
        #{def5,jdbcType=DECIMAL},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=BIGINT},
      </if>
      <if test="dr != null">
        dr = #{dr,jdbcType=INTEGER},
      </if>
      <if test="productionId != null">
        production_id = #{productionId,jdbcType=BIGINT},
      </if>
      <if test="importExcelBatchNo != null">
        import_excel_batch_no = #{importExcelBatchNo,jdbcType=VARCHAR},
      </if>
      <if test="sourceType != null">
        source_type = #{sourceType,jdbcType=INTEGER},
      </if>
      <if test="productionType != null">
        production_type = #{productionType,jdbcType=INTEGER},
      </if>
      <if test="qcItemName != null">
        qc_item_name = #{qcItemName,jdbcType=VARCHAR},
      </if>
      <if test="revision != null">
        revision = #{revision,jdbcType=INTEGER},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=BIGINT},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        updated_by = #{updatedBy,jdbcType=BIGINT},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="def1 != null">
        def1 = #{def1,jdbcType=VARCHAR},
      </if>
      <if test="def2 != null">
        def2 = #{def2,jdbcType=VARCHAR},
      </if>
      <if test="def3 != null">
        def3 = #{def3,jdbcType=VARCHAR},
      </if>
      <if test="def4 != null">
        def4 = #{def4,jdbcType=VARCHAR},
      </if>
      <if test="def5 != null">
        def5 = #{def5,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
</mapper>