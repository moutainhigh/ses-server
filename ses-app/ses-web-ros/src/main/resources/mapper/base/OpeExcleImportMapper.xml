<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.redescooter.ses.web.ros.dao.base.OpeExcleImportMapper">
  <resultMap id="BaseResultMap" type="com.redescooter.ses.web.ros.dm.OpeExcleImport">
    <!--@mbg.generated-->
    <!--@Table ope_excle_import-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="dr" jdbcType="INTEGER" property="dr" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="batch_no" jdbcType="VARCHAR" property="batchNo" />
    <result column="count" jdbcType="INTEGER" property="count" />
    <result column="attachment" jdbcType="VARCHAR" property="attachment" />
    <result column="service_type" jdbcType="VARCHAR" property="serviceType" />
    <result column="message" jdbcType="VARCHAR" property="message" />
    <result column="created_by" jdbcType="BIGINT" property="createdBy" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="updated_by" jdbcType="BIGINT" property="updatedBy" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
    <result column="def1" jdbcType="VARCHAR" property="def1" />
    <result column="def2" jdbcType="VARCHAR" property="def2" />
    <result column="def3" jdbcType="VARCHAR" property="def3" />
    <result column="def5" jdbcType="VARCHAR" property="def5" />
    <result column="def6" jdbcType="DOUBLE" property="def6" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.redescooter.ses.web.ros.dm.OpeExcleImport">
    <!--@mbg.generated-->
    <!--@Table ope_excle_import-->
    <result column="data_json" jdbcType="LONGVARCHAR" property="dataJson" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, dr, `status`, batch_no, `count`, attachment, service_type, message, created_by, 
    created_time, updated_by, updated_time, def1, def2, def3, def5, def6
  </sql>
  <sql id="Blob_Column_List">
    <!--@mbg.generated-->
    data_json
  </sql>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update ope_excle_import
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="dr = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.dr,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="`status` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.status,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="batch_no = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.batchNo,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="`count` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.count,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="attachment = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.attachment,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="service_type = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.serviceType,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="message = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.message,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="created_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.createdBy,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="created_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.createdTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="updated_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.updatedBy,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="updated_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.updatedTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="def1 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.def1,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="def2 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.def2,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="def3 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.def3,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="def5 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.def5,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="def6 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.def6,jdbcType=DOUBLE}
        </foreach>
      </trim>
      <trim prefix="data_json = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.dataJson,jdbcType=LONGVARCHAR}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=BIGINT}
    </foreach>
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--@mbg.generated-->
    insert into ope_excle_import
    (id, dr, `status`, batch_no, `count`, attachment, service_type, message, created_by, 
      created_time, updated_by, updated_time, def1, def2, def3, def5, def6, data_json
      )
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.dr,jdbcType=INTEGER}, #{item.status,jdbcType=VARCHAR}, 
        #{item.batchNo,jdbcType=VARCHAR}, #{item.count,jdbcType=INTEGER}, #{item.attachment,jdbcType=VARCHAR}, 
        #{item.serviceType,jdbcType=VARCHAR}, #{item.message,jdbcType=VARCHAR}, #{item.createdBy,jdbcType=BIGINT}, 
        #{item.createdTime,jdbcType=TIMESTAMP}, #{item.updatedBy,jdbcType=BIGINT}, #{item.updatedTime,jdbcType=TIMESTAMP}, 
        #{item.def1,jdbcType=VARCHAR}, #{item.def2,jdbcType=VARCHAR}, #{item.def3,jdbcType=VARCHAR}, 
        #{item.def5,jdbcType=VARCHAR}, #{item.def6,jdbcType=DOUBLE}, #{item.dataJson,jdbcType=LONGVARCHAR}
        )
    </foreach>
  </insert>
  <insert id="insertOrUpdate" parameterType="com.redescooter.ses.web.ros.dm.OpeExcleImport">
    <!--@mbg.generated-->
    insert into ope_excle_import
    (id, dr, `status`, batch_no, `count`, attachment, service_type, message, created_by, 
      created_time, updated_by, updated_time, def1, def2, def3, def5, def6)
    values
    (#{id,jdbcType=BIGINT}, #{dr,jdbcType=INTEGER}, #{status,jdbcType=VARCHAR}, #{batchNo,jdbcType=VARCHAR}, 
      #{count,jdbcType=INTEGER}, #{attachment,jdbcType=VARCHAR}, #{serviceType,jdbcType=VARCHAR}, 
      #{message,jdbcType=VARCHAR}, #{createdBy,jdbcType=BIGINT}, #{createdTime,jdbcType=TIMESTAMP}, 
      #{updatedBy,jdbcType=BIGINT}, #{updatedTime,jdbcType=TIMESTAMP}, #{def1,jdbcType=VARCHAR}, 
      #{def2,jdbcType=VARCHAR}, #{def3,jdbcType=VARCHAR}, #{def5,jdbcType=VARCHAR}, #{def6,jdbcType=DOUBLE}
      )
    on duplicate key update 
    id = #{id,jdbcType=BIGINT}, 
    dr = #{dr,jdbcType=INTEGER}, 
    `status` = #{status,jdbcType=VARCHAR}, 
    batch_no = #{batchNo,jdbcType=VARCHAR}, 
    `count` = #{count,jdbcType=INTEGER}, 
    attachment = #{attachment,jdbcType=VARCHAR}, 
    service_type = #{serviceType,jdbcType=VARCHAR}, 
    message = #{message,jdbcType=VARCHAR}, 
    created_by = #{createdBy,jdbcType=BIGINT}, 
    created_time = #{createdTime,jdbcType=TIMESTAMP}, 
    updated_by = #{updatedBy,jdbcType=BIGINT}, 
    updated_time = #{updatedTime,jdbcType=TIMESTAMP}, 
    def1 = #{def1,jdbcType=VARCHAR}, 
    def2 = #{def2,jdbcType=VARCHAR}, 
    def3 = #{def3,jdbcType=VARCHAR}, 
    def5 = #{def5,jdbcType=VARCHAR}, 
    def6 = #{def6,jdbcType=DOUBLE}
  </insert>
  <insert id="insertOrUpdateWithBLOBs" parameterType="com.redescooter.ses.web.ros.dm.OpeExcleImport">
    <!--@mbg.generated-->
    insert into ope_excle_import
    (id, dr, `status`, batch_no, `count`, attachment, service_type, message, created_by, 
      created_time, updated_by, updated_time, def1, def2, def3, def5, def6, data_json
      )
    values
    (#{id,jdbcType=BIGINT}, #{dr,jdbcType=INTEGER}, #{status,jdbcType=VARCHAR}, #{batchNo,jdbcType=VARCHAR}, 
      #{count,jdbcType=INTEGER}, #{attachment,jdbcType=VARCHAR}, #{serviceType,jdbcType=VARCHAR}, 
      #{message,jdbcType=VARCHAR}, #{createdBy,jdbcType=BIGINT}, #{createdTime,jdbcType=TIMESTAMP}, 
      #{updatedBy,jdbcType=BIGINT}, #{updatedTime,jdbcType=TIMESTAMP}, #{def1,jdbcType=VARCHAR}, 
      #{def2,jdbcType=VARCHAR}, #{def3,jdbcType=VARCHAR}, #{def5,jdbcType=VARCHAR}, #{def6,jdbcType=DOUBLE}, 
      #{dataJson,jdbcType=LONGVARCHAR})
    on duplicate key update 
    id = #{id,jdbcType=BIGINT}, 
    dr = #{dr,jdbcType=INTEGER}, 
    `status` = #{status,jdbcType=VARCHAR}, 
    batch_no = #{batchNo,jdbcType=VARCHAR}, 
    `count` = #{count,jdbcType=INTEGER}, 
    attachment = #{attachment,jdbcType=VARCHAR}, 
    service_type = #{serviceType,jdbcType=VARCHAR}, 
    message = #{message,jdbcType=VARCHAR}, 
    created_by = #{createdBy,jdbcType=BIGINT}, 
    created_time = #{createdTime,jdbcType=TIMESTAMP}, 
    updated_by = #{updatedBy,jdbcType=BIGINT}, 
    updated_time = #{updatedTime,jdbcType=TIMESTAMP}, 
    def1 = #{def1,jdbcType=VARCHAR}, 
    def2 = #{def2,jdbcType=VARCHAR}, 
    def3 = #{def3,jdbcType=VARCHAR}, 
    def5 = #{def5,jdbcType=VARCHAR}, 
    def6 = #{def6,jdbcType=DOUBLE}, 
    data_json = #{dataJson,jdbcType=LONGVARCHAR}
  </insert>
  <insert id="insertOrUpdateSelective" parameterType="com.redescooter.ses.web.ros.dm.OpeExcleImport">
    <!--@mbg.generated-->
    insert into ope_excle_import
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="dr != null">
        dr,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="batchNo != null">
        batch_no,
      </if>
      <if test="count != null">
        `count`,
      </if>
      <if test="attachment != null">
        attachment,
      </if>
      <if test="serviceType != null">
        service_type,
      </if>
      <if test="message != null">
        message,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="updatedBy != null">
        updated_by,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
      <if test="def1 != null">
        def1,
      </if>
      <if test="def2 != null">
        def2,
      </if>
      <if test="def3 != null">
        def3,
      </if>
      <if test="def5 != null">
        def5,
      </if>
      <if test="def6 != null">
        def6,
      </if>
      <if test="dataJson != null">
        data_json,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="dr != null">
        #{dr,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="batchNo != null">
        #{batchNo,jdbcType=VARCHAR},
      </if>
      <if test="count != null">
        #{count,jdbcType=INTEGER},
      </if>
      <if test="attachment != null">
        #{attachment,jdbcType=VARCHAR},
      </if>
      <if test="serviceType != null">
        #{serviceType,jdbcType=VARCHAR},
      </if>
      <if test="message != null">
        #{message,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=BIGINT},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=BIGINT},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="def1 != null">
        #{def1,jdbcType=VARCHAR},
      </if>
      <if test="def2 != null">
        #{def2,jdbcType=VARCHAR},
      </if>
      <if test="def3 != null">
        #{def3,jdbcType=VARCHAR},
      </if>
      <if test="def5 != null">
        #{def5,jdbcType=VARCHAR},
      </if>
      <if test="def6 != null">
        #{def6,jdbcType=DOUBLE},
      </if>
      <if test="dataJson != null">
        #{dataJson,jdbcType=LONGVARCHAR},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=BIGINT},
      </if>
      <if test="dr != null">
        dr = #{dr,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=VARCHAR},
      </if>
      <if test="batchNo != null">
        batch_no = #{batchNo,jdbcType=VARCHAR},
      </if>
      <if test="count != null">
        `count` = #{count,jdbcType=INTEGER},
      </if>
      <if test="attachment != null">
        attachment = #{attachment,jdbcType=VARCHAR},
      </if>
      <if test="serviceType != null">
        service_type = #{serviceType,jdbcType=VARCHAR},
      </if>
      <if test="message != null">
        message = #{message,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=BIGINT},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        updated_by = #{updatedBy,jdbcType=BIGINT},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="def1 != null">
        def1 = #{def1,jdbcType=VARCHAR},
      </if>
      <if test="def2 != null">
        def2 = #{def2,jdbcType=VARCHAR},
      </if>
      <if test="def3 != null">
        def3 = #{def3,jdbcType=VARCHAR},
      </if>
      <if test="def5 != null">
        def5 = #{def5,jdbcType=VARCHAR},
      </if>
      <if test="def6 != null">
        def6 = #{def6,jdbcType=DOUBLE},
      </if>
      <if test="dataJson != null">
        data_json = #{dataJson,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
</mapper>