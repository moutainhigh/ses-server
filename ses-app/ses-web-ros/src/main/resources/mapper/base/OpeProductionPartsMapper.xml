<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.redescooter.ses.web.ros.dao.base.OpeProductionPartsMapper">
  <resultMap id="BaseResultMap" type="com.redescooter.ses.web.ros.dm.OpeProductionParts">
    <!--@mbg.generated-->
    <!--@Table ope_production_parts-->
    <id column="id" property="id" />
    <result column="dr" property="dr" />
    <result column="tenant_id" property="tenantId" />
    <result column="dept_id" property="deptId" />
    <result column="parts_no" property="partsNo" />
    <result column="parts_type" property="partsType" />
    <result column="parts_sec" property="partsSec" />
    <result column="disable" property="disable" />
    <result column="sn_class" property="snClass" />
    <result column="id_calss" property="idCalss" />
    <result column="parts_is_assembly" property="partsIsAssembly" />
    <result column="parts_is_for_assembly" property="partsIsForAssembly" />
    <result column="parts_qty" property="partsQty" />
    <result column="supplier_id" property="supplierId" />
    <result column="procurement_cycle" property="procurementCycle" />
    <result column="dwg" property="dwg" />
    <result column="remark" property="remark" />
    <result column="announ_user_id" property="announUserId" />
    <result column="op_announ_user_id" property="opAnnounUserId" />
    <result column="cn_name" property="cnName" />
    <result column="en_name" property="enName" />
    <result column="fr_name" property="frName" />
    <result column="level" property="level" />
    <result column="main_drawing" property="mainDrawing" />
    <result column="ecn_number" property="ecnNumber" />
    <result column="item" property="item" />
    <result column="sell_calss" property="sellCalss" />
    <result column="drawing_size" property="drawingSize" />
    <result column="weight" property="weight" />
    <result column="supplier_id_2" property="supplierId2" />
    <result column="rate_typ" property="rateTyp" />
    <result column="created_by" property="createdBy" />
    <result column="created_time" property="createdTime" />
    <result column="updated_by" property="updatedBy" />
    <result column="updated_time" property="updatedTime" />
    <result column="def1" property="def1" />
    <result column="def2" property="def2" />
    <result column="def3" property="def3" />
    <result column="def4" property="def4" />
    <result column="def5" property="def5" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, dr, tenant_id, dept_id, parts_no, parts_type, parts_sec, `disable`, sn_class, 
    id_calss, parts_is_assembly, parts_is_for_assembly, parts_qty, supplier_id, procurement_cycle, 
    dwg, remark, announ_user_id, op_announ_user_id, cn_name, en_name, fr_name, `level`, 
    main_drawing, ecn_number, item, sell_calss, drawing_size, weight, supplier_id_2, 
    rate_typ, created_by, created_time, updated_by, updated_time, def1, def2, def3, def4, 
    def5
  </sql>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update ope_production_parts
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="dr = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.dr}
        </foreach>
      </trim>
      <trim prefix="tenant_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.tenantId}
        </foreach>
      </trim>
      <trim prefix="dept_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.deptId}
        </foreach>
      </trim>
      <trim prefix="parts_no = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.partsNo}
        </foreach>
      </trim>
      <trim prefix="parts_type = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.partsType}
        </foreach>
      </trim>
      <trim prefix="parts_sec = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.partsSec}
        </foreach>
      </trim>
      <trim prefix="`disable` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.disable}
        </foreach>
      </trim>
      <trim prefix="sn_class = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.snClass}
        </foreach>
      </trim>
      <trim prefix="id_calss = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.idCalss}
        </foreach>
      </trim>
      <trim prefix="parts_is_assembly = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.partsIsAssembly}
        </foreach>
      </trim>
      <trim prefix="parts_is_for_assembly = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.partsIsForAssembly}
        </foreach>
      </trim>
      <trim prefix="parts_qty = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.partsQty}
        </foreach>
      </trim>
      <trim prefix="supplier_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.supplierId}
        </foreach>
      </trim>
      <trim prefix="procurement_cycle = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.procurementCycle}
        </foreach>
      </trim>
      <trim prefix="dwg = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.dwg}
        </foreach>
      </trim>
      <trim prefix="remark = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.remark}
        </foreach>
      </trim>
      <trim prefix="announ_user_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.announUserId}
        </foreach>
      </trim>
      <trim prefix="op_announ_user_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.opAnnounUserId}
        </foreach>
      </trim>
      <trim prefix="cn_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.cnName}
        </foreach>
      </trim>
      <trim prefix="en_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.enName}
        </foreach>
      </trim>
      <trim prefix="fr_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.frName}
        </foreach>
      </trim>
      <trim prefix="`level` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.level}
        </foreach>
      </trim>
      <trim prefix="main_drawing = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.mainDrawing}
        </foreach>
      </trim>
      <trim prefix="ecn_number = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.ecnNumber}
        </foreach>
      </trim>
      <trim prefix="item = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.item}
        </foreach>
      </trim>
      <trim prefix="sell_calss = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.sellCalss}
        </foreach>
      </trim>
      <trim prefix="drawing_size = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.drawingSize}
        </foreach>
      </trim>
      <trim prefix="weight = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.weight}
        </foreach>
      </trim>
      <trim prefix="supplier_id_2 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.supplierId2}
        </foreach>
      </trim>
      <trim prefix="rate_typ = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.rateTyp}
        </foreach>
      </trim>
      <trim prefix="created_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.createdBy}
        </foreach>
      </trim>
      <trim prefix="created_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.createdTime}
        </foreach>
      </trim>
      <trim prefix="updated_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.updatedBy}
        </foreach>
      </trim>
      <trim prefix="updated_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.updatedTime}
        </foreach>
      </trim>
      <trim prefix="def1 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.def1}
        </foreach>
      </trim>
      <trim prefix="def2 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.def2}
        </foreach>
      </trim>
      <trim prefix="def3 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.def3}
        </foreach>
      </trim>
      <trim prefix="def4 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.def4}
        </foreach>
      </trim>
      <trim prefix="def5 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.def5}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id}
    </foreach>
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--@mbg.generated-->
    insert into ope_production_parts
    (id, dr, tenant_id, dept_id, parts_no, parts_type, parts_sec, `disable`, sn_class, 
      id_calss, parts_is_assembly, parts_is_for_assembly, parts_qty, supplier_id, procurement_cycle, 
      dwg, remark, announ_user_id, op_announ_user_id, cn_name, en_name, fr_name, `level`, 
      main_drawing, ecn_number, item, sell_calss, drawing_size, weight, supplier_id_2, 
      rate_typ, created_by, created_time, updated_by, updated_time, def1, def2, def3, 
      def4, def5)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id}, #{item.dr}, #{item.tenantId}, #{item.deptId}, #{item.partsNo}, #{item.partsType}, 
        #{item.partsSec}, #{item.disable}, #{item.snClass}, #{item.idCalss}, #{item.partsIsAssembly}, 
        #{item.partsIsForAssembly}, #{item.partsQty}, #{item.supplierId}, #{item.procurementCycle}, 
        #{item.dwg}, #{item.remark}, #{item.announUserId}, #{item.opAnnounUserId}, #{item.cnName}, 
        #{item.enName}, #{item.frName}, #{item.level}, #{item.mainDrawing}, #{item.ecnNumber}, 
        #{item.item}, #{item.sellCalss}, #{item.drawingSize}, #{item.weight}, #{item.supplierId2}, 
        #{item.rateTyp}, #{item.createdBy}, #{item.createdTime}, #{item.updatedBy}, #{item.updatedTime}, 
        #{item.def1}, #{item.def2}, #{item.def3}, #{item.def4}, #{item.def5})
    </foreach>
  </insert>
  <insert id="insertOrUpdate" parameterType="com.redescooter.ses.web.ros.dm.OpeProductionParts">
    <!--@mbg.generated-->
    insert into ope_production_parts
    (id, dr, tenant_id, dept_id, parts_no, parts_type, parts_sec, `disable`, sn_class, 
      id_calss, parts_is_assembly, parts_is_for_assembly, parts_qty, supplier_id, procurement_cycle, 
      dwg, remark, announ_user_id, op_announ_user_id, cn_name, en_name, fr_name, `level`, 
      main_drawing, ecn_number, item, sell_calss, drawing_size, weight, supplier_id_2, 
      rate_typ, created_by, created_time, updated_by, updated_time, def1, def2, def3, 
      def4, def5)
    values
    (#{id}, #{dr}, #{tenantId}, #{deptId}, #{partsNo}, #{partsType}, #{partsSec}, #{disable}, 
      #{snClass}, #{idCalss}, #{partsIsAssembly}, #{partsIsForAssembly}, #{partsQty}, 
      #{supplierId}, #{procurementCycle}, #{dwg}, #{remark}, #{announUserId}, #{opAnnounUserId}, 
      #{cnName}, #{enName}, #{frName}, #{level}, #{mainDrawing}, #{ecnNumber}, #{item}, 
      #{sellCalss}, #{drawingSize}, #{weight}, #{supplierId2}, #{rateTyp}, #{createdBy}, 
      #{createdTime}, #{updatedBy}, #{updatedTime}, #{def1}, #{def2}, #{def3}, #{def4}, 
      #{def5})
    on duplicate key update 
    id = #{id}, 
    dr = #{dr}, 
    tenant_id = #{tenantId}, 
    dept_id = #{deptId}, 
    parts_no = #{partsNo}, 
    parts_type = #{partsType}, 
    parts_sec = #{partsSec}, 
    `disable` = #{disable}, 
    sn_class = #{snClass}, 
    id_calss = #{idCalss}, 
    parts_is_assembly = #{partsIsAssembly}, 
    parts_is_for_assembly = #{partsIsForAssembly}, 
    parts_qty = #{partsQty}, 
    supplier_id = #{supplierId}, 
    procurement_cycle = #{procurementCycle}, 
    dwg = #{dwg}, 
    remark = #{remark}, 
    announ_user_id = #{announUserId}, 
    op_announ_user_id = #{opAnnounUserId}, 
    cn_name = #{cnName}, 
    en_name = #{enName}, 
    fr_name = #{frName}, 
    `level` = #{level}, 
    main_drawing = #{mainDrawing}, 
    ecn_number = #{ecnNumber}, 
    item = #{item}, 
    sell_calss = #{sellCalss}, 
    drawing_size = #{drawingSize}, 
    weight = #{weight}, 
    supplier_id_2 = #{supplierId2}, 
    rate_typ = #{rateTyp}, 
    created_by = #{createdBy}, 
    created_time = #{createdTime}, 
    updated_by = #{updatedBy}, 
    updated_time = #{updatedTime}, 
    def1 = #{def1}, 
    def2 = #{def2}, 
    def3 = #{def3}, 
    def4 = #{def4}, 
    def5 = #{def5}
  </insert>
  <insert id="insertOrUpdateSelective" parameterType="com.redescooter.ses.web.ros.dm.OpeProductionParts">
    <!--@mbg.generated-->
    insert into ope_production_parts
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="dr != null">
        dr,
      </if>
      <if test="tenantId != null">
        tenant_id,
      </if>
      <if test="deptId != null">
        dept_id,
      </if>
      <if test="partsNo != null">
        parts_no,
      </if>
      <if test="partsType != null">
        parts_type,
      </if>
      <if test="partsSec != null">
        parts_sec,
      </if>
      <if test="disable != null">
        `disable`,
      </if>
      <if test="snClass != null">
        sn_class,
      </if>
      <if test="idCalss != null">
        id_calss,
      </if>
      <if test="partsIsAssembly != null">
        parts_is_assembly,
      </if>
      <if test="partsIsForAssembly != null">
        parts_is_for_assembly,
      </if>
      <if test="partsQty != null">
        parts_qty,
      </if>
      <if test="supplierId != null">
        supplier_id,
      </if>
      <if test="procurementCycle != null">
        procurement_cycle,
      </if>
      <if test="dwg != null">
        dwg,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="announUserId != null">
        announ_user_id,
      </if>
      <if test="opAnnounUserId != null">
        op_announ_user_id,
      </if>
      <if test="cnName != null">
        cn_name,
      </if>
      <if test="enName != null">
        en_name,
      </if>
      <if test="frName != null">
        fr_name,
      </if>
      <if test="level != null">
        `level`,
      </if>
      <if test="mainDrawing != null">
        main_drawing,
      </if>
      <if test="ecnNumber != null">
        ecn_number,
      </if>
      <if test="item != null">
        item,
      </if>
      <if test="sellCalss != null">
        sell_calss,
      </if>
      <if test="drawingSize != null">
        drawing_size,
      </if>
      <if test="weight != null">
        weight,
      </if>
      <if test="supplierId2 != null">
        supplier_id_2,
      </if>
      <if test="rateTyp != null">
        rate_typ,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="updatedBy != null">
        updated_by,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
      <if test="def1 != null">
        def1,
      </if>
      <if test="def2 != null">
        def2,
      </if>
      <if test="def3 != null">
        def3,
      </if>
      <if test="def4 != null">
        def4,
      </if>
      <if test="def5 != null">
        def5,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id},
      </if>
      <if test="dr != null">
        #{dr},
      </if>
      <if test="tenantId != null">
        #{tenantId},
      </if>
      <if test="deptId != null">
        #{deptId},
      </if>
      <if test="partsNo != null">
        #{partsNo},
      </if>
      <if test="partsType != null">
        #{partsType},
      </if>
      <if test="partsSec != null">
        #{partsSec},
      </if>
      <if test="disable != null">
        #{disable},
      </if>
      <if test="snClass != null">
        #{snClass},
      </if>
      <if test="idCalss != null">
        #{idCalss},
      </if>
      <if test="partsIsAssembly != null">
        #{partsIsAssembly},
      </if>
      <if test="partsIsForAssembly != null">
        #{partsIsForAssembly},
      </if>
      <if test="partsQty != null">
        #{partsQty},
      </if>
      <if test="supplierId != null">
        #{supplierId},
      </if>
      <if test="procurementCycle != null">
        #{procurementCycle},
      </if>
      <if test="dwg != null">
        #{dwg},
      </if>
      <if test="remark != null">
        #{remark},
      </if>
      <if test="announUserId != null">
        #{announUserId},
      </if>
      <if test="opAnnounUserId != null">
        #{opAnnounUserId},
      </if>
      <if test="cnName != null">
        #{cnName},
      </if>
      <if test="enName != null">
        #{enName},
      </if>
      <if test="frName != null">
        #{frName},
      </if>
      <if test="level != null">
        #{level},
      </if>
      <if test="mainDrawing != null">
        #{mainDrawing},
      </if>
      <if test="ecnNumber != null">
        #{ecnNumber},
      </if>
      <if test="item != null">
        #{item},
      </if>
      <if test="sellCalss != null">
        #{sellCalss},
      </if>
      <if test="drawingSize != null">
        #{drawingSize},
      </if>
      <if test="weight != null">
        #{weight},
      </if>
      <if test="supplierId2 != null">
        #{supplierId2},
      </if>
      <if test="rateTyp != null">
        #{rateTyp},
      </if>
      <if test="createdBy != null">
        #{createdBy},
      </if>
      <if test="createdTime != null">
        #{createdTime},
      </if>
      <if test="updatedBy != null">
        #{updatedBy},
      </if>
      <if test="updatedTime != null">
        #{updatedTime},
      </if>
      <if test="def1 != null">
        #{def1},
      </if>
      <if test="def2 != null">
        #{def2},
      </if>
      <if test="def3 != null">
        #{def3},
      </if>
      <if test="def4 != null">
        #{def4},
      </if>
      <if test="def5 != null">
        #{def5},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id},
      </if>
      <if test="dr != null">
        dr = #{dr},
      </if>
      <if test="tenantId != null">
        tenant_id = #{tenantId},
      </if>
      <if test="deptId != null">
        dept_id = #{deptId},
      </if>
      <if test="partsNo != null">
        parts_no = #{partsNo},
      </if>
      <if test="partsType != null">
        parts_type = #{partsType},
      </if>
      <if test="partsSec != null">
        parts_sec = #{partsSec},
      </if>
      <if test="disable != null">
        `disable` = #{disable},
      </if>
      <if test="snClass != null">
        sn_class = #{snClass},
      </if>
      <if test="idCalss != null">
        id_calss = #{idCalss},
      </if>
      <if test="partsIsAssembly != null">
        parts_is_assembly = #{partsIsAssembly},
      </if>
      <if test="partsIsForAssembly != null">
        parts_is_for_assembly = #{partsIsForAssembly},
      </if>
      <if test="partsQty != null">
        parts_qty = #{partsQty},
      </if>
      <if test="supplierId != null">
        supplier_id = #{supplierId},
      </if>
      <if test="procurementCycle != null">
        procurement_cycle = #{procurementCycle},
      </if>
      <if test="dwg != null">
        dwg = #{dwg},
      </if>
      <if test="remark != null">
        remark = #{remark},
      </if>
      <if test="announUserId != null">
        announ_user_id = #{announUserId},
      </if>
      <if test="opAnnounUserId != null">
        op_announ_user_id = #{opAnnounUserId},
      </if>
      <if test="cnName != null">
        cn_name = #{cnName},
      </if>
      <if test="enName != null">
        en_name = #{enName},
      </if>
      <if test="frName != null">
        fr_name = #{frName},
      </if>
      <if test="level != null">
        `level` = #{level},
      </if>
      <if test="mainDrawing != null">
        main_drawing = #{mainDrawing},
      </if>
      <if test="ecnNumber != null">
        ecn_number = #{ecnNumber},
      </if>
      <if test="item != null">
        item = #{item},
      </if>
      <if test="sellCalss != null">
        sell_calss = #{sellCalss},
      </if>
      <if test="drawingSize != null">
        drawing_size = #{drawingSize},
      </if>
      <if test="weight != null">
        weight = #{weight},
      </if>
      <if test="supplierId2 != null">
        supplier_id_2 = #{supplierId2},
      </if>
      <if test="rateTyp != null">
        rate_typ = #{rateTyp},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime},
      </if>
      <if test="updatedBy != null">
        updated_by = #{updatedBy},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime},
      </if>
      <if test="def1 != null">
        def1 = #{def1},
      </if>
      <if test="def2 != null">
        def2 = #{def2},
      </if>
      <if test="def3 != null">
        def3 = #{def3},
      </if>
      <if test="def4 != null">
        def4 = #{def4},
      </if>
      <if test="def5 != null">
        def5 = #{def5},
      </if>
    </trim>
  </insert>
</mapper>