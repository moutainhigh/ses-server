<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.redescooter.ses.service.hub.source.operation.dao.base.OpePartsMapper">
  <resultMap id="BaseResultMap" type="com.redescooter.ses.service.hub.source.operation.dm.OpeParts">
    <!--@mbg.generated-->
    <!--@Table ope_parts-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="dr" jdbcType="INTEGER" property="dr" />
    <result column="tenant_id" jdbcType="BIGINT" property="tenantId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="import_lot" jdbcType="VARCHAR" property="importLot" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="parts_draft_id" jdbcType="BIGINT" property="partsDraftId" />
    <result column="parts_type" jdbcType="VARCHAR" property="partsType" />
    <result column="sec" jdbcType="VARCHAR" property="sec" />
    <result column="parts_number" jdbcType="VARCHAR" property="partsNumber" />
    <result column="cn_name" jdbcType="VARCHAR" property="cnName" />
    <result column="fr_name" jdbcType="VARCHAR" property="frName" />
    <result column="en_name" jdbcType="VARCHAR" property="enName" />
    <result column="sn_class" jdbcType="VARCHAR" property="snClass" />
    <result column="parts_qty" jdbcType="INTEGER" property="partsQty" />
    <result column="production_cycle" jdbcType="VARCHAR" property="productionCycle" />
    <result column="cost" jdbcType="VARCHAR" property="cost" />
    <result column="supplier_id" jdbcType="BIGINT" property="supplierId" />
    <result column="dwg" jdbcType="VARCHAR" property="dwg" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="revision" jdbcType="INTEGER" property="revision" />
    <result column="created_by" jdbcType="BIGINT" property="createdBy" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="updated_by" jdbcType="BIGINT" property="updatedBy" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
    <result column="id_class" jdbcType="BOOLEAN" property="idClass" />
    <result column="synchronize_flag" jdbcType="BOOLEAN" property="synchronizeFlag" />
    <result column="def1" jdbcType="VARCHAR" property="def1" />
    <result column="def2" jdbcType="VARCHAR" property="def2" />
    <result column="def3" jdbcType="VARCHAR" property="def3" />
    <result column="def5" jdbcType="VARCHAR" property="def5" />
    <result column="def6" jdbcType="DECIMAL" property="def6" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, dr, tenant_id, user_id, import_lot, `status`, parts_draft_id, parts_type, sec, 
    parts_number, cn_name, fr_name, en_name, sn_class, parts_qty, production_cycle, cost, 
    supplier_id, dwg, note, revision, created_by, created_time, updated_by, updated_time, 
    id_class, synchronize_flag, def1, def2, def3, def5, def6
  </sql>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update ope_parts
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="dr = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.dr,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="tenant_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.tenantId,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="user_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.userId,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="import_lot = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.importLot,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="`status` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.status,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="parts_draft_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.partsDraftId,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="parts_type = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.partsType,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="sec = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.sec,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="parts_number = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.partsNumber,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="cn_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.cnName,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="fr_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.frName,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="en_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.enName,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="sn_class = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.snClass,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="parts_qty = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.partsQty,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="production_cycle = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.productionCycle,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="cost = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.cost,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="supplier_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.supplierId,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="dwg = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.dwg,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="note = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.note,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="revision = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.revision,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="created_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.createdBy,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="created_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.createdTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="updated_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.updatedBy,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="updated_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.updatedTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="id_class = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.idClass,jdbcType=BOOLEAN}
        </foreach>
      </trim>
      <trim prefix="synchronize_flag = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.synchronizeFlag,jdbcType=BOOLEAN}
        </foreach>
      </trim>
      <trim prefix="def1 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.def1,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="def2 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.def2,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="def3 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.def3,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="def5 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.def5,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="def6 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.def6,jdbcType=DECIMAL}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=BIGINT}
    </foreach>
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--@mbg.generated-->
    insert into ope_parts
    (id, dr, tenant_id, user_id, import_lot, `status`, parts_draft_id, parts_type, sec, 
      parts_number, cn_name, fr_name, en_name, sn_class, parts_qty, production_cycle, 
      cost, supplier_id, dwg, note, revision, created_by, created_time, updated_by, updated_time, 
      id_class, synchronize_flag, def1, def2, def3, def5, def6)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.dr,jdbcType=INTEGER}, #{item.tenantId,jdbcType=BIGINT}, 
        #{item.userId,jdbcType=BIGINT}, #{item.importLot,jdbcType=VARCHAR}, #{item.status,jdbcType=VARCHAR}, 
        #{item.partsDraftId,jdbcType=BIGINT}, #{item.partsType,jdbcType=VARCHAR}, #{item.sec,jdbcType=VARCHAR}, 
        #{item.partsNumber,jdbcType=VARCHAR}, #{item.cnName,jdbcType=VARCHAR}, #{item.frName,jdbcType=VARCHAR}, 
        #{item.enName,jdbcType=VARCHAR}, #{item.snClass,jdbcType=VARCHAR}, #{item.partsQty,jdbcType=INTEGER}, 
        #{item.productionCycle,jdbcType=VARCHAR}, #{item.cost,jdbcType=VARCHAR}, #{item.supplierId,jdbcType=BIGINT}, 
        #{item.dwg,jdbcType=VARCHAR}, #{item.note,jdbcType=VARCHAR}, #{item.revision,jdbcType=INTEGER}, 
        #{item.createdBy,jdbcType=BIGINT}, #{item.createdTime,jdbcType=TIMESTAMP}, #{item.updatedBy,jdbcType=BIGINT}, 
        #{item.updatedTime,jdbcType=TIMESTAMP}, #{item.idClass,jdbcType=BOOLEAN}, #{item.synchronizeFlag,jdbcType=BOOLEAN}, 
        #{item.def1,jdbcType=VARCHAR}, #{item.def2,jdbcType=VARCHAR}, #{item.def3,jdbcType=VARCHAR}, 
        #{item.def5,jdbcType=VARCHAR}, #{item.def6,jdbcType=DECIMAL})
    </foreach>
  </insert>
  <insert id="insertOrUpdate" parameterType="com.redescooter.ses.service.hub.source.operation.dm.OpeParts">
    <!--@mbg.generated-->
    insert into ope_parts
    (id, dr, tenant_id, user_id, import_lot, `status`, parts_draft_id, parts_type, sec, 
      parts_number, cn_name, fr_name, en_name, sn_class, parts_qty, production_cycle, 
      cost, supplier_id, dwg, note, revision, created_by, created_time, updated_by, updated_time, 
      id_class, synchronize_flag, def1, def2, def3, def5, def6)
    values
    (#{id,jdbcType=BIGINT}, #{dr,jdbcType=INTEGER}, #{tenantId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, 
      #{importLot,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{partsDraftId,jdbcType=BIGINT}, 
      #{partsType,jdbcType=VARCHAR}, #{sec,jdbcType=VARCHAR}, #{partsNumber,jdbcType=VARCHAR}, 
      #{cnName,jdbcType=VARCHAR}, #{frName,jdbcType=VARCHAR}, #{enName,jdbcType=VARCHAR}, 
      #{snClass,jdbcType=VARCHAR}, #{partsQty,jdbcType=INTEGER}, #{productionCycle,jdbcType=VARCHAR}, 
      #{cost,jdbcType=VARCHAR}, #{supplierId,jdbcType=BIGINT}, #{dwg,jdbcType=VARCHAR}, 
      #{note,jdbcType=VARCHAR}, #{revision,jdbcType=INTEGER}, #{createdBy,jdbcType=BIGINT}, 
      #{createdTime,jdbcType=TIMESTAMP}, #{updatedBy,jdbcType=BIGINT}, #{updatedTime,jdbcType=TIMESTAMP}, 
      #{idClass,jdbcType=BOOLEAN}, #{synchronizeFlag,jdbcType=BOOLEAN}, #{def1,jdbcType=VARCHAR}, 
      #{def2,jdbcType=VARCHAR}, #{def3,jdbcType=VARCHAR}, #{def5,jdbcType=VARCHAR}, #{def6,jdbcType=DECIMAL}
      )
    on duplicate key update 
    id = #{id,jdbcType=BIGINT}, 
    dr = #{dr,jdbcType=INTEGER}, 
    tenant_id = #{tenantId,jdbcType=BIGINT}, 
    user_id = #{userId,jdbcType=BIGINT}, 
    import_lot = #{importLot,jdbcType=VARCHAR}, 
    `status` = #{status,jdbcType=VARCHAR}, 
    parts_draft_id = #{partsDraftId,jdbcType=BIGINT}, 
    parts_type = #{partsType,jdbcType=VARCHAR}, 
    sec = #{sec,jdbcType=VARCHAR}, 
    parts_number = #{partsNumber,jdbcType=VARCHAR}, 
    cn_name = #{cnName,jdbcType=VARCHAR}, 
    fr_name = #{frName,jdbcType=VARCHAR}, 
    en_name = #{enName,jdbcType=VARCHAR}, 
    sn_class = #{snClass,jdbcType=VARCHAR}, 
    parts_qty = #{partsQty,jdbcType=INTEGER}, 
    production_cycle = #{productionCycle,jdbcType=VARCHAR}, 
    cost = #{cost,jdbcType=VARCHAR}, 
    supplier_id = #{supplierId,jdbcType=BIGINT}, 
    dwg = #{dwg,jdbcType=VARCHAR}, 
    note = #{note,jdbcType=VARCHAR}, 
    revision = #{revision,jdbcType=INTEGER}, 
    created_by = #{createdBy,jdbcType=BIGINT}, 
    created_time = #{createdTime,jdbcType=TIMESTAMP}, 
    updated_by = #{updatedBy,jdbcType=BIGINT}, 
    updated_time = #{updatedTime,jdbcType=TIMESTAMP}, 
    id_class = #{idClass,jdbcType=BOOLEAN}, 
    synchronize_flag = #{synchronizeFlag,jdbcType=BOOLEAN}, 
    def1 = #{def1,jdbcType=VARCHAR}, 
    def2 = #{def2,jdbcType=VARCHAR}, 
    def3 = #{def3,jdbcType=VARCHAR}, 
    def5 = #{def5,jdbcType=VARCHAR}, 
    def6 = #{def6,jdbcType=DECIMAL}
  </insert>
  <insert id="insertOrUpdateSelective" parameterType="com.redescooter.ses.service.hub.source.operation.dm.OpeParts">
    <!--@mbg.generated-->
    insert into ope_parts
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="dr != null">
        dr,
      </if>
      <if test="tenantId != null">
        tenant_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="importLot != null">
        import_lot,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="partsDraftId != null">
        parts_draft_id,
      </if>
      <if test="partsType != null">
        parts_type,
      </if>
      <if test="sec != null">
        sec,
      </if>
      <if test="partsNumber != null">
        parts_number,
      </if>
      <if test="cnName != null">
        cn_name,
      </if>
      <if test="frName != null">
        fr_name,
      </if>
      <if test="enName != null">
        en_name,
      </if>
      <if test="snClass != null">
        sn_class,
      </if>
      <if test="partsQty != null">
        parts_qty,
      </if>
      <if test="productionCycle != null">
        production_cycle,
      </if>
      <if test="cost != null">
        cost,
      </if>
      <if test="supplierId != null">
        supplier_id,
      </if>
      <if test="dwg != null">
        dwg,
      </if>
      <if test="note != null">
        note,
      </if>
      <if test="revision != null">
        revision,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="updatedBy != null">
        updated_by,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
      <if test="idClass != null">
        id_class,
      </if>
      <if test="synchronizeFlag != null">
        synchronize_flag,
      </if>
      <if test="def1 != null">
        def1,
      </if>
      <if test="def2 != null">
        def2,
      </if>
      <if test="def3 != null">
        def3,
      </if>
      <if test="def5 != null">
        def5,
      </if>
      <if test="def6 != null">
        def6,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="dr != null">
        #{dr,jdbcType=INTEGER},
      </if>
      <if test="tenantId != null">
        #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="importLot != null">
        #{importLot,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="partsDraftId != null">
        #{partsDraftId,jdbcType=BIGINT},
      </if>
      <if test="partsType != null">
        #{partsType,jdbcType=VARCHAR},
      </if>
      <if test="sec != null">
        #{sec,jdbcType=VARCHAR},
      </if>
      <if test="partsNumber != null">
        #{partsNumber,jdbcType=VARCHAR},
      </if>
      <if test="cnName != null">
        #{cnName,jdbcType=VARCHAR},
      </if>
      <if test="frName != null">
        #{frName,jdbcType=VARCHAR},
      </if>
      <if test="enName != null">
        #{enName,jdbcType=VARCHAR},
      </if>
      <if test="snClass != null">
        #{snClass,jdbcType=VARCHAR},
      </if>
      <if test="partsQty != null">
        #{partsQty,jdbcType=INTEGER},
      </if>
      <if test="productionCycle != null">
        #{productionCycle,jdbcType=VARCHAR},
      </if>
      <if test="cost != null">
        #{cost,jdbcType=VARCHAR},
      </if>
      <if test="supplierId != null">
        #{supplierId,jdbcType=BIGINT},
      </if>
      <if test="dwg != null">
        #{dwg,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="revision != null">
        #{revision,jdbcType=INTEGER},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=BIGINT},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=BIGINT},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="idClass != null">
        #{idClass,jdbcType=BOOLEAN},
      </if>
      <if test="synchronizeFlag != null">
        #{synchronizeFlag,jdbcType=BOOLEAN},
      </if>
      <if test="def1 != null">
        #{def1,jdbcType=VARCHAR},
      </if>
      <if test="def2 != null">
        #{def2,jdbcType=VARCHAR},
      </if>
      <if test="def3 != null">
        #{def3,jdbcType=VARCHAR},
      </if>
      <if test="def5 != null">
        #{def5,jdbcType=VARCHAR},
      </if>
      <if test="def6 != null">
        #{def6,jdbcType=DECIMAL},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=BIGINT},
      </if>
      <if test="dr != null">
        dr = #{dr,jdbcType=INTEGER},
      </if>
      <if test="tenantId != null">
        tenant_id = #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="importLot != null">
        import_lot = #{importLot,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=VARCHAR},
      </if>
      <if test="partsDraftId != null">
        parts_draft_id = #{partsDraftId,jdbcType=BIGINT},
      </if>
      <if test="partsType != null">
        parts_type = #{partsType,jdbcType=VARCHAR},
      </if>
      <if test="sec != null">
        sec = #{sec,jdbcType=VARCHAR},
      </if>
      <if test="partsNumber != null">
        parts_number = #{partsNumber,jdbcType=VARCHAR},
      </if>
      <if test="cnName != null">
        cn_name = #{cnName,jdbcType=VARCHAR},
      </if>
      <if test="frName != null">
        fr_name = #{frName,jdbcType=VARCHAR},
      </if>
      <if test="enName != null">
        en_name = #{enName,jdbcType=VARCHAR},
      </if>
      <if test="snClass != null">
        sn_class = #{snClass,jdbcType=VARCHAR},
      </if>
      <if test="partsQty != null">
        parts_qty = #{partsQty,jdbcType=INTEGER},
      </if>
      <if test="productionCycle != null">
        production_cycle = #{productionCycle,jdbcType=VARCHAR},
      </if>
      <if test="cost != null">
        cost = #{cost,jdbcType=VARCHAR},
      </if>
      <if test="supplierId != null">
        supplier_id = #{supplierId,jdbcType=BIGINT},
      </if>
      <if test="dwg != null">
        dwg = #{dwg,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="revision != null">
        revision = #{revision,jdbcType=INTEGER},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=BIGINT},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        updated_by = #{updatedBy,jdbcType=BIGINT},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="idClass != null">
        id_class = #{idClass,jdbcType=BOOLEAN},
      </if>
      <if test="synchronizeFlag != null">
        synchronize_flag = #{synchronizeFlag,jdbcType=BOOLEAN},
      </if>
      <if test="def1 != null">
        def1 = #{def1,jdbcType=VARCHAR},
      </if>
      <if test="def2 != null">
        def2 = #{def2,jdbcType=VARCHAR},
      </if>
      <if test="def3 != null">
        def3 = #{def3,jdbcType=VARCHAR},
      </if>
      <if test="def5 != null">
        def5 = #{def5,jdbcType=VARCHAR},
      </if>
      <if test="def6 != null">
        def6 = #{def6,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
</mapper>