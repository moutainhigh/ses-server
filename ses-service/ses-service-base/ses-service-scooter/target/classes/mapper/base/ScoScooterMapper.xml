<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.redescooter.ses.service.scooter.dao.base.ScoScooterMapper">
  <resultMap id="BaseResultMap" type="com.redescooter.ses.service.scooter.dm.base.ScoScooter">
    <!--@mbg.generated-->
    <!--@Table sco_scooter-->
    <id column="id" property="id" />
    <result column="dr" property="dr" />
    <result column="scooter_no" property="scooterNo" />
    <result column="status" property="status" />
    <result column="total_mileage" property="totalMileage" />
    <result column="available_status" property="availableStatus" />
    <result column="box_status" property="boxStatus" />
    <result column="model" property="model" />
    <result column="license_plate" property="licensePlate" />
    <result column="license_plate_picture" property="licensePlatePicture" />
    <result column="license_plate_time" property="licensePlateTime" />
    <result column="scooter_id_picture" property="scooterIdPicture" />
    <result column="insure_time" property="insureTime" />
    <result column="insurance" property="insurance" />
    <result column="revision" property="revision" />
    <result column="created_by" property="createdBy" />
    <result column="created_time" property="createdTime" />
    <result column="updated_by" property="updatedBy" />
    <result column="updated_time" property="updatedTime" />
    <result column="def1" property="def1" />
    <result column="def2" property="def2" />
    <result column="def3" property="def3" />
    <result column="def5" property="def5" />
    <result column="def6" property="def6" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, dr, scooter_no, `status`, total_mileage, available_status, box_status, model, 
    license_plate, license_plate_picture, license_plate_time, scooter_id_picture, insure_time, 
    insurance, revision, created_by, created_time, updated_by, updated_time, def1, def2, 
    def3, def5, def6
  </sql>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update sco_scooter
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="dr = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.dr}
        </foreach>
      </trim>
      <trim prefix="scooter_no = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.scooterNo}
        </foreach>
      </trim>
      <trim prefix="`status` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.status}
        </foreach>
      </trim>
      <trim prefix="total_mileage = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.totalMileage}
        </foreach>
      </trim>
      <trim prefix="available_status = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.availableStatus}
        </foreach>
      </trim>
      <trim prefix="box_status = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.boxStatus}
        </foreach>
      </trim>
      <trim prefix="model = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.model}
        </foreach>
      </trim>
      <trim prefix="license_plate = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.licensePlate}
        </foreach>
      </trim>
      <trim prefix="license_plate_picture = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.licensePlatePicture}
        </foreach>
      </trim>
      <trim prefix="license_plate_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.licensePlateTime}
        </foreach>
      </trim>
      <trim prefix="scooter_id_picture = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.scooterIdPicture}
        </foreach>
      </trim>
      <trim prefix="insure_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.insureTime}
        </foreach>
      </trim>
      <trim prefix="insurance = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.insurance}
        </foreach>
      </trim>
      <trim prefix="revision = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.revision}
        </foreach>
      </trim>
      <trim prefix="created_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.createdBy}
        </foreach>
      </trim>
      <trim prefix="created_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.createdTime}
        </foreach>
      </trim>
      <trim prefix="updated_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.updatedBy}
        </foreach>
      </trim>
      <trim prefix="updated_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.updatedTime}
        </foreach>
      </trim>
      <trim prefix="def1 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.def1}
        </foreach>
      </trim>
      <trim prefix="def2 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.def2}
        </foreach>
      </trim>
      <trim prefix="def3 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.def3}
        </foreach>
      </trim>
      <trim prefix="def5 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.def5}
        </foreach>
      </trim>
      <trim prefix="def6 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.def6}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id}
    </foreach>
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--@mbg.generated-->
    insert into sco_scooter
    (id, dr, scooter_no, `status`, total_mileage, available_status, box_status, model, 
      license_plate, license_plate_picture, license_plate_time, scooter_id_picture, insure_time, 
      insurance, revision, created_by, created_time, updated_by, updated_time, def1, 
      def2, def3, def5, def6)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id}, #{item.dr}, #{item.scooterNo}, #{item.status}, #{item.totalMileage}, 
        #{item.availableStatus}, #{item.boxStatus}, #{item.model}, #{item.licensePlate}, 
        #{item.licensePlatePicture}, #{item.licensePlateTime}, #{item.scooterIdPicture}, 
        #{item.insureTime}, #{item.insurance}, #{item.revision}, #{item.createdBy}, #{item.createdTime}, 
        #{item.updatedBy}, #{item.updatedTime}, #{item.def1}, #{item.def2}, #{item.def3}, 
        #{item.def5}, #{item.def6})
    </foreach>
  </insert>
  <insert id="insertOrUpdate" parameterType="com.redescooter.ses.service.scooter.dm.base.ScoScooter">
    <!--@mbg.generated-->
    insert into sco_scooter
    (id, dr, scooter_no, `status`, total_mileage, available_status, box_status, model, 
      license_plate, license_plate_picture, license_plate_time, scooter_id_picture, insure_time, 
      insurance, revision, created_by, created_time, updated_by, updated_time, def1, 
      def2, def3, def5, def6)
    values
    (#{id}, #{dr}, #{scooterNo}, #{status}, #{totalMileage}, #{availableStatus}, #{boxStatus}, 
      #{model}, #{licensePlate}, #{licensePlatePicture}, #{licensePlateTime}, #{scooterIdPicture}, 
      #{insureTime}, #{insurance}, #{revision}, #{createdBy}, #{createdTime}, #{updatedBy}, 
      #{updatedTime}, #{def1}, #{def2}, #{def3}, #{def5}, #{def6})
    on duplicate key update 
    id = #{id}, 
    dr = #{dr}, 
    scooter_no = #{scooterNo}, 
    `status` = #{status}, 
    total_mileage = #{totalMileage}, 
    available_status = #{availableStatus}, 
    box_status = #{boxStatus}, 
    model = #{model}, 
    license_plate = #{licensePlate}, 
    license_plate_picture = #{licensePlatePicture}, 
    license_plate_time = #{licensePlateTime}, 
    scooter_id_picture = #{scooterIdPicture}, 
    insure_time = #{insureTime}, 
    insurance = #{insurance}, 
    revision = #{revision}, 
    created_by = #{createdBy}, 
    created_time = #{createdTime}, 
    updated_by = #{updatedBy}, 
    updated_time = #{updatedTime}, 
    def1 = #{def1}, 
    def2 = #{def2}, 
    def3 = #{def3}, 
    def5 = #{def5}, 
    def6 = #{def6}
  </insert>
  <insert id="insertOrUpdateSelective" parameterType="com.redescooter.ses.service.scooter.dm.base.ScoScooter">
    <!--@mbg.generated-->
    insert into sco_scooter
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="dr != null">
        dr,
      </if>
      <if test="scooterNo != null">
        scooter_no,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="totalMileage != null">
        total_mileage,
      </if>
      <if test="availableStatus != null">
        available_status,
      </if>
      <if test="boxStatus != null">
        box_status,
      </if>
      <if test="model != null">
        model,
      </if>
      <if test="licensePlate != null">
        license_plate,
      </if>
      <if test="licensePlatePicture != null">
        license_plate_picture,
      </if>
      <if test="licensePlateTime != null">
        license_plate_time,
      </if>
      <if test="scooterIdPicture != null">
        scooter_id_picture,
      </if>
      <if test="insureTime != null">
        insure_time,
      </if>
      <if test="insurance != null">
        insurance,
      </if>
      <if test="revision != null">
        revision,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="updatedBy != null">
        updated_by,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
      <if test="def1 != null">
        def1,
      </if>
      <if test="def2 != null">
        def2,
      </if>
      <if test="def3 != null">
        def3,
      </if>
      <if test="def5 != null">
        def5,
      </if>
      <if test="def6 != null">
        def6,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id},
      </if>
      <if test="dr != null">
        #{dr},
      </if>
      <if test="scooterNo != null">
        #{scooterNo},
      </if>
      <if test="status != null">
        #{status},
      </if>
      <if test="totalMileage != null">
        #{totalMileage},
      </if>
      <if test="availableStatus != null">
        #{availableStatus},
      </if>
      <if test="boxStatus != null">
        #{boxStatus},
      </if>
      <if test="model != null">
        #{model},
      </if>
      <if test="licensePlate != null">
        #{licensePlate},
      </if>
      <if test="licensePlatePicture != null">
        #{licensePlatePicture},
      </if>
      <if test="licensePlateTime != null">
        #{licensePlateTime},
      </if>
      <if test="scooterIdPicture != null">
        #{scooterIdPicture},
      </if>
      <if test="insureTime != null">
        #{insureTime},
      </if>
      <if test="insurance != null">
        #{insurance},
      </if>
      <if test="revision != null">
        #{revision},
      </if>
      <if test="createdBy != null">
        #{createdBy},
      </if>
      <if test="createdTime != null">
        #{createdTime},
      </if>
      <if test="updatedBy != null">
        #{updatedBy},
      </if>
      <if test="updatedTime != null">
        #{updatedTime},
      </if>
      <if test="def1 != null">
        #{def1},
      </if>
      <if test="def2 != null">
        #{def2},
      </if>
      <if test="def3 != null">
        #{def3},
      </if>
      <if test="def5 != null">
        #{def5},
      </if>
      <if test="def6 != null">
        #{def6},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id},
      </if>
      <if test="dr != null">
        dr = #{dr},
      </if>
      <if test="scooterNo != null">
        scooter_no = #{scooterNo},
      </if>
      <if test="status != null">
        `status` = #{status},
      </if>
      <if test="totalMileage != null">
        total_mileage = #{totalMileage},
      </if>
      <if test="availableStatus != null">
        available_status = #{availableStatus},
      </if>
      <if test="boxStatus != null">
        box_status = #{boxStatus},
      </if>
      <if test="model != null">
        model = #{model},
      </if>
      <if test="licensePlate != null">
        license_plate = #{licensePlate},
      </if>
      <if test="licensePlatePicture != null">
        license_plate_picture = #{licensePlatePicture},
      </if>
      <if test="licensePlateTime != null">
        license_plate_time = #{licensePlateTime},
      </if>
      <if test="scooterIdPicture != null">
        scooter_id_picture = #{scooterIdPicture},
      </if>
      <if test="insureTime != null">
        insure_time = #{insureTime},
      </if>
      <if test="insurance != null">
        insurance = #{insurance},
      </if>
      <if test="revision != null">
        revision = #{revision},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime},
      </if>
      <if test="updatedBy != null">
        updated_by = #{updatedBy},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime},
      </if>
      <if test="def1 != null">
        def1 = #{def1},
      </if>
      <if test="def2 != null">
        def2 = #{def2},
      </if>
      <if test="def3 != null">
        def3 = #{def3},
      </if>
      <if test="def5 != null">
        def5 = #{def5},
      </if>
      <if test="def6 != null">
        def6 = #{def6},
      </if>
    </trim>
  </insert>
</mapper>