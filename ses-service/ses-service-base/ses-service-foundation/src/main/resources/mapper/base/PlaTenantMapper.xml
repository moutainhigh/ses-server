<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.redescooter.ses.service.foundation.dao.base.PlaTenantMapper">
  <resultMap id="BaseResultMap" type="com.redescooter.ses.service.foundation.dm.base.PlaTenant">
    <!--@mbg.generated-->
    <id column="id" property="id" />
    <result column="dr" property="dr" />
    <result column="p_id" property="pId" />
    <result column="tenant_name" property="tenantName" />
    <result column="email" property="email" />
    <result column="status" property="status" />
    <result column="country_id" property="countryId" />
    <result column="city_id" property="cityId" />
    <result column="distrust_id" property="distrustId" />
    <result column="driver_counts" property="driverCounts" />
    <result column="sales_id" property="salesId" />
    <result column="tenant_source" property="tenantSource" />
    <result column="tenant_type" property="tenantType" />
    <result column="tenant_industry" property="tenantIndustry" />
    <result column="address" property="address" />
    <result column="contact" property="contact" />
    <result column="position" property="position" />
    <result column="tenant_code" property="tenantCode" />
    <result column="longitude" property="longitude" />
    <result column="latitude" property="latitude" />
    <result column="tel_1" property="tel1" />
    <result column="tel_2" property="tel2" />
    <result column="tel_3" property="tel3" />
    <result column="email_1" property="email1" />
    <result column="email_2" property="email2" />
    <result column="email_3" property="email3" />
    <result column="time_zone" property="timeZone" />
    <result column="effective_time" property="effectiveTime" />
    <result column="expire_time" property="expireTime" />
    <result column="created_by" property="createdBy" />
    <result column="created_time" property="createdTime" />
    <result column="updated_by" property="updatedBy" />
    <result column="updated_time" property="updatedTime" />
    <result column="def1" property="def1" />
    <result column="def2" property="def2" />
    <result column="def3" property="def3" />
    <result column="def5" property="def5" />
    <result column="def6" property="def6" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, dr, p_id, tenant_name, email, `status`, country_id, city_id, distrust_id, driver_counts, 
    sales_id, tenant_source, tenant_type, tenant_industry, address, contact, `position`, 
    tenant_code, longitude, latitude, tel_1, tel_2, tel_3, email_1, email_2, email_3, 
    time_zone, effective_time, expire_time, created_by, created_time, updated_by, updated_time, 
    def1, def2, def3, def5, def6
  </sql>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update pla_tenant
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="dr = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.dr}
        </foreach>
      </trim>
      <trim prefix="p_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.pId}
        </foreach>
      </trim>
      <trim prefix="tenant_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.tenantName}
        </foreach>
      </trim>
      <trim prefix="email = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.email}
        </foreach>
      </trim>
      <trim prefix="`status` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.status}
        </foreach>
      </trim>
      <trim prefix="country_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.countryId}
        </foreach>
      </trim>
      <trim prefix="city_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.cityId}
        </foreach>
      </trim>
      <trim prefix="distrust_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.distrustId}
        </foreach>
      </trim>
      <trim prefix="driver_counts = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.driverCounts}
        </foreach>
      </trim>
      <trim prefix="sales_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.salesId}
        </foreach>
      </trim>
      <trim prefix="tenant_source = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.tenantSource}
        </foreach>
      </trim>
      <trim prefix="tenant_type = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.tenantType}
        </foreach>
      </trim>
      <trim prefix="tenant_industry = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.tenantIndustry}
        </foreach>
      </trim>
      <trim prefix="address = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.address}
        </foreach>
      </trim>
      <trim prefix="contact = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.contact}
        </foreach>
      </trim>
      <trim prefix="`position` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.position}
        </foreach>
      </trim>
      <trim prefix="tenant_code = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.tenantCode}
        </foreach>
      </trim>
      <trim prefix="longitude = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.longitude}
        </foreach>
      </trim>
      <trim prefix="latitude = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.latitude}
        </foreach>
      </trim>
      <trim prefix="tel_1 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.tel1}
        </foreach>
      </trim>
      <trim prefix="tel_2 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.tel2}
        </foreach>
      </trim>
      <trim prefix="tel_3 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.tel3}
        </foreach>
      </trim>
      <trim prefix="email_1 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.email1}
        </foreach>
      </trim>
      <trim prefix="email_2 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.email2}
        </foreach>
      </trim>
      <trim prefix="email_3 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.email3}
        </foreach>
      </trim>
      <trim prefix="time_zone = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.timeZone}
        </foreach>
      </trim>
      <trim prefix="effective_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.effectiveTime}
        </foreach>
      </trim>
      <trim prefix="expire_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.expireTime}
        </foreach>
      </trim>
      <trim prefix="created_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.createdBy}
        </foreach>
      </trim>
      <trim prefix="created_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.createdTime}
        </foreach>
      </trim>
      <trim prefix="updated_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.updatedBy}
        </foreach>
      </trim>
      <trim prefix="updated_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.updatedTime}
        </foreach>
      </trim>
      <trim prefix="def1 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.def1}
        </foreach>
      </trim>
      <trim prefix="def2 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.def2}
        </foreach>
      </trim>
      <trim prefix="def3 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.def3}
        </foreach>
      </trim>
      <trim prefix="def5 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.def5}
        </foreach>
      </trim>
      <trim prefix="def6 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.def6}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id}
    </foreach>
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--@mbg.generated-->
    insert into pla_tenant
    (id, dr, p_id, tenant_name, email, `status`, country_id, city_id, distrust_id, driver_counts, 
      sales_id, tenant_source, tenant_type, tenant_industry, address, contact, `position`, 
      tenant_code, longitude, latitude, tel_1, tel_2, tel_3, email_1, email_2, email_3, 
      time_zone, effective_time, expire_time, created_by, created_time, updated_by, updated_time, 
      def1, def2, def3, def5, def6)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id}, #{item.dr}, #{item.pId}, #{item.tenantName}, #{item.email}, #{item.status}, 
        #{item.countryId}, #{item.cityId}, #{item.distrustId}, #{item.driverCounts}, #{item.salesId}, 
        #{item.tenantSource}, #{item.tenantType}, #{item.tenantIndustry}, #{item.address}, 
        #{item.contact}, #{item.position}, #{item.tenantCode}, #{item.longitude}, #{item.latitude}, 
        #{item.tel1}, #{item.tel2}, #{item.tel3}, #{item.email1}, #{item.email2}, #{item.email3}, 
        #{item.timeZone}, #{item.effectiveTime}, #{item.expireTime}, #{item.createdBy}, 
        #{item.createdTime}, #{item.updatedBy}, #{item.updatedTime}, #{item.def1}, #{item.def2}, 
        #{item.def3}, #{item.def5}, #{item.def6})
    </foreach>
  </insert>
  <insert id="insertOrUpdate" parameterType="com.redescooter.ses.service.foundation.dm.base.PlaTenant">
    <!--@mbg.generated-->
    insert into pla_tenant
    (id, dr, p_id, tenant_name, email, `status`, country_id, city_id, distrust_id, driver_counts, 
      sales_id, tenant_source, tenant_type, tenant_industry, address, contact, `position`, 
      tenant_code, longitude, latitude, tel_1, tel_2, tel_3, email_1, email_2, email_3, 
      time_zone, effective_time, expire_time, created_by, created_time, updated_by, updated_time, 
      def1, def2, def3, def5, def6)
    values
    (#{id}, #{dr}, #{pId}, #{tenantName}, #{email}, #{status}, #{countryId}, #{cityId}, 
      #{distrustId}, #{driverCounts}, #{salesId}, #{tenantSource}, #{tenantType}, #{tenantIndustry}, 
      #{address}, #{contact}, #{position}, #{tenantCode}, #{longitude}, #{latitude}, 
      #{tel1}, #{tel2}, #{tel3}, #{email1}, #{email2}, #{email3}, #{timeZone}, #{effectiveTime}, 
      #{expireTime}, #{createdBy}, #{createdTime}, #{updatedBy}, #{updatedTime}, #{def1}, 
      #{def2}, #{def3}, #{def5}, #{def6})
    on duplicate key update 
    id = #{id}, 
    dr = #{dr}, 
    p_id = #{pId}, 
    tenant_name = #{tenantName}, 
    email = #{email}, 
    `status` = #{status}, 
    country_id = #{countryId}, 
    city_id = #{cityId}, 
    distrust_id = #{distrustId}, 
    driver_counts = #{driverCounts}, 
    sales_id = #{salesId}, 
    tenant_source = #{tenantSource}, 
    tenant_type = #{tenantType}, 
    tenant_industry = #{tenantIndustry}, 
    address = #{address}, 
    contact = #{contact}, 
    `position` = #{position}, 
    tenant_code = #{tenantCode}, 
    longitude = #{longitude}, 
    latitude = #{latitude}, 
    tel_1 = #{tel1}, 
    tel_2 = #{tel2}, 
    tel_3 = #{tel3}, 
    email_1 = #{email1}, 
    email_2 = #{email2}, 
    email_3 = #{email3}, 
    time_zone = #{timeZone}, 
    effective_time = #{effectiveTime}, 
    expire_time = #{expireTime}, 
    created_by = #{createdBy}, 
    created_time = #{createdTime}, 
    updated_by = #{updatedBy}, 
    updated_time = #{updatedTime}, 
    def1 = #{def1}, 
    def2 = #{def2}, 
    def3 = #{def3}, 
    def5 = #{def5}, 
    def6 = #{def6}
  </insert>
  <insert id="insertOrUpdateSelective" parameterType="com.redescooter.ses.service.foundation.dm.base.PlaTenant">
    <!--@mbg.generated-->
    insert into pla_tenant
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="dr != null">
        dr,
      </if>
      <if test="pId != null">
        p_id,
      </if>
      <if test="tenantName != null">
        tenant_name,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="countryId != null">
        country_id,
      </if>
      <if test="cityId != null">
        city_id,
      </if>
      <if test="distrustId != null">
        distrust_id,
      </if>
      <if test="driverCounts != null">
        driver_counts,
      </if>
      <if test="salesId != null">
        sales_id,
      </if>
      <if test="tenantSource != null">
        tenant_source,
      </if>
      <if test="tenantType != null">
        tenant_type,
      </if>
      <if test="tenantIndustry != null">
        tenant_industry,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="contact != null">
        contact,
      </if>
      <if test="position != null">
        `position`,
      </if>
      <if test="tenantCode != null">
        tenant_code,
      </if>
      <if test="longitude != null">
        longitude,
      </if>
      <if test="latitude != null">
        latitude,
      </if>
      <if test="tel1 != null">
        tel_1,
      </if>
      <if test="tel2 != null">
        tel_2,
      </if>
      <if test="tel3 != null">
        tel_3,
      </if>
      <if test="email1 != null">
        email_1,
      </if>
      <if test="email2 != null">
        email_2,
      </if>
      <if test="email3 != null">
        email_3,
      </if>
      <if test="timeZone != null">
        time_zone,
      </if>
      <if test="effectiveTime != null">
        effective_time,
      </if>
      <if test="expireTime != null">
        expire_time,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="updatedBy != null">
        updated_by,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
      <if test="def1 != null">
        def1,
      </if>
      <if test="def2 != null">
        def2,
      </if>
      <if test="def3 != null">
        def3,
      </if>
      <if test="def5 != null">
        def5,
      </if>
      <if test="def6 != null">
        def6,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id},
      </if>
      <if test="dr != null">
        #{dr},
      </if>
      <if test="pId != null">
        #{pId},
      </if>
      <if test="tenantName != null">
        #{tenantName},
      </if>
      <if test="email != null">
        #{email},
      </if>
      <if test="status != null">
        #{status},
      </if>
      <if test="countryId != null">
        #{countryId},
      </if>
      <if test="cityId != null">
        #{cityId},
      </if>
      <if test="distrustId != null">
        #{distrustId},
      </if>
      <if test="driverCounts != null">
        #{driverCounts},
      </if>
      <if test="salesId != null">
        #{salesId},
      </if>
      <if test="tenantSource != null">
        #{tenantSource},
      </if>
      <if test="tenantType != null">
        #{tenantType},
      </if>
      <if test="tenantIndustry != null">
        #{tenantIndustry},
      </if>
      <if test="address != null">
        #{address},
      </if>
      <if test="contact != null">
        #{contact},
      </if>
      <if test="position != null">
        #{position},
      </if>
      <if test="tenantCode != null">
        #{tenantCode},
      </if>
      <if test="longitude != null">
        #{longitude},
      </if>
      <if test="latitude != null">
        #{latitude},
      </if>
      <if test="tel1 != null">
        #{tel1},
      </if>
      <if test="tel2 != null">
        #{tel2},
      </if>
      <if test="tel3 != null">
        #{tel3},
      </if>
      <if test="email1 != null">
        #{email1},
      </if>
      <if test="email2 != null">
        #{email2},
      </if>
      <if test="email3 != null">
        #{email3},
      </if>
      <if test="timeZone != null">
        #{timeZone},
      </if>
      <if test="effectiveTime != null">
        #{effectiveTime},
      </if>
      <if test="expireTime != null">
        #{expireTime},
      </if>
      <if test="createdBy != null">
        #{createdBy},
      </if>
      <if test="createdTime != null">
        #{createdTime},
      </if>
      <if test="updatedBy != null">
        #{updatedBy},
      </if>
      <if test="updatedTime != null">
        #{updatedTime},
      </if>
      <if test="def1 != null">
        #{def1},
      </if>
      <if test="def2 != null">
        #{def2},
      </if>
      <if test="def3 != null">
        #{def3},
      </if>
      <if test="def5 != null">
        #{def5},
      </if>
      <if test="def6 != null">
        #{def6},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id},
      </if>
      <if test="dr != null">
        dr = #{dr},
      </if>
      <if test="pId != null">
        p_id = #{pId},
      </if>
      <if test="tenantName != null">
        tenant_name = #{tenantName},
      </if>
      <if test="email != null">
        email = #{email},
      </if>
      <if test="status != null">
        `status` = #{status},
      </if>
      <if test="countryId != null">
        country_id = #{countryId},
      </if>
      <if test="cityId != null">
        city_id = #{cityId},
      </if>
      <if test="distrustId != null">
        distrust_id = #{distrustId},
      </if>
      <if test="driverCounts != null">
        driver_counts = #{driverCounts},
      </if>
      <if test="salesId != null">
        sales_id = #{salesId},
      </if>
      <if test="tenantSource != null">
        tenant_source = #{tenantSource},
      </if>
      <if test="tenantType != null">
        tenant_type = #{tenantType},
      </if>
      <if test="tenantIndustry != null">
        tenant_industry = #{tenantIndustry},
      </if>
      <if test="address != null">
        address = #{address},
      </if>
      <if test="contact != null">
        contact = #{contact},
      </if>
      <if test="position != null">
        `position` = #{position},
      </if>
      <if test="tenantCode != null">
        tenant_code = #{tenantCode},
      </if>
      <if test="longitude != null">
        longitude = #{longitude},
      </if>
      <if test="latitude != null">
        latitude = #{latitude},
      </if>
      <if test="tel1 != null">
        tel_1 = #{tel1},
      </if>
      <if test="tel2 != null">
        tel_2 = #{tel2},
      </if>
      <if test="tel3 != null">
        tel_3 = #{tel3},
      </if>
      <if test="email1 != null">
        email_1 = #{email1},
      </if>
      <if test="email2 != null">
        email_2 = #{email2},
      </if>
      <if test="email3 != null">
        email_3 = #{email3},
      </if>
      <if test="timeZone != null">
        time_zone = #{timeZone},
      </if>
      <if test="effectiveTime != null">
        effective_time = #{effectiveTime},
      </if>
      <if test="expireTime != null">
        expire_time = #{expireTime},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime},
      </if>
      <if test="updatedBy != null">
        updated_by = #{updatedBy},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime},
      </if>
      <if test="def1 != null">
        def1 = #{def1},
      </if>
      <if test="def2 != null">
        def2 = #{def2},
      </if>
      <if test="def3 != null">
        def3 = #{def3},
      </if>
      <if test="def5 != null">
        def5 = #{def5},
      </if>
      <if test="def6 != null">
        def6 = #{def6},
      </if>
    </trim>
  </insert>
</mapper>