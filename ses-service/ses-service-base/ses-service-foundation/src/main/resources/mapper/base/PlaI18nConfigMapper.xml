<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.redescooter.ses.service.foundation.dao.base.PlaI18nConfigMapper">
  <resultMap id="BaseResultMap" type="com.redescooter.ses.service.foundation.dm.base.PlaI18nConfig">
    <!--@mbg.generated-->
    <id column="ID" property="id" />
    <result column="dr" property="dr" />
    <result column="group" property="group" />
    <result column="key" property="key" />
    <result column="type" property="type" />
    <result column="country" property="country" />
    <result column="value" property="value" />
    <result column="desc" property="desc" />
    <result column="update_time" property="updateTime" />
    <result column="created_time" property="createdTime" />
    <result column="deleted" property="deleted" />
    <result column="def1" property="def1" />
    <result column="def2" property="def2" />
    <result column="def3" property="def3" />
    <result column="def5" property="def5" />
    <result column="def6" property="def6" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    ID, dr, `group`, `key`, `type`, country, `value`, `desc`, update_time, created_time, 
    deleted, def1, def2, def3, def5, def6
  </sql>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update pla_i18n_config
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="dr = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when ID = #{item.id} then #{item.dr}
        </foreach>
      </trim>
      <trim prefix="`group` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when ID = #{item.id} then #{item.group}
        </foreach>
      </trim>
      <trim prefix="`key` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when ID = #{item.id} then #{item.key}
        </foreach>
      </trim>
      <trim prefix="`type` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when ID = #{item.id} then #{item.type}
        </foreach>
      </trim>
      <trim prefix="country = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when ID = #{item.id} then #{item.country}
        </foreach>
      </trim>
      <trim prefix="`value` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when ID = #{item.id} then #{item.value}
        </foreach>
      </trim>
      <trim prefix="`desc` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when ID = #{item.id} then #{item.desc}
        </foreach>
      </trim>
      <trim prefix="update_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when ID = #{item.id} then #{item.updateTime}
        </foreach>
      </trim>
      <trim prefix="created_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when ID = #{item.id} then #{item.createdTime}
        </foreach>
      </trim>
      <trim prefix="deleted = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when ID = #{item.id} then #{item.deleted}
        </foreach>
      </trim>
      <trim prefix="def1 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when ID = #{item.id} then #{item.def1}
        </foreach>
      </trim>
      <trim prefix="def2 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when ID = #{item.id} then #{item.def2}
        </foreach>
      </trim>
      <trim prefix="def3 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when ID = #{item.id} then #{item.def3}
        </foreach>
      </trim>
      <trim prefix="def5 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when ID = #{item.id} then #{item.def5}
        </foreach>
      </trim>
      <trim prefix="def6 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when ID = #{item.id} then #{item.def6}
        </foreach>
      </trim>
    </trim>
    where ID in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id}
    </foreach>
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--@mbg.generated-->
    insert into pla_i18n_config
    (ID, dr, `group`, `key`, `type`, country, `value`, `desc`, update_time, created_time, 
      deleted, def1, def2, def3, def5, def6)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id}, #{item.dr}, #{item.group}, #{item.key}, #{item.type}, #{item.country}, 
        #{item.value}, #{item.desc}, #{item.updateTime}, #{item.createdTime}, #{item.deleted}, 
        #{item.def1}, #{item.def2}, #{item.def3}, #{item.def5}, #{item.def6})
    </foreach>
  </insert>
  <insert id="insertOrUpdate" parameterType="com.redescooter.ses.service.foundation.dm.base.PlaI18nConfig">
    <!--@mbg.generated-->
    insert into pla_i18n_config
    (ID, dr, `group`, `key`, `type`, country, `value`, `desc`, update_time, created_time, 
      deleted, def1, def2, def3, def5, def6)
    values
    (#{id}, #{dr}, #{group}, #{key}, #{type}, #{country}, #{value}, #{desc}, #{updateTime}, 
      #{createdTime}, #{deleted}, #{def1}, #{def2}, #{def3}, #{def5}, #{def6})
    on duplicate key update 
    ID = #{id}, 
    dr = #{dr}, 
    `group` = #{group}, 
    `key` = #{key}, 
    `type` = #{type}, 
    country = #{country}, 
    `value` = #{value}, 
    `desc` = #{desc}, 
    update_time = #{updateTime}, 
    created_time = #{createdTime}, 
    deleted = #{deleted}, 
    def1 = #{def1}, 
    def2 = #{def2}, 
    def3 = #{def3}, 
    def5 = #{def5}, 
    def6 = #{def6}
  </insert>
  <insert id="insertOrUpdateSelective" parameterType="com.redescooter.ses.service.foundation.dm.base.PlaI18nConfig">
    <!--@mbg.generated-->
    insert into pla_i18n_config
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="dr != null">
        dr,
      </if>
      <if test="group != null">
        `group`,
      </if>
      <if test="key != null">
        `key`,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="country != null">
        country,
      </if>
      <if test="value != null">
        `value`,
      </if>
      <if test="desc != null">
        `desc`,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
      <if test="def1 != null">
        def1,
      </if>
      <if test="def2 != null">
        def2,
      </if>
      <if test="def3 != null">
        def3,
      </if>
      <if test="def5 != null">
        def5,
      </if>
      <if test="def6 != null">
        def6,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id},
      </if>
      <if test="dr != null">
        #{dr},
      </if>
      <if test="group != null">
        #{group},
      </if>
      <if test="key != null">
        #{key},
      </if>
      <if test="type != null">
        #{type},
      </if>
      <if test="country != null">
        #{country},
      </if>
      <if test="value != null">
        #{value},
      </if>
      <if test="desc != null">
        #{desc},
      </if>
      <if test="updateTime != null">
        #{updateTime},
      </if>
      <if test="createdTime != null">
        #{createdTime},
      </if>
      <if test="deleted != null">
        #{deleted},
      </if>
      <if test="def1 != null">
        #{def1},
      </if>
      <if test="def2 != null">
        #{def2},
      </if>
      <if test="def3 != null">
        #{def3},
      </if>
      <if test="def5 != null">
        #{def5},
      </if>
      <if test="def6 != null">
        #{def6},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        ID = #{id},
      </if>
      <if test="dr != null">
        dr = #{dr},
      </if>
      <if test="group != null">
        `group` = #{group},
      </if>
      <if test="key != null">
        `key` = #{key},
      </if>
      <if test="type != null">
        `type` = #{type},
      </if>
      <if test="country != null">
        country = #{country},
      </if>
      <if test="value != null">
        `value` = #{value},
      </if>
      <if test="desc != null">
        `desc` = #{desc},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime},
      </if>
      <if test="deleted != null">
        deleted = #{deleted},
      </if>
      <if test="def1 != null">
        def1 = #{def1},
      </if>
      <if test="def2 != null">
        def2 = #{def2},
      </if>
      <if test="def3 != null">
        def3 = #{def3},
      </if>
      <if test="def5 != null">
        def5 = #{def5},
      </if>
      <if test="def6 != null">
        def6 = #{def6},
      </if>
    </trim>
  </insert>
</mapper>