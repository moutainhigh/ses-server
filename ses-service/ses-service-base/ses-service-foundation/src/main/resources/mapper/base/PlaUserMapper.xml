<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.redescooter.ses.service.foundation.dao.base.PlaUserMapper">
  <resultMap id="BaseResultMap" type="com.redescooter.ses.service.foundation.dm.base.PlaUser">
    <!--@mbg.generated-->
    <id column="ID" jdbcType="BIGINT" property="id"/>
    <result column="dr" jdbcType="INTEGER" property="dr"/>
    <result column="TENANT_ID" jdbcType="BIGINT" property="tenantId"/>
    <result column="SYSTEM_ID" jdbcType="VARCHAR" property="systemId"/>
    <result column="APP_ID" jdbcType="VARCHAR" property="appId"/>
    <result column="LOGIN_NAME" jdbcType="VARCHAR" property="loginName"/>
    <result column="LOGIN_TYPE" jdbcType="INTEGER" property="loginType"/>
    <result column="STATUS" jdbcType="VARCHAR" property="status"/>
    <result column="USER_TYPE" jdbcType="INTEGER" property="userType"/>
    <result column="LAST_LOGIN_TIME" jdbcType="TIMESTAMP" property="lastLoginTime"/>
    <result column="LAST_LOGIN_TOKEN" jdbcType="VARCHAR" property="lastLoginToken"/>
    <result column="CREATED_BY" jdbcType="BIGINT" property="createdBy"/>
    <result column="CREATED_TIME" jdbcType="TIMESTAMP" property="createdTime"/>
    <result column="UPDATED_BY" jdbcType="BIGINT" property="updatedBy"/>
    <result column="UPDATED_TIME" jdbcType="TIMESTAMP" property="updatedTime"/>
    <result column="LAST_LOGIN_IP" jdbcType="VARCHAR" property="lastLoginIp"/>
    <result column="def1" jdbcType="VARCHAR" property="def1"/>
    <result column="def2" jdbcType="VARCHAR" property="def2"/>
    <result column="def3" jdbcType="VARCHAR" property="def3"/>
    <result column="def5" jdbcType="VARCHAR" property="def5"/>
    <result column="def6" jdbcType="DOUBLE" property="def6"/>
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    ID, dr, TENANT_ID, SYSTEM_ID, APP_ID, LOGIN_NAME, LOGIN_TYPE, `STATUS`, USER_TYPE,
    LAST_LOGIN_TIME, LAST_LOGIN_TOKEN, CREATED_BY, CREATED_TIME, UPDATED_BY, UPDATED_TIME,
    LAST_LOGIN_IP, def1, def2, def3, def5, def6
  </sql>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update pla_user
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="dr = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when ID = #{item.id,jdbcType=BIGINT} then #{item.dr,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="TENANT_ID = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when ID = #{item.id,jdbcType=BIGINT} then #{item.tenantId,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="SYSTEM_ID = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when ID = #{item.id,jdbcType=BIGINT} then #{item.systemId,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="APP_ID = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when ID = #{item.id,jdbcType=BIGINT} then #{item.appId,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="LOGIN_NAME = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when ID = #{item.id,jdbcType=BIGINT} then #{item.loginName,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="LOGIN_TYPE = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when ID = #{item.id,jdbcType=BIGINT} then #{item.loginType,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="`STATUS` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when ID = #{item.id,jdbcType=BIGINT} then #{item.status,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="USER_TYPE = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when ID = #{item.id,jdbcType=BIGINT} then #{item.userType,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="LAST_LOGIN_TIME = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when ID = #{item.id,jdbcType=BIGINT} then #{item.lastLoginTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="LAST_LOGIN_TOKEN = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when ID = #{item.id,jdbcType=BIGINT} then #{item.lastLoginToken,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="CREATED_BY = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when ID = #{item.id,jdbcType=BIGINT} then #{item.createdBy,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="CREATED_TIME = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when ID = #{item.id,jdbcType=BIGINT} then #{item.createdTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="UPDATED_BY = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when ID = #{item.id,jdbcType=BIGINT} then #{item.updatedBy,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="UPDATED_TIME = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when ID = #{item.id,jdbcType=BIGINT} then #{item.updatedTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="LAST_LOGIN_IP = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when ID = #{item.id,jdbcType=BIGINT} then #{item.lastLoginIp,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="def1 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when ID = #{item.id,jdbcType=BIGINT} then #{item.def1,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="def2 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when ID = #{item.id,jdbcType=BIGINT} then #{item.def2,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="def3 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when ID = #{item.id,jdbcType=BIGINT} then #{item.def3,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="def5 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when ID = #{item.id,jdbcType=BIGINT} then #{item.def5,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="def6 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when ID = #{item.id,jdbcType=BIGINT} then #{item.def6,jdbcType=DOUBLE}
        </foreach>
      </trim>
    </trim>
    where ID in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=BIGINT}
    </foreach>
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--@mbg.generated-->
    insert into pla_user
    (ID, dr, TENANT_ID, SYSTEM_ID, APP_ID, LOGIN_NAME, LOGIN_TYPE, `STATUS`, USER_TYPE,
    LAST_LOGIN_TIME, LAST_LOGIN_TOKEN, CREATED_BY, CREATED_TIME, UPDATED_BY, UPDATED_TIME,
    LAST_LOGIN_IP, def1, def2, def3, def5, def6)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.dr,jdbcType=INTEGER}, #{item.tenantId,jdbcType=BIGINT},
      #{item.systemId,jdbcType=VARCHAR}, #{item.appId,jdbcType=VARCHAR}, #{item.loginName,jdbcType=VARCHAR},
      #{item.loginType,jdbcType=INTEGER}, #{item.status,jdbcType=VARCHAR}, #{item.userType,jdbcType=INTEGER},
      #{item.lastLoginTime,jdbcType=TIMESTAMP}, #{item.lastLoginToken,jdbcType=VARCHAR},
      #{item.createdBy,jdbcType=BIGINT}, #{item.createdTime,jdbcType=TIMESTAMP}, #{item.updatedBy,jdbcType=BIGINT},
      #{item.updatedTime,jdbcType=TIMESTAMP}, #{item.lastLoginIp,jdbcType=VARCHAR}, #{item.def1,jdbcType=VARCHAR},
      #{item.def2,jdbcType=VARCHAR}, #{item.def3,jdbcType=VARCHAR}, #{item.def5,jdbcType=VARCHAR},
      #{item.def6,jdbcType=DOUBLE})
    </foreach>
  </insert>
  <insert id="insertOrUpdate" parameterType="com.redescooter.ses.service.foundation.dm.base.PlaUser">
    <!--@mbg.generated-->
    insert into pla_user
    (ID, dr, TENANT_ID, SYSTEM_ID, APP_ID, LOGIN_NAME, LOGIN_TYPE, `STATUS`, USER_TYPE,
    LAST_LOGIN_TIME, LAST_LOGIN_TOKEN, CREATED_BY, CREATED_TIME, UPDATED_BY, UPDATED_TIME,
    LAST_LOGIN_IP, def1, def2, def3, def5, def6)
    values
    (#{id,jdbcType=BIGINT}, #{dr,jdbcType=INTEGER}, #{tenantId,jdbcType=BIGINT}, #{systemId,jdbcType=VARCHAR},
    #{appId,jdbcType=VARCHAR}, #{loginName,jdbcType=VARCHAR}, #{loginType,jdbcType=INTEGER},
    #{status,jdbcType=VARCHAR}, #{userType,jdbcType=INTEGER}, #{lastLoginTime,jdbcType=TIMESTAMP},
    #{lastLoginToken,jdbcType=VARCHAR}, #{createdBy,jdbcType=BIGINT}, #{createdTime,jdbcType=TIMESTAMP},
    #{updatedBy,jdbcType=BIGINT}, #{updatedTime,jdbcType=TIMESTAMP}, #{lastLoginIp,jdbcType=VARCHAR},
    #{def1,jdbcType=VARCHAR}, #{def2,jdbcType=VARCHAR}, #{def3,jdbcType=VARCHAR}, #{def5,jdbcType=VARCHAR},
    #{def6,jdbcType=DOUBLE})
    on duplicate key update
    ID = #{id,jdbcType=BIGINT},
    dr = #{dr,jdbcType=INTEGER},
    TENANT_ID = #{tenantId,jdbcType=BIGINT},
    SYSTEM_ID = #{systemId,jdbcType=VARCHAR},
    APP_ID = #{appId,jdbcType=VARCHAR},
    LOGIN_NAME = #{loginName,jdbcType=VARCHAR},
    LOGIN_TYPE = #{loginType,jdbcType=INTEGER},
    `STATUS` = #{status,jdbcType=VARCHAR},
    USER_TYPE = #{userType,jdbcType=INTEGER},
    LAST_LOGIN_TIME = #{lastLoginTime,jdbcType=TIMESTAMP},
    LAST_LOGIN_TOKEN = #{lastLoginToken,jdbcType=VARCHAR},
    CREATED_BY = #{createdBy,jdbcType=BIGINT},
    CREATED_TIME = #{createdTime,jdbcType=TIMESTAMP},
    UPDATED_BY = #{updatedBy,jdbcType=BIGINT},
    UPDATED_TIME = #{updatedTime,jdbcType=TIMESTAMP},
    LAST_LOGIN_IP = #{lastLoginIp,jdbcType=VARCHAR},
    def1 = #{def1,jdbcType=VARCHAR},
    def2 = #{def2,jdbcType=VARCHAR},
    def3 = #{def3,jdbcType=VARCHAR},
    def5 = #{def5,jdbcType=VARCHAR},
    def6 = #{def6,jdbcType=DOUBLE}
  </insert>
  <insert id="insertOrUpdateSelective" parameterType="com.redescooter.ses.service.foundation.dm.base.PlaUser">
    <!--@mbg.generated-->
    insert into pla_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="dr != null">
        dr,
      </if>
      <if test="tenantId != null">
        TENANT_ID,
      </if>
      <if test="systemId != null">
        SYSTEM_ID,
      </if>
      <if test="appId != null">
        APP_ID,
      </if>
      <if test="loginName != null">
        LOGIN_NAME,
      </if>
      <if test="loginType != null">
        LOGIN_TYPE,
      </if>
      <if test="status != null">
        `STATUS`,
      </if>
      <if test="userType != null">
        USER_TYPE,
      </if>
      <if test="lastLoginTime != null">
        LAST_LOGIN_TIME,
      </if>
      <if test="lastLoginToken != null">
        LAST_LOGIN_TOKEN,
      </if>
      <if test="createdBy != null">
        CREATED_BY,
      </if>
      <if test="createdTime != null">
        CREATED_TIME,
      </if>
      <if test="updatedBy != null">
        UPDATED_BY,
      </if>
      <if test="updatedTime != null">
        UPDATED_TIME,
      </if>
      <if test="lastLoginIp != null">
        LAST_LOGIN_IP,
      </if>
      <if test="def1 != null">
        def1,
      </if>
      <if test="def2 != null">
        def2,
      </if>
      <if test="def3 != null">
        def3,
      </if>
      <if test="def5 != null">
        def5,
      </if>
      <if test="def6 != null">
        def6,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="dr != null">
        #{dr,jdbcType=INTEGER},
      </if>
      <if test="tenantId != null">
        #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="systemId != null">
        #{systemId,jdbcType=VARCHAR},
      </if>
      <if test="appId != null">
        #{appId,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null">
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="loginType != null">
        #{loginType,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        #{userType,jdbcType=INTEGER},
      </if>
      <if test="lastLoginTime != null">
        #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginToken != null">
        #{lastLoginToken,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=BIGINT},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=BIGINT},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginIp != null">
        #{lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="def1 != null">
        #{def1,jdbcType=VARCHAR},
      </if>
      <if test="def2 != null">
        #{def2,jdbcType=VARCHAR},
      </if>
      <if test="def3 != null">
        #{def3,jdbcType=VARCHAR},
      </if>
      <if test="def5 != null">
        #{def5,jdbcType=VARCHAR},
      </if>
      <if test="def6 != null">
        #{def6,jdbcType=DOUBLE},
      </if>
    </trim>
    on duplicate key update
    <trim suffixOverrides=",">
      <if test="id != null">
        ID = #{id,jdbcType=BIGINT},
      </if>
      <if test="dr != null">
        dr = #{dr,jdbcType=INTEGER},
      </if>
      <if test="tenantId != null">
        TENANT_ID = #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="systemId != null">
        SYSTEM_ID = #{systemId,jdbcType=VARCHAR},
      </if>
      <if test="appId != null">
        APP_ID = #{appId,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null">
        LOGIN_NAME = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="loginType != null">
        LOGIN_TYPE = #{loginType,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        `STATUS` = #{status,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        USER_TYPE = #{userType,jdbcType=INTEGER},
      </if>
      <if test="lastLoginTime != null">
        LAST_LOGIN_TIME = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginToken != null">
        LAST_LOGIN_TOKEN = #{lastLoginToken,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        CREATED_BY = #{createdBy,jdbcType=BIGINT},
      </if>
      <if test="createdTime != null">
        CREATED_TIME = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        UPDATED_BY = #{updatedBy,jdbcType=BIGINT},
      </if>
      <if test="updatedTime != null">
        UPDATED_TIME = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginIp != null">
        LAST_LOGIN_IP = #{lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="def1 != null">
        def1 = #{def1,jdbcType=VARCHAR},
      </if>
      <if test="def2 != null">
        def2 = #{def2,jdbcType=VARCHAR},
      </if>
      <if test="def3 != null">
        def3 = #{def3,jdbcType=VARCHAR},
      </if>
      <if test="def5 != null">
        def5 = #{def5,jdbcType=VARCHAR},
      </if>
      <if test="def6 != null">
        def6 = #{def6,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
</mapper>