<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.redescooter.ses.service.mobile.b.dao.base.CorScooterRideStatMapper">
  <resultMap id="BaseResultMap" type="com.redescooter.ses.service.mobile.b.dm.base.CorScooterRideStat">
    <!--@mbg.generated-->
    <!--@Table cor_scooter_ride_stat-->
    <id column="id" property="id" />
    <result column="dr" property="dr" />
    <result column="tenant_id" property="tenantId" />
    <result column="scooter_id" property="scooterId" />
    <result column="total_duration" property="totalDuration" />
    <result column="co2_total" property="co2Total" />
    <result column="co2_increment" property="co2Increment" />
    <result column="saved_money" property="savedMoney" />
    <result column="svg_speed" property="svgSpeed" />
    <result column="read_time" property="readTime" />
    <result column="total_mileage" property="totalMileage" />
    <result column="first_ride_time" property="firstRideTime" />
    <result column="create_time" property="createTime" />
    <result column="create_by" property="createBy" />
    <result column="update_time" property="updateTime" />
    <result column="update_by" property="updateBy" />
    <result column="def1" property="def1" />
    <result column="def2" property="def2" />
    <result column="def3" property="def3" />
    <result column="def5" property="def5" />
    <result column="def6" property="def6" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, dr, tenant_id, scooter_id, total_duration, co2_total, co2_increment, saved_money, 
    svg_speed, read_time, total_mileage, first_ride_time, create_time, create_by, update_time, 
    update_by, def1, def2, def3, def5, def6
  </sql>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update cor_scooter_ride_stat
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="dr = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.dr}
        </foreach>
      </trim>
      <trim prefix="tenant_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.tenantId}
        </foreach>
      </trim>
      <trim prefix="scooter_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.scooterId}
        </foreach>
      </trim>
      <trim prefix="total_duration = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.totalDuration}
        </foreach>
      </trim>
      <trim prefix="co2_total = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.co2Total}
        </foreach>
      </trim>
      <trim prefix="co2_increment = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.co2Increment}
        </foreach>
      </trim>
      <trim prefix="saved_money = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.savedMoney}
        </foreach>
      </trim>
      <trim prefix="svg_speed = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.svgSpeed}
        </foreach>
      </trim>
      <trim prefix="read_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.readTime}
        </foreach>
      </trim>
      <trim prefix="total_mileage = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.totalMileage}
        </foreach>
      </trim>
      <trim prefix="first_ride_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.firstRideTime}
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.createTime}
        </foreach>
      </trim>
      <trim prefix="create_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.createBy}
        </foreach>
      </trim>
      <trim prefix="update_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.updateTime}
        </foreach>
      </trim>
      <trim prefix="update_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.updateBy}
        </foreach>
      </trim>
      <trim prefix="def1 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.def1}
        </foreach>
      </trim>
      <trim prefix="def2 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.def2}
        </foreach>
      </trim>
      <trim prefix="def3 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.def3}
        </foreach>
      </trim>
      <trim prefix="def5 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.def5}
        </foreach>
      </trim>
      <trim prefix="def6 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.def6}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id}
    </foreach>
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--@mbg.generated-->
    insert into cor_scooter_ride_stat
    (id, dr, tenant_id, scooter_id, total_duration, co2_total, co2_increment, saved_money, 
      svg_speed, read_time, total_mileage, first_ride_time, create_time, create_by, update_time, 
      update_by, def1, def2, def3, def5, def6)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id}, #{item.dr}, #{item.tenantId}, #{item.scooterId}, #{item.totalDuration}, 
        #{item.co2Total}, #{item.co2Increment}, #{item.savedMoney}, #{item.svgSpeed}, #{item.readTime}, 
        #{item.totalMileage}, #{item.firstRideTime}, #{item.createTime}, #{item.createBy}, 
        #{item.updateTime}, #{item.updateBy}, #{item.def1}, #{item.def2}, #{item.def3}, 
        #{item.def5}, #{item.def6})
    </foreach>
  </insert>
  <insert id="insertOrUpdate" parameterType="com.redescooter.ses.service.mobile.b.dm.base.CorScooterRideStat">
    <!--@mbg.generated-->
    insert into cor_scooter_ride_stat
    (id, dr, tenant_id, scooter_id, total_duration, co2_total, co2_increment, saved_money, 
      svg_speed, read_time, total_mileage, first_ride_time, create_time, create_by, update_time, 
      update_by, def1, def2, def3, def5, def6)
    values
    (#{id}, #{dr}, #{tenantId}, #{scooterId}, #{totalDuration}, #{co2Total}, #{co2Increment}, 
      #{savedMoney}, #{svgSpeed}, #{readTime}, #{totalMileage}, #{firstRideTime}, #{createTime}, 
      #{createBy}, #{updateTime}, #{updateBy}, #{def1}, #{def2}, #{def3}, #{def5}, #{def6}
      )
    on duplicate key update 
    id = #{id}, 
    dr = #{dr}, 
    tenant_id = #{tenantId}, 
    scooter_id = #{scooterId}, 
    total_duration = #{totalDuration}, 
    co2_total = #{co2Total}, 
    co2_increment = #{co2Increment}, 
    saved_money = #{savedMoney}, 
    svg_speed = #{svgSpeed}, 
    read_time = #{readTime}, 
    total_mileage = #{totalMileage}, 
    first_ride_time = #{firstRideTime}, 
    create_time = #{createTime}, 
    create_by = #{createBy}, 
    update_time = #{updateTime}, 
    update_by = #{updateBy}, 
    def1 = #{def1}, 
    def2 = #{def2}, 
    def3 = #{def3}, 
    def5 = #{def5}, 
    def6 = #{def6}
  </insert>
  <insert id="insertOrUpdateSelective" parameterType="com.redescooter.ses.service.mobile.b.dm.base.CorScooterRideStat">
    <!--@mbg.generated-->
    insert into cor_scooter_ride_stat
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="dr != null">
        dr,
      </if>
      <if test="tenantId != null">
        tenant_id,
      </if>
      <if test="scooterId != null">
        scooter_id,
      </if>
      <if test="totalDuration != null">
        total_duration,
      </if>
      <if test="co2Total != null">
        co2_total,
      </if>
      <if test="co2Increment != null">
        co2_increment,
      </if>
      <if test="savedMoney != null">
        saved_money,
      </if>
      <if test="svgSpeed != null">
        svg_speed,
      </if>
      <if test="readTime != null">
        read_time,
      </if>
      <if test="totalMileage != null">
        total_mileage,
      </if>
      <if test="firstRideTime != null">
        first_ride_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="def1 != null">
        def1,
      </if>
      <if test="def2 != null">
        def2,
      </if>
      <if test="def3 != null">
        def3,
      </if>
      <if test="def5 != null">
        def5,
      </if>
      <if test="def6 != null">
        def6,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id},
      </if>
      <if test="dr != null">
        #{dr},
      </if>
      <if test="tenantId != null">
        #{tenantId},
      </if>
      <if test="scooterId != null">
        #{scooterId},
      </if>
      <if test="totalDuration != null">
        #{totalDuration},
      </if>
      <if test="co2Total != null">
        #{co2Total},
      </if>
      <if test="co2Increment != null">
        #{co2Increment},
      </if>
      <if test="savedMoney != null">
        #{savedMoney},
      </if>
      <if test="svgSpeed != null">
        #{svgSpeed},
      </if>
      <if test="readTime != null">
        #{readTime},
      </if>
      <if test="totalMileage != null">
        #{totalMileage},
      </if>
      <if test="firstRideTime != null">
        #{firstRideTime},
      </if>
      <if test="createTime != null">
        #{createTime},
      </if>
      <if test="createBy != null">
        #{createBy},
      </if>
      <if test="updateTime != null">
        #{updateTime},
      </if>
      <if test="updateBy != null">
        #{updateBy},
      </if>
      <if test="def1 != null">
        #{def1},
      </if>
      <if test="def2 != null">
        #{def2},
      </if>
      <if test="def3 != null">
        #{def3},
      </if>
      <if test="def5 != null">
        #{def5},
      </if>
      <if test="def6 != null">
        #{def6},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id},
      </if>
      <if test="dr != null">
        dr = #{dr},
      </if>
      <if test="tenantId != null">
        tenant_id = #{tenantId},
      </if>
      <if test="scooterId != null">
        scooter_id = #{scooterId},
      </if>
      <if test="totalDuration != null">
        total_duration = #{totalDuration},
      </if>
      <if test="co2Total != null">
        co2_total = #{co2Total},
      </if>
      <if test="co2Increment != null">
        co2_increment = #{co2Increment},
      </if>
      <if test="savedMoney != null">
        saved_money = #{savedMoney},
      </if>
      <if test="svgSpeed != null">
        svg_speed = #{svgSpeed},
      </if>
      <if test="readTime != null">
        read_time = #{readTime},
      </if>
      <if test="totalMileage != null">
        total_mileage = #{totalMileage},
      </if>
      <if test="firstRideTime != null">
        first_ride_time = #{firstRideTime},
      </if>
      <if test="createTime != null">
        create_time = #{createTime},
      </if>
      <if test="createBy != null">
        create_by = #{createBy},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy},
      </if>
      <if test="def1 != null">
        def1 = #{def1},
      </if>
      <if test="def2 != null">
        def2 = #{def2},
      </if>
      <if test="def3 != null">
        def3 = #{def3},
      </if>
      <if test="def5 != null">
        def5 = #{def5},
      </if>
      <if test="def6 != null">
        def6 = #{def6},
      </if>
    </trim>
  </insert>
</mapper>