<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.redescooter.ses.service.mobile.b.dao.base.CorDriverScooterMapper">
  <resultMap id="BaseResultMap" type="com.redescooter.ses.service.mobile.b.dm.base.CorDriverScooter">
    <!--@mbg.generated-->
    <!--@Table cor_driver_scooter-->
    <id column="id" property="id" />
    <result column="dr" property="dr" />
    <result column="tenant_id" property="tenantId" />
    <result column="driver_id" property="driverId" />
    <result column="scooter_id" property="scooterId" />
    <result column="begin_time" property="beginTime" />
    <result column="end_time" property="endTime" />
    <result column="status" property="status" />
    <result column="mileage" property="mileage" />
    <result column="created_by" property="createdBy" />
    <result column="created_time" property="createdTime" />
    <result column="updated_by" property="updatedBy" />
    <result column="updated_time" property="updatedTime" />
    <result column="def1" property="def1" />
    <result column="def2" property="def2" />
    <result column="def3" property="def3" />
    <result column="def5" property="def5" />
    <result column="def6" property="def6" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, dr, tenant_id, driver_id, scooter_id, begin_time, end_time, `status`, mileage, 
    created_by, created_time, updated_by, updated_time, def1, def2, def3, def5, def6
  </sql>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update cor_driver_scooter
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="dr = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.dr}
        </foreach>
      </trim>
      <trim prefix="tenant_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.tenantId}
        </foreach>
      </trim>
      <trim prefix="driver_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.driverId}
        </foreach>
      </trim>
      <trim prefix="scooter_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.scooterId}
        </foreach>
      </trim>
      <trim prefix="begin_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.beginTime}
        </foreach>
      </trim>
      <trim prefix="end_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.endTime}
        </foreach>
      </trim>
      <trim prefix="`status` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.status}
        </foreach>
      </trim>
      <trim prefix="mileage = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.mileage}
        </foreach>
      </trim>
      <trim prefix="created_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.createdBy}
        </foreach>
      </trim>
      <trim prefix="created_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.createdTime}
        </foreach>
      </trim>
      <trim prefix="updated_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.updatedBy}
        </foreach>
      </trim>
      <trim prefix="updated_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.updatedTime}
        </foreach>
      </trim>
      <trim prefix="def1 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.def1}
        </foreach>
      </trim>
      <trim prefix="def2 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.def2}
        </foreach>
      </trim>
      <trim prefix="def3 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.def3}
        </foreach>
      </trim>
      <trim prefix="def5 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.def5}
        </foreach>
      </trim>
      <trim prefix="def6 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.def6}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id}
    </foreach>
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--@mbg.generated-->
    insert into cor_driver_scooter
    (id, dr, tenant_id, driver_id, scooter_id, begin_time, end_time, `status`, mileage, 
      created_by, created_time, updated_by, updated_time, def1, def2, def3, def5, def6
      )
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id}, #{item.dr}, #{item.tenantId}, #{item.driverId}, #{item.scooterId}, #{item.beginTime}, 
        #{item.endTime}, #{item.status}, #{item.mileage}, #{item.createdBy}, #{item.createdTime}, 
        #{item.updatedBy}, #{item.updatedTime}, #{item.def1}, #{item.def2}, #{item.def3}, 
        #{item.def5}, #{item.def6})
    </foreach>
  </insert>
  <insert id="insertOrUpdate" parameterType="com.redescooter.ses.service.mobile.b.dm.base.CorDriverScooter">
    <!--@mbg.generated-->
    insert into cor_driver_scooter
    (id, dr, tenant_id, driver_id, scooter_id, begin_time, end_time, `status`, mileage, 
      created_by, created_time, updated_by, updated_time, def1, def2, def3, def5, def6
      )
    values
    (#{id}, #{dr}, #{tenantId}, #{driverId}, #{scooterId}, #{beginTime}, #{endTime}, 
      #{status}, #{mileage}, #{createdBy}, #{createdTime}, #{updatedBy}, #{updatedTime}, 
      #{def1}, #{def2}, #{def3}, #{def5}, #{def6})
    on duplicate key update 
    id = #{id}, 
    dr = #{dr}, 
    tenant_id = #{tenantId}, 
    driver_id = #{driverId}, 
    scooter_id = #{scooterId}, 
    begin_time = #{beginTime}, 
    end_time = #{endTime}, 
    `status` = #{status}, 
    mileage = #{mileage}, 
    created_by = #{createdBy}, 
    created_time = #{createdTime}, 
    updated_by = #{updatedBy}, 
    updated_time = #{updatedTime}, 
    def1 = #{def1}, 
    def2 = #{def2}, 
    def3 = #{def3}, 
    def5 = #{def5}, 
    def6 = #{def6}
  </insert>
  <insert id="insertOrUpdateSelective" parameterType="com.redescooter.ses.service.mobile.b.dm.base.CorDriverScooter">
    <!--@mbg.generated-->
    insert into cor_driver_scooter
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="dr != null">
        dr,
      </if>
      <if test="tenantId != null">
        tenant_id,
      </if>
      <if test="driverId != null">
        driver_id,
      </if>
      <if test="scooterId != null">
        scooter_id,
      </if>
      <if test="beginTime != null">
        begin_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="mileage != null">
        mileage,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="updatedBy != null">
        updated_by,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
      <if test="def1 != null">
        def1,
      </if>
      <if test="def2 != null">
        def2,
      </if>
      <if test="def3 != null">
        def3,
      </if>
      <if test="def5 != null">
        def5,
      </if>
      <if test="def6 != null">
        def6,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id},
      </if>
      <if test="dr != null">
        #{dr},
      </if>
      <if test="tenantId != null">
        #{tenantId},
      </if>
      <if test="driverId != null">
        #{driverId},
      </if>
      <if test="scooterId != null">
        #{scooterId},
      </if>
      <if test="beginTime != null">
        #{beginTime},
      </if>
      <if test="endTime != null">
        #{endTime},
      </if>
      <if test="status != null">
        #{status},
      </if>
      <if test="mileage != null">
        #{mileage},
      </if>
      <if test="createdBy != null">
        #{createdBy},
      </if>
      <if test="createdTime != null">
        #{createdTime},
      </if>
      <if test="updatedBy != null">
        #{updatedBy},
      </if>
      <if test="updatedTime != null">
        #{updatedTime},
      </if>
      <if test="def1 != null">
        #{def1},
      </if>
      <if test="def2 != null">
        #{def2},
      </if>
      <if test="def3 != null">
        #{def3},
      </if>
      <if test="def5 != null">
        #{def5},
      </if>
      <if test="def6 != null">
        #{def6},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id},
      </if>
      <if test="dr != null">
        dr = #{dr},
      </if>
      <if test="tenantId != null">
        tenant_id = #{tenantId},
      </if>
      <if test="driverId != null">
        driver_id = #{driverId},
      </if>
      <if test="scooterId != null">
        scooter_id = #{scooterId},
      </if>
      <if test="beginTime != null">
        begin_time = #{beginTime},
      </if>
      <if test="endTime != null">
        end_time = #{endTime},
      </if>
      <if test="status != null">
        `status` = #{status},
      </if>
      <if test="mileage != null">
        mileage = #{mileage},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime},
      </if>
      <if test="updatedBy != null">
        updated_by = #{updatedBy},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime},
      </if>
      <if test="def1 != null">
        def1 = #{def1},
      </if>
      <if test="def2 != null">
        def2 = #{def2},
      </if>
      <if test="def3 != null">
        def3 = #{def3},
      </if>
      <if test="def5 != null">
        def5 = #{def5},
      </if>
      <if test="def6 != null">
        def6 = #{def6},
      </if>
    </trim>
  </insert>
</mapper>