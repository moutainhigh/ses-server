<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.redescooter.ses.service.scooter.dao.base.ScoScooterStatusMapper">
  <resultMap id="BaseResultMap" type="com.redescooter.ses.service.scooter.dm.base.ScoScooterStatus">
    <!--@mbg.generated-->
    <!--@Table sco_scooter_status-->
    <id column="id" property="id" />
    <result column="dr" property="dr" />
    <result column="scooter_ecu_id" property="scooterEcuId" />
    <result column="scooter_id" property="scooterId" />
    <result column="lock_status" property="lockStatus" />
    <result column="top_box_status" property="topBoxStatus" />
    <result column="longitule" property="longitule" />
    <result column="latitude" property="latitude" />
    <result column="geohash" property="geohash" />
    <result column="battery" property="battery" />
    <result column="cumulative_mileage" property="cumulativeMileage" />
    <result column="revision" property="revision" />
    <result column="created_by" property="createdBy" />
    <result column="created_time" property="createdTime" />
    <result column="updated_by" property="updatedBy" />
    <result column="updated_time" property="updatedTime" />
    <result column="def1" property="def1" />
    <result column="def2" property="def2" />
    <result column="def3" property="def3" />
    <result column="def5" property="def5" />
    <result column="def6" property="def6" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, dr, scooter_ecu_id, scooter_id, lock_status, top_box_status, longitule, latitude, 
    geohash, battery, cumulative_mileage, revision, created_by, created_time, updated_by, 
    updated_time, def1, def2, def3, def5, def6
  </sql>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update sco_scooter_status
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="dr = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.dr}
        </foreach>
      </trim>
      <trim prefix="scooter_ecu_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.scooterEcuId}
        </foreach>
      </trim>
      <trim prefix="scooter_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.scooterId}
        </foreach>
      </trim>
      <trim prefix="lock_status = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.lockStatus}
        </foreach>
      </trim>
      <trim prefix="top_box_status = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.topBoxStatus}
        </foreach>
      </trim>
      <trim prefix="longitule = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.longitule}
        </foreach>
      </trim>
      <trim prefix="latitude = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.latitude}
        </foreach>
      </trim>
      <trim prefix="geohash = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.geohash}
        </foreach>
      </trim>
      <trim prefix="battery = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.battery}
        </foreach>
      </trim>
      <trim prefix="cumulative_mileage = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.cumulativeMileage}
        </foreach>
      </trim>
      <trim prefix="revision = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.revision}
        </foreach>
      </trim>
      <trim prefix="created_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.createdBy}
        </foreach>
      </trim>
      <trim prefix="created_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.createdTime}
        </foreach>
      </trim>
      <trim prefix="updated_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.updatedBy}
        </foreach>
      </trim>
      <trim prefix="updated_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.updatedTime}
        </foreach>
      </trim>
      <trim prefix="def1 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.def1}
        </foreach>
      </trim>
      <trim prefix="def2 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.def2}
        </foreach>
      </trim>
      <trim prefix="def3 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.def3}
        </foreach>
      </trim>
      <trim prefix="def5 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.def5}
        </foreach>
      </trim>
      <trim prefix="def6 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.def6}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id}
    </foreach>
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--@mbg.generated-->
    insert into sco_scooter_status
    (id, dr, scooter_ecu_id, scooter_id, lock_status, top_box_status, longitule, latitude, 
      geohash, battery, cumulative_mileage, revision, created_by, created_time, updated_by, 
      updated_time, def1, def2, def3, def5, def6)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id}, #{item.dr}, #{item.scooterEcuId}, #{item.scooterId}, #{item.lockStatus}, 
        #{item.topBoxStatus}, #{item.longitule}, #{item.latitude}, #{item.geohash}, #{item.battery}, 
        #{item.cumulativeMileage}, #{item.revision}, #{item.createdBy}, #{item.createdTime}, 
        #{item.updatedBy}, #{item.updatedTime}, #{item.def1}, #{item.def2}, #{item.def3}, 
        #{item.def5}, #{item.def6})
    </foreach>
  </insert>
  <insert id="insertOrUpdate" parameterType="com.redescooter.ses.service.scooter.dm.base.ScoScooterStatus">
    <!--@mbg.generated-->
    insert into sco_scooter_status
    (id, dr, scooter_ecu_id, scooter_id, lock_status, top_box_status, longitule, latitude, 
      geohash, battery, cumulative_mileage, revision, created_by, created_time, updated_by, 
      updated_time, def1, def2, def3, def5, def6)
    values
    (#{id}, #{dr}, #{scooterEcuId}, #{scooterId}, #{lockStatus}, #{topBoxStatus}, #{longitule}, 
      #{latitude}, #{geohash}, #{battery}, #{cumulativeMileage}, #{revision}, #{createdBy}, 
      #{createdTime}, #{updatedBy}, #{updatedTime}, #{def1}, #{def2}, #{def3}, #{def5}, 
      #{def6})
    on duplicate key update 
    id = #{id}, 
    dr = #{dr}, 
    scooter_ecu_id = #{scooterEcuId}, 
    scooter_id = #{scooterId}, 
    lock_status = #{lockStatus}, 
    top_box_status = #{topBoxStatus}, 
    longitule = #{longitule}, 
    latitude = #{latitude}, 
    geohash = #{geohash}, 
    battery = #{battery}, 
    cumulative_mileage = #{cumulativeMileage}, 
    revision = #{revision}, 
    created_by = #{createdBy}, 
    created_time = #{createdTime}, 
    updated_by = #{updatedBy}, 
    updated_time = #{updatedTime}, 
    def1 = #{def1}, 
    def2 = #{def2}, 
    def3 = #{def3}, 
    def5 = #{def5}, 
    def6 = #{def6}
  </insert>
  <insert id="insertOrUpdateSelective" parameterType="com.redescooter.ses.service.scooter.dm.base.ScoScooterStatus">
    <!--@mbg.generated-->
    insert into sco_scooter_status
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="dr != null">
        dr,
      </if>
      <if test="scooterEcuId != null">
        scooter_ecu_id,
      </if>
      <if test="scooterId != null">
        scooter_id,
      </if>
      <if test="lockStatus != null">
        lock_status,
      </if>
      <if test="topBoxStatus != null">
        top_box_status,
      </if>
      <if test="longitule != null">
        longitule,
      </if>
      <if test="latitude != null">
        latitude,
      </if>
      <if test="geohash != null">
        geohash,
      </if>
      <if test="battery != null">
        battery,
      </if>
      <if test="cumulativeMileage != null">
        cumulative_mileage,
      </if>
      <if test="revision != null">
        revision,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="updatedBy != null">
        updated_by,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
      <if test="def1 != null">
        def1,
      </if>
      <if test="def2 != null">
        def2,
      </if>
      <if test="def3 != null">
        def3,
      </if>
      <if test="def5 != null">
        def5,
      </if>
      <if test="def6 != null">
        def6,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id},
      </if>
      <if test="dr != null">
        #{dr},
      </if>
      <if test="scooterEcuId != null">
        #{scooterEcuId},
      </if>
      <if test="scooterId != null">
        #{scooterId},
      </if>
      <if test="lockStatus != null">
        #{lockStatus},
      </if>
      <if test="topBoxStatus != null">
        #{topBoxStatus},
      </if>
      <if test="longitule != null">
        #{longitule},
      </if>
      <if test="latitude != null">
        #{latitude},
      </if>
      <if test="geohash != null">
        #{geohash},
      </if>
      <if test="battery != null">
        #{battery},
      </if>
      <if test="cumulativeMileage != null">
        #{cumulativeMileage},
      </if>
      <if test="revision != null">
        #{revision},
      </if>
      <if test="createdBy != null">
        #{createdBy},
      </if>
      <if test="createdTime != null">
        #{createdTime},
      </if>
      <if test="updatedBy != null">
        #{updatedBy},
      </if>
      <if test="updatedTime != null">
        #{updatedTime},
      </if>
      <if test="def1 != null">
        #{def1},
      </if>
      <if test="def2 != null">
        #{def2},
      </if>
      <if test="def3 != null">
        #{def3},
      </if>
      <if test="def5 != null">
        #{def5},
      </if>
      <if test="def6 != null">
        #{def6},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id},
      </if>
      <if test="dr != null">
        dr = #{dr},
      </if>
      <if test="scooterEcuId != null">
        scooter_ecu_id = #{scooterEcuId},
      </if>
      <if test="scooterId != null">
        scooter_id = #{scooterId},
      </if>
      <if test="lockStatus != null">
        lock_status = #{lockStatus},
      </if>
      <if test="topBoxStatus != null">
        top_box_status = #{topBoxStatus},
      </if>
      <if test="longitule != null">
        longitule = #{longitule},
      </if>
      <if test="latitude != null">
        latitude = #{latitude},
      </if>
      <if test="geohash != null">
        geohash = #{geohash},
      </if>
      <if test="battery != null">
        battery = #{battery},
      </if>
      <if test="cumulativeMileage != null">
        cumulative_mileage = #{cumulativeMileage},
      </if>
      <if test="revision != null">
        revision = #{revision},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime},
      </if>
      <if test="updatedBy != null">
        updated_by = #{updatedBy},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime},
      </if>
      <if test="def1 != null">
        def1 = #{def1},
      </if>
      <if test="def2 != null">
        def2 = #{def2},
      </if>
      <if test="def3 != null">
        def3 = #{def3},
      </if>
      <if test="def5 != null">
        def5 = #{def5},
      </if>
      <if test="def6 != null">
        def6 = #{def6},
      </if>
    </trim>
  </insert>
</mapper>