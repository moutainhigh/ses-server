<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.redescooter.ses.mobile.rps.dao.base.OpeStockPurchasMapper">
  <resultMap id="BaseResultMap" type="com.redescooter.ses.mobile.rps.dm.OpeStockPurchas">
    <!--@mbg.generated-->
    <!--@Table ope_stock_purchas-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="dr" jdbcType="INTEGER" property="dr" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="stock_id" jdbcType="BIGINT" property="stockId" />
    <result column="part_id" jdbcType="BIGINT" property="partId" />
    <result column="lot" jdbcType="VARCHAR" property="lot" />
    <result column="part_number" jdbcType="VARCHAR" property="partNumber" />
    <result column="serial_number" jdbcType="VARCHAR" property="serialNumber" />
    <result column="principal_id" jdbcType="BIGINT" property="principalId" />
    <result column="in_stock_time" jdbcType="TIMESTAMP" property="inStockTime" />
    <result column="revision" jdbcType="INTEGER" property="revision" />
    <result column="created_by" jdbcType="BIGINT" property="createdBy" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="updated_by" jdbcType="BIGINT" property="updatedBy" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
    <result column="def1" jdbcType="VARCHAR" property="def1" />
    <result column="def2" jdbcType="VARCHAR" property="def2" />
    <result column="def3" jdbcType="VARCHAR" property="def3" />
    <result column="def5" jdbcType="VARCHAR" property="def5" />
    <result column="def6" jdbcType="DOUBLE" property="def6" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, dr, `status`, stock_id, part_id, lot, part_number, serial_number, principal_id, 
    in_stock_time, revision, created_by, created_time, updated_by, updated_time, def1, 
    def2, def3, def5, def6
  </sql>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update ope_stock_purchas
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="dr = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.dr,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="`status` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.status,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="stock_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.stockId,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="part_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.partId,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="lot = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.lot,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="part_number = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.partNumber,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="serial_number = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.serialNumber,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="principal_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.principalId,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="in_stock_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.inStockTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="revision = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.revision,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="created_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.createdBy,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="created_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.createdTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="updated_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.updatedBy,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="updated_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.updatedTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="def1 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.def1,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="def2 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.def2,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="def3 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.def3,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="def5 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.def5,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="def6 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.def6,jdbcType=DOUBLE}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=BIGINT}
    </foreach>
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--@mbg.generated-->
    insert into ope_stock_purchas
    (id, dr, `status`, stock_id, part_id, lot, part_number, serial_number, principal_id, 
      in_stock_time, revision, created_by, created_time, updated_by, updated_time, def1, 
      def2, def3, def5, def6)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.dr,jdbcType=INTEGER}, #{item.status,jdbcType=VARCHAR}, 
        #{item.stockId,jdbcType=BIGINT}, #{item.partId,jdbcType=BIGINT}, #{item.lot,jdbcType=VARCHAR}, 
        #{item.partNumber,jdbcType=VARCHAR}, #{item.serialNumber,jdbcType=VARCHAR}, #{item.principalId,jdbcType=BIGINT}, 
        #{item.inStockTime,jdbcType=TIMESTAMP}, #{item.revision,jdbcType=INTEGER}, #{item.createdBy,jdbcType=BIGINT}, 
        #{item.createdTime,jdbcType=TIMESTAMP}, #{item.updatedBy,jdbcType=BIGINT}, #{item.updatedTime,jdbcType=TIMESTAMP}, 
        #{item.def1,jdbcType=VARCHAR}, #{item.def2,jdbcType=VARCHAR}, #{item.def3,jdbcType=VARCHAR}, 
        #{item.def5,jdbcType=VARCHAR}, #{item.def6,jdbcType=DOUBLE})
    </foreach>
  </insert>
  <insert id="insertOrUpdate" parameterType="com.redescooter.ses.mobile.rps.dm.OpeStockPurchas">
    <!--@mbg.generated-->
    insert into ope_stock_purchas
    (id, dr, `status`, stock_id, part_id, lot, part_number, serial_number, principal_id, 
      in_stock_time, revision, created_by, created_time, updated_by, updated_time, def1, 
      def2, def3, def5, def6)
    values
    (#{id,jdbcType=BIGINT}, #{dr,jdbcType=INTEGER}, #{status,jdbcType=VARCHAR}, #{stockId,jdbcType=BIGINT}, 
      #{partId,jdbcType=BIGINT}, #{lot,jdbcType=VARCHAR}, #{partNumber,jdbcType=VARCHAR}, 
      #{serialNumber,jdbcType=VARCHAR}, #{principalId,jdbcType=BIGINT}, #{inStockTime,jdbcType=TIMESTAMP}, 
      #{revision,jdbcType=INTEGER}, #{createdBy,jdbcType=BIGINT}, #{createdTime,jdbcType=TIMESTAMP}, 
      #{updatedBy,jdbcType=BIGINT}, #{updatedTime,jdbcType=TIMESTAMP}, #{def1,jdbcType=VARCHAR}, 
      #{def2,jdbcType=VARCHAR}, #{def3,jdbcType=VARCHAR}, #{def5,jdbcType=VARCHAR}, #{def6,jdbcType=DOUBLE}
      )
    on duplicate key update 
    id = #{id,jdbcType=BIGINT}, 
    dr = #{dr,jdbcType=INTEGER}, 
    `status` = #{status,jdbcType=VARCHAR}, 
    stock_id = #{stockId,jdbcType=BIGINT}, 
    part_id = #{partId,jdbcType=BIGINT}, 
    lot = #{lot,jdbcType=VARCHAR}, 
    part_number = #{partNumber,jdbcType=VARCHAR}, 
    serial_number = #{serialNumber,jdbcType=VARCHAR}, 
    principal_id = #{principalId,jdbcType=BIGINT}, 
    in_stock_time = #{inStockTime,jdbcType=TIMESTAMP}, 
    revision = #{revision,jdbcType=INTEGER}, 
    created_by = #{createdBy,jdbcType=BIGINT}, 
    created_time = #{createdTime,jdbcType=TIMESTAMP}, 
    updated_by = #{updatedBy,jdbcType=BIGINT}, 
    updated_time = #{updatedTime,jdbcType=TIMESTAMP}, 
    def1 = #{def1,jdbcType=VARCHAR}, 
    def2 = #{def2,jdbcType=VARCHAR}, 
    def3 = #{def3,jdbcType=VARCHAR}, 
    def5 = #{def5,jdbcType=VARCHAR}, 
    def6 = #{def6,jdbcType=DOUBLE}
  </insert>
  <insert id="insertOrUpdateSelective" parameterType="com.redescooter.ses.mobile.rps.dm.OpeStockPurchas">
    <!--@mbg.generated-->
    insert into ope_stock_purchas
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="dr != null">
        dr,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="stockId != null">
        stock_id,
      </if>
      <if test="partId != null">
        part_id,
      </if>
      <if test="lot != null">
        lot,
      </if>
      <if test="partNumber != null">
        part_number,
      </if>
      <if test="serialNumber != null">
        serial_number,
      </if>
      <if test="principalId != null">
        principal_id,
      </if>
      <if test="inStockTime != null">
        in_stock_time,
      </if>
      <if test="revision != null">
        revision,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="updatedBy != null">
        updated_by,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
      <if test="def1 != null">
        def1,
      </if>
      <if test="def2 != null">
        def2,
      </if>
      <if test="def3 != null">
        def3,
      </if>
      <if test="def5 != null">
        def5,
      </if>
      <if test="def6 != null">
        def6,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="dr != null">
        #{dr,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="stockId != null">
        #{stockId,jdbcType=BIGINT},
      </if>
      <if test="partId != null">
        #{partId,jdbcType=BIGINT},
      </if>
      <if test="lot != null">
        #{lot,jdbcType=VARCHAR},
      </if>
      <if test="partNumber != null">
        #{partNumber,jdbcType=VARCHAR},
      </if>
      <if test="serialNumber != null">
        #{serialNumber,jdbcType=VARCHAR},
      </if>
      <if test="principalId != null">
        #{principalId,jdbcType=BIGINT},
      </if>
      <if test="inStockTime != null">
        #{inStockTime,jdbcType=TIMESTAMP},
      </if>
      <if test="revision != null">
        #{revision,jdbcType=INTEGER},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=BIGINT},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=BIGINT},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="def1 != null">
        #{def1,jdbcType=VARCHAR},
      </if>
      <if test="def2 != null">
        #{def2,jdbcType=VARCHAR},
      </if>
      <if test="def3 != null">
        #{def3,jdbcType=VARCHAR},
      </if>
      <if test="def5 != null">
        #{def5,jdbcType=VARCHAR},
      </if>
      <if test="def6 != null">
        #{def6,jdbcType=DOUBLE},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=BIGINT},
      </if>
      <if test="dr != null">
        dr = #{dr,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=VARCHAR},
      </if>
      <if test="stockId != null">
        stock_id = #{stockId,jdbcType=BIGINT},
      </if>
      <if test="partId != null">
        part_id = #{partId,jdbcType=BIGINT},
      </if>
      <if test="lot != null">
        lot = #{lot,jdbcType=VARCHAR},
      </if>
      <if test="partNumber != null">
        part_number = #{partNumber,jdbcType=VARCHAR},
      </if>
      <if test="serialNumber != null">
        serial_number = #{serialNumber,jdbcType=VARCHAR},
      </if>
      <if test="principalId != null">
        principal_id = #{principalId,jdbcType=BIGINT},
      </if>
      <if test="inStockTime != null">
        in_stock_time = #{inStockTime,jdbcType=TIMESTAMP},
      </if>
      <if test="revision != null">
        revision = #{revision,jdbcType=INTEGER},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=BIGINT},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        updated_by = #{updatedBy,jdbcType=BIGINT},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="def1 != null">
        def1 = #{def1,jdbcType=VARCHAR},
      </if>
      <if test="def2 != null">
        def2 = #{def2,jdbcType=VARCHAR},
      </if>
      <if test="def3 != null">
        def3 = #{def3,jdbcType=VARCHAR},
      </if>
      <if test="def5 != null">
        def5 = #{def5,jdbcType=VARCHAR},
      </if>
      <if test="def6 != null">
        def6 = #{def6,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
</mapper>