server:
  port: 7971
spring:
  application:
    name: @project.artifactId@
  profiles:
    active: @profile-active@
  datasource:
    # mysql数据源
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=1000;druid.stat.logSlowSql=true
    driver-class-name: com.mysql.cj.jdbc.Driver
    filters: stat,wall,log4j
    initialSize: 5
    maxActive: 1000
    maxPoolPreparedStatementPerConnectionSize: 20
    maxWait: 60000
    minEvictableIdleTimeMillis: 300000
    minIdle: 10
    poolPreparedStatements: true
    testOnBorrow: true
    testOnReturn: false
    testWhileIdle: true
    timeBetweenEvictionRunsMillis: 60000
    useGlobalDataSourceStat: true
    validationQuery: SELECT 1
  jpa:
    database: mysql
    database-platform: org.hibernate.dialect.MySQL8Dialect
    hibernate:
      ddl-auto: validate
    show-sql: true
  #REDIS集群配置
  redis:
    cluster:
      max-redirects: 3  # 获取失败 最大重定向次数
    timeout: 6000  # 连接超时时长（毫秒）
    jedis:
      pool:
        max-active: 1000  # 连接池最大连接数（使用负值表示没有限制）
        max-wait: -1    # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-idle: 200      # 连接池中的最大空闲连接
        min-idle: 50       # 连接池中的最小空闲连接
  mail:
    host: smtp.qq.com
    password: '*********'
    port: 587
    username: 653942945@qq.com

dubbo:                                                                                                                  #DUBBO 配置
  application:
    id: @project.artifactId@
    name: @project.artifactId@
    qos-enable: false                                                                                                   #是否启动QoS
    qos-accept-foreign-ip: false                                                                                        #是否允许远程访问
    logger: log4j
  registry:
    check: false                                                                                                        #注册中心不存在时，是否报错
    group: ses
  scan:
    base-packages: com.redescooter.ses                                                                                  #服务暴露与发现消费所在的package
  provider:                                                                                                             #服务提供者缺省值配置
    timeout: 30000
    threads: 300
  consumer:                                                                                                             #服务消费者缺省值配置
    check: false                                                                                                        #启动时检查提供者是否存在，true报错，false忽略
    timeout: 20000
    filter: dubboAccessLogFilter
  protocol:
    port: -1
    threads: 300
    name: dubbo


